Algèbre PROPN Algèbre
linéaire ADJ linéaire
Alain PROPN Alain
Chillès PROPN Chillès
( PUNCT (
) PUNCT )
, PUNCT ,
, PUNCT ,
, PUNCT ,
Valentin PROPN Valentin
Vinoles PROPN Vinoles
, PUNCT ,
Adrien PROPN Adrien
Joseph PROPN Joseph
Remerciements PROPN Remerciements
Nous PRON nous
tenons VERB tenir ind_pre
à ADP à
remercier VERB remercier inf
chaudement ADV chaudement
tous ADJ tout
les DET le
professeurs NOUN professeur
qui PRON qui
nous PRON nous
ont VERB avoir
aidés VERB aider pas_cop
à ADP à
écrire VERB écrire inf
ce DET ce
livre NOUN livre
, PUNCT ,
notamment ADV notamment
en ADP en
corrigeant VERB corriger par_pre
les DET le
inévitables ADJ inévitable
fautes NOUN faute
. PUNCT .
Par ADP par
ordre NOUN ordre
chronologique ADJ chronologique
d' ADP de
intervention NOUN intervention
: PUNCT :
, PUNCT ,
, PUNCT ,
Marguerite NOUN marguerite
Rossillon PROPN Rossillon
, PUNCT ,
Vésale PROPN Vésale
Nicolas PROPN Nicolas
, PUNCT ,
Bastien PROPN Bastien
Marmet PROPN Marmet
, PUNCT ,
Geoffrey PROPN Geoffrey
Boutard PROPN Boutard
et CCONJ et
Rémi PROPN Rémi
Weidenfeld PROPN Weidenfeld
. PUNCT .
Préambule NOUN préambule
à ADP à
la DET le
première ADJ premier
version NOUN version
Je PRON je
tiens VERB tenir ind_pre
avant ADP avant
toutes DET tout
choses NOUN chose
à ADP à
remercier VERB remercier inf
ici ADV ici
le DET le
professeur NOUN professeur
pour ADP pour
son DET son
aide NOUN aide
précieuse ADJ précieux
lors ADV lors
de ADP de
la DET le
relecture NOUN relecture
de ADP de
ce DET ce
polycopié NOUN polycopié
. PUNCT .
Je PRON je
tiens VERB tenir ind_pre
aussi ADV aussi
à ADP à
remercier VERB remercier inf
mon DET mon
ami NOUN ami
Franz PROPN Franz
Ridde PROPN Ridde
, PUNCT ,
professeur NOUN professeur
en ADP en
MPSI NOUN mpsi
au ADP à
lycée NOUN lycée
du ADP de
Parc NOUN parc
de ADP de
Lyon PROPN Lyon
, PUNCT ,
qui PRON qui
m' PRON me
a VERB avoir
fourni VERB fournir pas_cop
un DET un
grand ADJ grand
nombre NOUN nombre
d' ADP de
exercices NOUN exercice
. PUNCT .
Ce DET ce
livre NOUN livre
ne ADV ne
est VERB être ind_pre
pas ADV pas
le DET le
cours NOUN cours
. PUNCT .
Il PRON il
servira VERB servir fut_sim
de ADP de
support NOUN support
au ADP à
cours NOUN cours
, PUNCT ,
de ADP de
guide NOUN guide
et CCONJ et
permettra VERB permettre fut_sim
, PUNCT ,
à ADP à
ceux PRON celui
qui PRON qui
le PRON le
souhaitent VERB souhaiter ind_pre
, PUNCT ,
d' ADP de
approfondir VERB approfondir inf
quelques DET quelque
sujets NOUN sujet
. PUNCT .
Il PRON il
ne ADV ne
s' PRON se
agit VERB agir ind_pre
en ADP en
aucun DET aucun
cas NOUN cas
d' ADP de
apprendre VERB apprendre inf
par ADP par
cur NOUN cur
son DET son
contenu NOUN contenu
. PUNCT .
D' ADP de
ailleurs ADV ailleurs
, PUNCT ,
l' DET le
apprentissage NOUN apprentissage
par ADP par
cur NOUN cur
est VERB être ind_pre
, PUNCT ,
en ADP en
général NOUN général
, PUNCT ,
une DET un
mauvaise ADJ mauvais
technique NOUN technique
d' ADP de
apprentissage NOUN apprentissage
pour ADP pour
les DET le
mathématiques NOUN mathématique
, PUNCT ,
qui PRON qui
proposent VERB proposer ind_pre
peu ADV peu
de ADP de
résultats NOUN résultat
, PUNCT ,
peu ADV peu
de ADP de
notions NOUN notion
, PUNCT ,
mais CCONJ mais
demandent VERB demander ind_pre
une DET un
compréhension NOUN compréhension
profonde ADJ profond
de ADP de
ces DET ce
notions NOUN notion
. PUNCT .
Le DET le
cours NOUN cours
est VERB être ind_pre
découpé VERB découper par_pas
en ADP en
quatre NUM quatre
parties NOUN party
: PUNCT :
espaces NOUN espace
vectoriels NOUN vectoriel
sur ADP sur
R NOUN r
ou CCONJ ou
C NOUN c
matrices NOUN matrice
et CCONJ et
systèmes NOUN système
linéaires ADJ linéaire
déterminant VERB déterminer par_pre
réduction NOUN réduction
des ADP de
endomorphismes NOUN endomorphisme
. PUNCT .
Les DET le
calculs NOUN calcul
et CCONJ et
les DET le
dessins NOUN dessin
ont VERB avoir
été VERB être pas_cop
, PUNCT ,
pour ADP pour
la DET le
plupart NOUN plupart
, PUNCT ,
effectués VERB effectuer par_pas
grâce NOUN grâce
aux DET aux
logiciels NOUN logiciel
Wxmaxima ADJ wxmaxima
et CCONJ et
Python NOUN python
, PUNCT ,
sympy NOUN sympy
, PUNCT ,
matplotlib ADJ matplotlib
, PUNCT ,
outils NOUN outil
d' ADP de
une DET un
très ADV très
grande ADJ grand
qualité NOUN qualité
, PUNCT ,
gratuits NOUN gratuit
et CCONJ et
fonctionnant VERB fonctionner par_pre
sur ADP sur
tout DET tout
système NOUN système
( PUNCT (
Linux NOUN linux
, PUNCT ,
Windows PROPN Windows
, PUNCT ,
Mac PROPN Mac
, PUNCT ,
Androïd PROPN Androïd
) PUNCT )
. PUNCT .
Signalons VERB signaler ind_pre
aussi ADV aussi
l' DET le
outil NOUN outil
de ADP de
géométrie NOUN géométrie
plane ADJ plan
Geogebra PROPN Geogebra
et CCONJ et
l' DET le
excellent ADJ excellent
Ipe PROPN Ipe
qui PRON qui
permet VERB permettre ind_pre
d' ADP de
annoter VERB annoter inf
en ADP en
LATEX NOUN latex
2 DET 2
les DET le
dessins NOUN dessin
produits VERB produire par_pas
directement ADV directement
ou CCONJ ou
à ADP à
l' DET le
aide NOUN aide
d' ADP de
un DET un
autre ADJ autre
outil NOUN outil
. PUNCT .
Alain PROPN Alain
Chillès PROPN Chillès
Préambule PROPN Préambule
à ADP à
la DET le
seconde ADJ second
version NOUN version
Wxmaxima ADJ wxmaxima
Python PRON python
, PUNCT ,
sympy NOUN sympy
, PUNCT ,
matplotlib ADJ matplotlib
Alain PROPN Alain
Chillès PROPN Chillès
Table NOUN table else
des ADP de
matières NOUN matière
1 NUM 1
Espaces NOUN espace
vectoriels NOUN vectoriel
sur ADP sur
R PROPN R
ou CCONJ ou
C NOUN c
2 NUM 2
Matrices NOUN matrice
et CCONJ et
systèmes NOUN système
linéaires ADJ linéaire
3 NUM 3
Déterminant NOUN déterminant
4 NUM 4
Réduction NOUN réduction
des ADP de
endomorphismes NOUN endomorphisme
5 NUM 5
Compléments NOUN complément
sur ADP sur
la DET le
réduction NOUN réduction
des ADP de
endomorphismes NOUN endomorphisme
Liste NOUN liste else
des ADP de
codes NOUN code
Wxmaxima ADJ wxmaxima
2.11 NOUN 2.11
Décomposition NOUN décomposition
d' ADP de
une DET un
permutation NOUN permutation
en ADP en
produit NOUN produit
de ADP de
transpositions NOUN transposition
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
Liste NOUN liste else
des ADP de
codes NOUN code
Python NOUN python
2.11 NUM 2.11
Décomposition NOUN décomposition
d' ADP de
une DET un
permutation NOUN permutation
en ADP en
produit NOUN produit
de ADP de
transpositions NOUN transposition
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
. PUNCT .
Liste NOUN liste else
des ADP de
figures NOUN figure
Ensembles NOUN ensemble
usuels ADJ usuel
Notations NOUN notation
usuelles ADJ usuel
Opérations NOUN opération
sur ADP sur
les DET le
ensembles NOUN ensemble
Signification NOUN signification
Ensemble NOUN ensemble
des ADP de
entiers NOUN entier
naturels ADJ naturel
Ensemble NOUN ensemble
des ADP de
entiers NOUN entier
relatifs ADJ relatif
Ensemble NOUN ensemble
des ADP de
entiers NOUN entier
naturels ADJ naturel
ou CCONJ ou
relatifs ADJ relatif
non ADV non
nuls ADJ nul
Ensemble NOUN ensemble
des ADP de
entiers NOUN entier
relatifs ADJ relatif
compris ADJ compris
entre ADP entre
p NOUN p
et CCONJ et
q X q
Ensemble NOUN ensemble
des ADP de
rationnels NOUN rationnel
Ensemble NOUN ensemble
des ADP de
réels NOUN réel
Ensemble NOUN ensemble
des ADP de
rationnels NOUN rationnel
ou CCONJ ou
des DET un
réels ADJ réel
strictement ADV strictement
positifs ADJ positif
Ensemble NOUN ensemble
des ADP de
complexes NOUN complexe
Ensemble NOUN ensemble
des ADP de
rationnels NOUN rationnel
ou CCONJ ou
des DET un
réels NOUN réel
ou CCONJ ou
des DET un
complexes ADJ complexe
non ADV non
nuls ADJ nul
Corps NOUN corps
commutatif ADJ commutatif
quelconque ADJ quelconque
( PUNCT (
désigne VERB désigner ind_pre
souvent ADV souvent
R ADJ r
ou CCONJ ou
C NOUN c
, PUNCT ,
en ADP en
ce DET ce
cas NOUN cas
, PUNCT ,
c' PRON ce
est VERB être ind_pre
signalé VERB signaler par_pas
en ADP en
début NOUN début
de ADP de
chapitre NOUN chapitre
) PUNCT )
Ensemble NOUN ensemble
des ADP de
n NOUN n
- PUNCT -
uplets NOUN uplet
( PUNCT (
si SCONJ si
n NOUN n
2 NUM 2
, PUNCT ,
on PRON on
parle VERB parler ind_pre
de ADP de
couple NOUN couple
et CCONJ et
si SCONJ si
n NOUN n
3 NUM 3
, PUNCT ,
on PRON on
parle VERB parler ind_pre
de ADP de
triplet NOUN triplet
) PUNCT )
un DET un
n NOUN n
- NOUN -
uplet NOUN uplet
sera VERB être fut_sim
parfois ADV parfois
noté VERB noter par_pas
x ADP x
au ADP à
lieu NOUN lieu
de ADP de
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xn NUM xn
) PUNCT )
, PUNCT ,
où PRON où
, PUNCT ,
pour ADP pour
tout DET tout
Ensemble NOUN ensemble
des ADP de
permutations NOUN permutation
de ADP de
l' DET le
ensemble NOUN ensemble
E NOUN e
Symbole NOUN symbole
de ADP de
Kronecker PROPN Kronecker
( PUNCT (
vaut VERB valoir ind_pre
1 NUM 1
, PUNCT ,
si SCONJ si
i VERB i
j PRON j
et CCONJ et
0 NUM 0
sinon ADV sinon
) PUNCT )
Groupe NOUN groupe else
des ADP de
permutations NOUN permutation
de ADP de
1 PRON 1
, PUNCT ,
n NOUN n
Signature VERB signature
de ADP de
la DET le
permutation NOUN permutation
Sn NOUN sn
Produit NOUN produit
cartésien ADJ cartésien
d' ADP de
ensembles NOUN ensemble
Produit NOUN produit
cartésien ADJ cartésien
des ADP de
n AUX n
ensembles NOUN ensemble
E1 ADJ e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
En ADP en
Produit NOUN produit
cartésien ADJ cartésien
de ADP de
la DET le
famille NOUN famille
d' ADP de
ensembles NOUN ensemble
( PUNCT (
Ei NOUN ei
) PUNCT )
iI PRON ii
, PUNCT ,
où PRON où
I ADJ i
est VERB être ind_pre
un DET un
ensemble NOUN ensemble
quelQ ADP quelq
conque ADJ conqu
les DET le
éléments NOUN élément
de ADP de
iI PRON ii
Ei PRON ei
sont VERB être ind_pre
notés VERB noter par_pas
( PUNCT (
xi PRON xi
) PUNCT )
iI PRON ii
où PRON où
, PUNCT ,
pour ADP pour
tout ADV tout
i DET i
I ADJ i
, PUNCT ,
xi CCONJ xi
Ei NOUN ei
Ensemble NOUN ensemble
des ADP de
Q NOUN q
familles NOUN famille
d' ADP de
éléments NOUN élément
de ADP de
l' DET le
ensemble NOUN ensemble
E NOUN e
indexées VERB indexer par_pas
par ADP par
l' DET le
ensemble NOUN ensemble
F NOUN f
( PUNCT (
correspond VERB correspondre ind_pre
à ADP à
iF X iF
Ei X Ei
où PRON où
tous ADJ tout
les DET le
Ei NOUN ei
sont VERB être ind_pre
égaux ADJ égal
à ADP à
E NOUN e
) PUNCT )
Classe NOUN classe else
d' ADP de
équivalence NOUN équivalence
de ADP de
x NOUN x
pour ADP pour
la DET le
relation NOUN relation
R NOUN r
Classe(x PROPN Classe(x
, PUNCT ,
R NOUN r
) PUNCT )
Quantificateurs PROPN Quantificateurs
Quantificateurs ADV quantificateurs
( PUNCT (
usage NOUN usage
) PUNCT )
Quel ADJ quel
que SCONJ que
soit VERB être sub_pre
. PUNCT .
. PUNCT .
. PUNCT .
( PUNCT (
ou CCONJ ou
Pour ADP pour
tout PRON tout
) PUNCT )
Il PRON il
existe VERB exister ind_pre
un DET un
unique ADJ unique
. PUNCT .
. PUNCT .
. PUNCT .
Il PRON il
ne ADV ne
existe VERB exister ind_pre
pas ADV pas
. PUNCT .
. PUNCT .
. PUNCT .
Signifie VERB signifier ind_pre
x NOUN x
E NOUN e
, PUNCT ,
y PRON y
E NOUN e
L' DET le
écriture NOUN écriture
x NOUN x
, PUNCT ,
y PRON y
E NOUN e
ne ADV ne
est VERB être ind_pre
pas ADV pas
correcte ADJ correct
! PUNCT !
Opérations PROPN Opérations
Signification NOUN signification
Multiplication NOUN multiplication
externe PROPN externe
Multiplication NOUN multiplication
des ADP de
matrices NOUN matrice
Notations NOUN notation
de ADP de
définitions NOUN définition
Introduit VERB introduire par_pas ind_pre
une DET un
nouvelle ADJ nouveau
notation NOUN notation
Introduit VERB introduire par_pas ind_pre
une DET un
nouvelle ADJ nouveau
définition NOUN définition
Espaces PROPN Espaces
vectoriels NOUN vectoriel
dim ADP dim
E NOUN e
ou CCONJ ou
dim(E NOUN dim(e
) PUNCT )
ou CCONJ ou
dimK NOUN dimk
E NOUN e
ou CCONJ ou
Ensemble NOUN ensemble
des ADP de
fonctions NOUN fonction
définies VERB définir par_pas
sur ADP sur
l' DET le
ensemble NOUN ensemble
X NOUN x
à ADP à
valeurs NOUN valeur
dans ADP dans
l' DET le
ensemble NOUN ensemble
Y VERB y
Ensemble NOUN ensemble
des ADP de
fonctions NOUN fonction
continues ADJ continu
définies VERB définir par_pas
sur ADP sur
l' DET le
intervalle NOUN intervalle
I ADJ i
R NOUN r
à ADP à
valeurs NOUN valeur
dans ADP dans
Ensemble NOUN ensemble
des ADP de
fonctions NOUN fonction
continues ADJ continu
par ADP par
morceaux NOUN morceau
définies VERB définir par_pas
sur ADP sur
l' DET le
intervalle NOUN intervalle
I ADJ i
R NOUN r
à ADP à
valeurs NOUN valeur
dans ADP dans
K NOUN k
R NOUN r
ou CCONJ ou
C NOUN c
Ensemble NOUN ensemble
des ADP de
fonctions NOUN fonction
de ADP de
classe NOUN classe
C NOUN c
k NOUN k
où PRON où
k NOUN k
N NOUN n
, PUNCT ,
définies VERB définir par_pas
sur ADP sur
l' DET le
intervalle NOUN intervalle
I ADJ i
R NOUN r
à ADP à
valeurs NOUN valeur
dans ADP dans
K NOUN k
R NOUN r
ou CCONJ ou
C NOUN c
Droite PROPN Droite
vectorielle ADJ vectoriel
engendrée VERB engendrer par_pas
par ADP par
x NOUN x
Sous-espace PROPN Sous-espace
vectoriel NOUN vectoriel
de ADP de
l' DET le
espace NOUN espace
vectoriel NOUN vectoriel
E NOUN e
engendré VERB engendrer par_pas
par ADP par
la DET le
partie NOUN partie
A ADP à
Somme PROPN Somme else
des ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
E1 ADJ e1
et CCONJ et
E2 ADV e2
d' ADP de
un DET un
même ADJ même
espace NOUN espace
vectoriel NOUN vectoriel
E NOUN e
Somme PROPN Somme else
des ADP de
Ei PROPN Ei
, PUNCT ,
où PRON où
( PUNCT (
Ei NOUN ei
) PUNCT )
iI PRON ii
est VERB être ind_pre
une DET un
famille NOUN famille
de ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
d' ADP de
un DET un
même ADJ même
espace NOUN espace
vectoriel NOUN vectoriel
E NOUN e
et CCONJ et
où PRON où
I ADJ i
est VERB être ind_pre
un DET un
ensemble NOUN ensemble
quelconque ADJ quelconque
Somme PROPN Somme else
directe ADJ direct
des ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
E1 ADJ e1
et CCONJ et
E2 ADV e2
d' ADP de
un DET un
même ADJ même
espace NOUN espace
vectoriel ADJ vectoriel
Somme PROPN Somme else
directe ADJ direct
des ADP de
Ei PROPN Ei
, PUNCT ,
où PRON où
( PUNCT (
Ei NOUN ei
) PUNCT )
iI PRON ii
est VERB être ind_pre
une DET un
famille NOUN famille
de ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
d' ADP de
un DET un
même ADV même
espace NOUN espace
vectoriel NOUN vectoriel
E NOUN e
et CCONJ et
où PRON où
I ADJ i
est VERB être ind_pre
un DET un
ensemble NOUN ensemble
quelconque ADJ quelconque
La DET le
dimension NOUN dimension
du ADP de
K NOUN k
- PROPN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
Ensemble NOUN ensemble
des ADP de
applications NOUN application
linéaires ADJ linéaire
de ADP de
l' DET le
espace NOUN espace
vectoriel VERB vectoriel
E NOUN e
dans ADP dans
l' DET le
espace NOUN espace
vectoriel NOUN vectoriel
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
) PUNCT )
, PUNCT ,
ensemble NOUN ensemble
des ADP de
endomorphismes NOUN endomorphisme
de ADP de
l' DET le
espace NOUN espace
vectoriel NOUN vectoriel
E NOUN e
Ensemble NOUN ensemble
des ADP de
automorphismes NOUN automorphisme
de ADP de
l' DET le
espace NOUN espace
vectoriel NOUN vectoriel
E NOUN e
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
, PUNCT ,
où PRON où
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel VERB vectoriel
c' PRON ce
est VERB être ind_pre
l' DET le
ensemble NOUN ensemble
des ADP de
formes NOUN forme
linéaires ADJ linéaire
sur ADP sur
l' DET le
espace NOUN espace
vectoriel NOUN vectoriel
E NOUN e
( PUNCT (
noter VERB noter inf
le DET le
? PUNCT ?
et CCONJ et
non ADV non
pas ADV pas
) PUNCT )
Noyau NOUN noyau
d' ADP de
une DET un
application NOUN application
linéaire ADJ linéaire
f PUNCT f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
F NOUN f
) PUNCT )
Image NOUN image
d' ADP de
une DET un
application NOUN application
linéaire ADJ linéaire
f PUNCT f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
F NOUN f
) PUNCT )
Application NOUN application
linéaire ADJ linéaire
identité NOUN identité
de ADP de
l' DET le
espace NOUN espace
vectoriel NOUN vectoriel
E NOUN e
Restriction NOUN restriction
d' ADP de
une DET un
application NOUN application
linéaire ADJ linéaire
f PUNCT f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
F NOUN f
) PUNCT )
à ADP à
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
Co-restriction NOUN co-restriction
d' ADP de
une DET un
application NOUN application
linéaire ADJ linéaire
f PUNCT f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
F NOUN f
) PUNCT )
à ADP à
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
F NOUN f
0 NUM 0
de ADP de
F NOUN f
contenant VERB contenir par_pre
Im(f NOUN im(f
) PUNCT )
Projection NOUN projection
sur ADP sur
F NOUN f
parallèlement ADV parallèlement
à ADP à
G PROPN G
, PUNCT ,
où PRON où
E NOUN e
F NOUN f
G NOUN gramme
Symétrie NOUN symétrie
par ADP par
rapport NOUN rapport
à ADP à
F NOUN f
parallèlement ADV parallèlement
à ADP à
G NOUN gramme
Rang NOUN rang
de ADP de
l' DET le
application NOUN application
linéaire ADJ linéaire
f NOUN f
Famille PROPN Famille
duale ADJ dual
de ADP de
la DET le
base NOUN base
( PUNCT (
ei NOUN ei
) PUNCT )
iI PRON ii
d' ADP de
un DET un
espace NOUN espace
vectoriel NOUN vectoriel
E NOUN e
Dimension NOUN dimension
d' ADP de
un DET un
supplémentaire ADJ supplémentaire
de ADP de
F NOUN f
Ensemble NOUN ensemble
des ADP de
solutions NOUN solution
du ADP de
système NOUN système
linéaire ADJ linéaire
S NOUN s
Matrice NOUN matrice
n AUX n
p NOUN p
dont PRON dont
les DET le
coefficients NOUN coefficient
sont VERB être ind_pre
les DET le
( PUNCT (
ai PROPN avoir
, PUNCT ,
j PROPN j
) PUNCT )
( PUNCT (
i X i
, PUNCT ,
j)1,n1,p PROPN j)1,n1,p
Im(A NOUN im(a
) PUNCT )
, PUNCT ,
Ker(A PROPN Ker(A
) PUNCT )
, PUNCT ,
rang(A NOUN rang(a
) PUNCT )
Déterminants PROPN Déterminants
Signification NOUN signification
Nous PRON nous
utiliserons VERB utiliser fut_sim
systématiquement ADV systématiquement
les DET le
crochets NOUN crochet
pour ADP pour
noter VERB noter inf
les DET le
matrices NOUN matrice
! PUNCT !
Ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
à ADP à
coefficients NOUN coefficient
dans ADP dans
l' DET le
ensemble NOUN ensemble
A PRON a
ayant VERB avoir par_pre
n ADV n
lignes NOUN ligne
et CCONJ et
p NOUN p
colonnes ADJ colonne
Matrice NOUN matrice
identité NOUN identité
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
Matrice NOUN matrice
nulle ADJ nul
de ADP de
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
Matrice NOUN matrice
du ADP de
vecteur NOUN vecteur
x NOUN x
E NOUN e
dans ADP dans
la DET le
base NOUN base
E NOUN e
de ADP de
l' DET le
espace NOUN espace
vectoriel NOUN vectoriel
E NOUN e
Matrice NOUN matrice
de ADP de
l' DET le
application NOUN application
linéaire ADJ linéaire
f PUNCT f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
dans ADP dans
les DET le
bases NOUN base
E NOUN e
de ADP de
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
de ADP de
Matrice NOUN matrice
de ADP de
l' DET le
endomorphisme NOUN endomorphisme
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
dans ADP dans
la DET le
base NOUN base
E NOUN e
de ADP de
E NOUN e
( PUNCT (
correspond VERB correspondre ind_pre
à ADP à
Matrice NOUN matrice
ne ADV ne
contenant VERB contenir par_pre
que SCONJ que
des DET un
0 PRON 0
sauf ADP sauf
sur ADP sur
la DET le
k PROPN k
- NOUN -
ième ADJ ième
ligne NOUN ligne
et CCONJ et
la DET le
l NOUN l
- PROPN -
ième ADJ ième
colonne NOUN colonne
où PRON où
il PRON il
y PRON y
a VERB avoir ind_pre
un DET un
1 NUM 1
( PUNCT (
Attention NOUN attention
: PUNCT :
les DET le
dimensions NOUN dimension
de ADP de
ces DET ce
matrices NOUN matrice
ne ADV ne
sont VERB être ind_pre
pas ADV pas
précisées VERB préciser par_pas
... PUNCT ...
) PUNCT )
Transposée VERB transposer par_pas
de ADP de
A NOUN a
, PUNCT ,
où PRON où
A VERB avoir ind_pre
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
Ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
symétriques ADJ symétrique
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
Ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
antisymétriques ADJ antisymétrique
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
Matrice NOUN matrice
diagonale ADJ diagonal
Ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
diagonales ADJ diagonal
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
Matrice NOUN matrice
du ADP de
système NOUN système
de ADP de
vecteurs NOUN vecteur
X NOUN x
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xp NOUN xp
) PUNCT )
E NOUN e
p NOUN p
( PUNCT (
p NOUN p
N ADJ n
) PUNCT )
dans ADP dans
la DET le
base NOUN base
E NOUN e
de ADP de
l' DET le
espace NOUN espace
vectoriel NOUN vectoriel
E NOUN e
MatE PROPN MatE else
( PUNCT (
B NOUN b
) PUNCT )
, PUNCT ,
matrice NOUN matrice
de ADP de
passage NOUN passage
de ADP de
E NOUN e
à ADP à
B NOUN b
Matrice NOUN matrice
de ADP de
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
ne ADV ne
contenant VERB contenir par_pre
que SCONJ que
des DET un
0 NUM 0
, PUNCT ,
sauf ADP sauf
lorsque SCONJ lorsque
i DET i
j PRON j
1 NUM 1
, PUNCT ,
r X r
où PRON où
il PRON il
y PRON y
a VERB avoir ind_pre
Matrice NOUN matrice
de ADP de
transvection NOUN transvection
dans ADP dans
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
( PUNCT (
où PRON où
p NOUN p
max(k PROPN max(k
, PUNCT ,
l NOUN l
) PUNCT )
) PUNCT )
, PUNCT ,
égale ADJ égal
à ADP à
Ip PROPN Ip
.Ek PROPN .Ek
, PUNCT ,
l DET l
Matrice NOUN matrice
de ADP de
dilatation NOUN dilatation
dans ADP dans
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
( PUNCT (
où PRON où
p NOUN p
n NOUN n
) PUNCT )
, PUNCT ,
égale ADJ égal
à ADP à
Ip PROPN Ip
( PUNCT (
1).Ek PROPN 1).Ek
, PUNCT ,
k X k
Matrice NOUN matrice
de ADP de
permutation NOUN permutation
Groupe NOUN groupe else
des ADP de
matrices NOUN matrice
inversibles ADJ inversible
d' ADP de
ordre NOUN ordre
n NOUN n
à ADP à
coefficients NOUN coefficient
dans ADP dans
K NOUN k
Ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
triangulaires ADJ triangulaire
supérieures ADJ supérieur
d' ADP de
ordre NOUN ordre
n NOUN n
à ADP à
coefficients NOUN coefficient
dans ADP dans
K NOUN k
Ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
triangulaires ADJ triangulaire
inférieures ADJ inférieur
d' ADP de
ordre NOUN ordre
n NOUN n
à ADP à
coefficients NOUN coefficient
dans ADP dans
K NOUN k
Trace NOUN trace else
de ADP de
la DET le
matrice NOUN matrice
A NOUN a
Image NOUN image
, PUNCT ,
noyau NOUN noyau
et CCONJ et
rang NOUN rang
d' ADP de
une DET un
matrice NOUN matrice
A NOUN a
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
Produit NOUN produit
de ADP de
Kronecker PROPN Kronecker
des ADP de
matrices NOUN matrice
A NOUN a
et CCONJ et
B NOUN b
A NOUN a
semblable ADJ semblable
à ADP à
B NOUN b
A NOUN a
équivalente ADJ équivalent
à ADP à
B NOUN b
Cofacteuri PROPN Cofacteuri
, PUNCT ,
j PROPN j
( PUNCT (
A NOUN a
) PUNCT )
Déterminant X Déterminant
de ADP de
la DET le
matrice NOUN matrice
Déterminant VERB déterminer par_pre
des ADP de
vecteurs NOUN vecteur
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xn VERB xn
) PUNCT )
dans ADP dans
la DET le
base NOUN base
E NOUN e
Déterminant VERB déterminer par_pre
d' ADP de
un DET un
endomorphisme NOUN endomorphisme
u ADP u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
Cofacteur PROPN Cofacteur
d' ADP de
indices NOUN indice
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
de ADP de
la DET le
matrice NOUN matrice
A NOUN a
Comatrice PROPN Comatrice
de ADP de
A X A
Déterminant VERB déterminer par_pre
de ADP de
Vandermonde PROPN Vandermonde
Ensemble NOUN ensemble
des ADP de
formes NOUN forme
p NOUN p
- PUNCT -
linéaires ADJ linéaire
de ADP de
E NOUN e
dans ADP dans
K NOUN k
Ensemble NOUN ensemble
des ADP de
formes NOUN forme
p NOUN p
- PUNCT -
linéaires ADJ linéaire
symétriques ADJ symétrique
de ADP de
E NOUN e
dans ADP dans
K NOUN k
Ensemble NOUN ensemble
des ADP de
formes NOUN forme
p NOUN p
- PUNCT -
linéaires ADJ linéaire
antisymétriques ADJ antisymétrique
de ADP de
E NOUN e
dans ADP dans
K NOUN k
Réduction NOUN réduction
des ADP de
endomorphismes NOUN endomorphisme
Sp(u PROPN Sp(u
) PUNCT )
ou CCONJ ou
Sp(A PROPN Sp(A
) PUNCT )
multu PROPN multu
( PUNCT (
) PUNCT )
ou CCONJ ou
multA ADJ multa
( PUNCT (
) PUNCT )
Espace PROPN Espace else
propre ADJ propre
de ADP de
u ADP u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
ou CCONJ ou
A NOUN a
pour ADP pour
la DET le
valeur NOUN valeur
propre ADJ propre
K NOUN k
Spectre NOUN spectre
de ADP de
u ADP u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
ou CCONJ ou
A NOUN a
Polynôme ADJ polynôm
caractéristique ADJ caractéristique
de ADP de
u ADP u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
ou CCONJ ou
A NOUN a
Multiplicité NOUN multiplicité
de ADP de
dans ADP dans
u NOUN u
ou CCONJ ou
A NOUN a
Algèbre PROPN Algèbre
engendrée VERB engendrer par_pas
par ADP par
u NOUN u
ou CCONJ ou
A ADP à
Signification NOUN signification
Polynôme ADJ polynôm
d' ADP de
endomorphisme NOUN endomorphisme
ou CCONJ ou
de ADP de
matrice NOUN matrice
Idéal ADJ idéal
annulateur ADJ annulateur
de ADP de
u NOUN u
ou CCONJ ou
A ADP à
Polynôme NOUN polynôme
minimal ADJ minimal
de ADP de
u NOUN u
ou CCONJ ou
A ADP à
Matrice NOUN matrice
compagnon NOUN compagnon
du ADP de
polynôme NOUN polynôme
P NOUN p
Norme NOUN norme else
subordonnée ADJ subordonner
de ADP de
u NOUN u
ou CCONJ ou
A ADP à
Espace PROPN Espace else
des ADP de
endomorphismes NOUN endomorphisme
continus VERB continus
de ADP de
E NOUN e
Rayon PROPN Rayon
spectral NOUN spectral
de ADP de
u NOUN u
ou CCONJ ou
A NOUN a
Commutant VERB commuter par_pre
de ADP de
u PROPN u
ou CCONJ ou
A ADP à
Espace PROPN Espace else
caractéristique ADJ caractéristique
de ADP de
u NOUN u
ou CCONJ ou
A ADP à
Chapitre NOUN chapitre else
1 NUM 1
Espaces NOUN espace
vectoriels NOUN vectoriel
sur ADP sur
R PROPN R
ou CCONJ ou
C NOUN c
Dans ADP dans
ce DET ce
chapitre NOUN chapitre
, PUNCT ,
nous PRON nous
noterons VERB noter fut_sim
K NOUN k
les DET le
corps NOUN corps
R NOUN r
ou CCONJ ou
C. PROPN C.
Cela PRON cela
signifie VERB signifier ind_pre
alors ADV alors
que SCONJ que
le DET le
résultat NOUN résultat
énoncé ADJ énoncer
est VERB être ind_pre
vrai ADJ vrai
dans ADP dans
R NOUN r
et CCONJ et
dans ADP dans
C. NOUN c.
Généralités NOUN généralité
Premières DET premières
définitions NOUN définition
Soit VERB être sub_pre
E NOUN e
un DET un
ensemble NOUN ensemble
non ADV non
vide ADJ vide
, PUNCT ,
on PRON on
dit VERB dire ind_pre
que SCONJ que
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
( PUNCT (
ou CCONJ ou
un DET un
espace NOUN espace
vectoriel VERB vectoriel
sur ADP sur
K NOUN k
) PUNCT )
si SCONJ si
il PRON il
vérifie VERB vérifier ind_pre
les DET le
axiomes NOUN axiome
suivants ADJ suivant
: PUNCT :
1 NUM 1
. PUNCT .
Il PRON il
est VERB être ind_pre
muni VERB munir par_pas
d' ADP de
une DET un
opération NOUN opération
interne ADJ interne
a VERB avoir
, PUNCT ,
notée VERB noter pas_cop
et CCONJ et
appelée VERB appeler par_pas
addition NOUN addition
qui PRON qui
vérifie VERB vérifier ind_pre
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
est VERB être ind_pre
associative ADJ associatif
: PUNCT :
( PUNCT (
b NOUN b
) PUNCT )
possède VERB posséder ind_pre
un DET un
élément NOUN élément
neutre ADJ neutre
noté VERB noter par_pas
0E NUM 0E
( PUNCT (
ou CCONJ ou
0 PRON 0
lorsqu' SCONJ lorsque
il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
pas ADV pas
d' ADP de
ambiguïté NOUN ambiguïté
) PUNCT )
: PUNCT :
( PUNCT (
c NOUN c
) PUNCT )
Tout DET tout
élément NOUN élément
de ADP de
E NOUN e
possède VERB posséder ind_pre
un DET un
unique ADJ unique
opposé ADJ opposer
: PUNCT :
de ADP de
plus ADV plus
, PUNCT ,
on PRON on
note VERB noter ind_pre
l' DET le
opération NOUN opération
: PUNCT :
( PUNCT (
d NOUN d
) PUNCT )
est VERB être ind_pre
commutative ADJ commutatif
: PUNCT :
2 NUM 2
. PUNCT .
Il PRON il
est VERB être ind_pre
muni VERB munir par_pas
d' ADP de
une DET un
opération NOUN opération
externe ADJ externe
b NOUN b
, PUNCT ,
notée VERB noter par_pas
. PUNCT .
et CCONJ et
appelée VERB appeler par_pas
multiplication NOUN multiplication
par ADP par
un DET un
scalaire NOUN scalaire
qui PRON qui
vérifie VERB vérifier ind_pre
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
. PUNCT .
est VERB être ind_pre
distributive VERB distributive
par ADP par
rapport NOUN rapport
à ADP à
l' DET le
addition NOUN addition
de ADP de
E NOUN e
: PUNCT :
( PUNCT (
b NOUN b
) PUNCT )
. PUNCT .
est VERB être ind_pre
distributive VERB distributive
par ADP par
rapport NOUN rapport
à ADP à
l' DET le
addition NOUN addition
de ADP de
K NOUN k
: PUNCT :
( PUNCT (
c NOUN c
) PUNCT )
. PUNCT .
est VERB être ind_pre
distributive VERB distributive
par ADP par
rapport NOUN rapport
à ADP à
la DET le
multiplication NOUN multiplication
de ADP de
K NOUN k
: PUNCT :
( PUNCT (
d NOUN d
) PUNCT )
L' DET le
unité NOUN unité
1 NUM 1
du ADP de
corps NOUN corps
est VERB être ind_pre
respectée VERB respecter par_pas
: PUNCT :
Les DET le
éléments NOUN élément
de ADP de
E NOUN e
s' PRON se
appellent VERB appeler ind_pre
alors ADV alors
vecteurs NOUN vecteur
et CCONJ et
les DET le
éléments NOUN élément
de ADP de
K NOUN k
scalaires ADJ scalaire
. PUNCT .
a. VERB avoir ind_pre
Cela PRON cela
signifie VERB signifier ind_pre
que SCONJ que
si SCONJ si
x ADP x
et CCONJ et
y PRON y
sont VERB être ind_pre
dans ADP dans
E NOUN e
, PUNCT ,
alors ADV alors
x NOUN x
y PRON y
est VERB être ind_pre
dans ADP dans
E. PROPN E.
b. PUNCT b.
Cela PRON cela
signifie VERB signifier ind_pre
que SCONJ que
si SCONJ si
est VERB être ind_pre
un DET un
scalaire NOUN scalaire
( PUNCT (
il PRON il
est VERB être ind_pre
dans ADP dans
K NOUN k
) PUNCT )
et CCONJ et
si SCONJ si
x ADP x
est VERB être ind_pre
dans ADP dans
E NOUN e
, PUNCT ,
alors ADV alors
.x PRON .x
est VERB être ind_pre
dans ADP dans
E. PROPN E.
Que PRON que
veut VERB vouloir ind_pre
-on PRON on
faire VERB faire inf
? PUNCT ?
Garder VERB garder inf
l' DET le
essentiel NOUN essentiel
, PUNCT ,
et CCONJ et
éliminer VERB éliminer inf
les DET le
coordonnées NOUN coordonnée
. PUNCT .
Pour ADP pour
la DET le
somme NOUN somme
de ADP de
deux NUM deux
vecteurs NOUN vecteur
, PUNCT ,
voir VERB voir inf
la DET le
figure NOUN figure
1.1 NUM 1.1
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
page NOUN page
. PUNCT .
Pour ADP pour
le DET le
produit NOUN produit
d' ADP de
un DET un
vecteur NOUN vecteur
par ADP par
un DET un
scalaire NOUN scalaire
, PUNCT ,
voir VERB voir inf
la DET le
figure NOUN figure
1.2 NUM 1.2
, PUNCT ,
page NOUN page
suivante ADJ suivant
. PUNCT .
Figure NOUN figure else
1.1 NUM 1.1
Somme PROPN Somme else
de ADP de
deux NUM deux
vecteurs NOUN vecteur
1 NUM 1
. PUNCT .
Le DET le
corps NOUN corps
K NOUN k
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
2 NUM 2
. PUNCT .
Si SCONJ si
I ADJ i
est VERB être ind_pre
un DET un
intervalle NOUN intervalle
de ADP de
R NOUN r
et CCONJ et
si SCONJ si
k AUX k
N ADJ n
, PUNCT ,
alors ADV alors
les DET le
ensembles NOUN ensemble
suivants ADJ suivant
sont VERB être ind_pre
des DET un
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
: PUNCT :
f NOUN f
: PUNCT :
I NOUN i
K NOUN k
, PUNCT ,
de ADP de
classe NOUN classe
C NOUN c
k NOUN k
3 NUM 3
. PUNCT .
De ADP de
même ADV même
, PUNCT ,
l' DET le
ensemble NOUN ensemble
suivant ADJ suivant
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
: PUNCT :
( PUNCT (
I NOUN i
, PUNCT ,
K NOUN k
) PUNCT )
f NOUN f
: PUNCT :
I NOUN i
K NOUN k
, PUNCT ,
continue VERB continuer ind_pre
par ADP par
morceaux NOUN morceau
4 NUM 4
. PUNCT .
L' DET le
ensemble NOUN ensemble
des ADP de
fonctions NOUN fonction
polynomiales ADJ polynomial
à ADP à
coefficients NOUN coefficient
dans ADP dans
K NOUN k
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel VERB vectoriel
de ADP de
même ADV même
que SCONJ que
les DET le
fonctions NOUN fonction
rationnelles ADJ rationnel
à ADP à
coefficients NOUN coefficient
dans ADP dans
K. PROPN K.
5 NUM 5
. PUNCT .
Tout ADV tout
C NOUN c
- ADJ -
espace PROPN espace
vectoriel ADJ vectoriel
est VERB être ind_pre
un DET un
R NOUN r
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
( PUNCT (
la DET le
réciproque NOUN réciproque
est VERB être ind_pre
fausse ADJ faux
) PUNCT )
. PUNCT .
Figure VERB figurer ind_pre
1.2 NUM 1.2
Produit NOUN produit
d' ADP de
un DET un
vecteur NOUN vecteur
par ADP par
un DET un
scalaire NOUN scalaire
6 NUM 6
. PUNCT .
Si SCONJ si
X NOUN x
est VERB être ind_pre
un DET un
ensemble NOUN ensemble
et CCONJ et
si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
alors ADV alors
F NOUN f
( PUNCT (
X NOUN x
, PUNCT ,
E NOUN e
) PUNCT )
f NOUN f
: PUNCT :
X NOUN x
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Combinaison NOUN combinaison
linéaire ADJ linéaire
d' ADP de
un DET un
nombre NOUN nombre
fini VERB finir par_pas
de ADP de
vecteurs NOUN vecteur
Soit VERB être sub_pre
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xn PROPN xn
) PUNCT )
n NUM ne
vecteurs NOUN vecteur
de ADP de
E NOUN e
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
combinaison NOUN combinaison
linéaire ADJ linéaire
de ADP de
ces DET ce
vecteurs NOUN vecteur
toute DET tout
expression NOUN expression
de ADP de
la DET le
Combinaison NOUN combinaison
linéaire ADJ linéaire
d' ADP de
un DET un
nombre NOUN nombre
quelconque ADJ quelconque
de ADP de
vecteurs NOUN vecteur
Plus ADV plus
généralement ADV généralement
, PUNCT ,
si SCONJ si
on PRON on
a VERB avoir ind_pre
un DET un
nombre NOUN nombre
quelconque ADJ quelconque
de ADP de
vecteurs NOUN vecteur
de ADP de
E NOUN e
, PUNCT ,
( PUNCT (
xi PRON xi
) PUNCT )
iI PRON ii
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
combinaison NOUN combinaison
linéaire ADJ linéaire
de ADP de
ces DET ce
vecteurs NOUN vecteur
, PUNCT ,
toute DET tout
combinaison NOUN combinaison
linéaire ADJ linéaire
d' ADP de
une DET un
sous-famille NOUN sous-famille
finie VERB finir par_pas
( PUNCT (
xi1 NOUN xi1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xin PROPN xin
) PUNCT )
1 NUM 1
. PUNCT .
Dans ADP dans
R2 PROPN R2
, PUNCT ,
tout ADV tout
vecteur NOUN vecteur
est VERB être ind_pre
combinaison NOUN combinaison
linéaire ADJ linéaire
de ADP de
2 NUM 2
. PUNCT .
Dans ADP dans
C NOUN c
considéré VERB considérer par_pas
comme ADP comme
un DET un
R NOUN r
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
tout DET tout
nombre NOUN nombre
complexe ADJ complexe
est VERB être ind_pre
combinaison NOUN combinaison
linéaire ADJ linéaire
de ADP de
1 NUM 1
et CCONJ et
i NOUN i
, PUNCT ,
mais CCONJ mais
aussi ADV aussi
de ADP de
1 NUM 1
et CCONJ et
exp(2 PROPN exp(2
i PROPN i
3 NUM 3
) PUNCT )
j NOUN j
, PUNCT ,
ou CCONJ ou
de ADP de
i NOUN i
et CCONJ et
j NOUN j
, PUNCT ,
ou CCONJ ou
de ADP de
1 PRON 1
, PUNCT ,
i ADJ i
et CCONJ et
j NOUN j
, PUNCT ,
etc. ADV etc.
3 NUM 3
. PUNCT .
Dans ADP dans
le DET le
K NOUN k
- NOUN -
espace PROPN espace
vectoriel VERB vectoriel
des ADP de
fonctions NOUN fonction
polynomiales ADJ polynomial
, PUNCT ,
toute DET tout
fonction NOUN fonction
polynomiale ADJ polynomial
est VERB être ind_pre
combinaison VERB combinaison
linéaire ADJ linéaire
de ADP de
la DET le
famille NOUN famille
: PUNCT :
On PRON on
ne ADV ne
sait VERB savoir ind_pre
faire VERB faire inf
que SCONJ que
des DET un
sommes NOUN somme
finies ADJ fini
de ADP de
vecteurs NOUN vecteur
! PUNCT !
D' ADP de
où PRON où
la DET le
présence NOUN présence
du ADP de
n. NOUN n.
Lorsque SCONJ lorsque
n NOUN n
0 NUM 0
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
( PUNCT (
par ADP par
convention NOUN convention
) PUNCT )
0E NUM 0E
. PUNCT .
Produit NOUN produit
fini VERB finir par_pas
d' ADP de
espaces NOUN espace
vectoriels NOUN vectoriel
Soit VERB être sub_pre
E1 NOUN e1
, PUNCT ,
... PUNCT ...
, PUNCT ,
En ADP en
des DET un
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
l' DET le
ensemble NOUN ensemble
E1 NOUN e1
En PRON en
est VERB être ind_pre
alors ADV alors
muni VERB munir par_pas
d' ADP de
une DET un
structure NOUN structure
de ADP de
K NOUN k
- PROPN -
espace PROPN espace
vectoriel NOUN vectoriel
définie VERB définir par_pas
par ADP par
( PUNCT (
avec ADP avec
des DET un
notations NOUN notation
évidentes ADJ évident
) PUNCT )
: PUNCT :
Produit NOUN produit
quelconque ADJ quelconque
d' ADP de
espaces NOUN espace
vectoriels NOUN vectoriel
Si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
I ADJ i
un DET un
ensemble NOUN ensemble
( PUNCT (
d' ADP de
indices NOUN indice
) PUNCT )
, PUNCT ,
alors ADV alors
, PUNCT ,
de ADP de
même ADV même
, PUNCT ,
E NOUN e
I ADJ i
est VERB être ind_pre
muni VERB munir par_pas
d' ADP de
une DET un
structure NOUN structure
de ADP de
K NOUN k
- PROPN -
espace PROPN espace
vectoriel ADJ vectoriel
définie VERB définir par_pas
par ADP par
( PUNCT (
avec ADP avec
des DET un
notations NOUN notation
évidentes ADJ évident
) PUNCT )
: PUNCT :
1 NUM 1
. PUNCT .
Kn PROPN Kn
( PUNCT (
l' DET le
ensemble NOUN ensemble
des ADP de
n NOUN n
- NUM -
uplets NOUN uplet
à ADP à
coefficients NOUN coefficient
dans ADP dans
K NOUN k
) PUNCT )
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
2 NUM 2
. PUNCT .
KN PROPN KN
( PUNCT (
l' DET le
ensemble NOUN ensemble
des ADP de
suites NOUN suite
de ADP de
K NOUN k
indexées VERB indexer par_pas
par ADP par
N NOUN n
) PUNCT )
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
1.1.1 NOUN 1.1.1
Démontrer VERB démontrer inf
que SCONJ que
, PUNCT ,
dans ADP dans
tout DET tout
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
les DET le
relations NOUN relation
suivantes ADJ suivant
sont VERB être ind_pre
vérifiées VERB vérifier par_pas
: PUNCT :
1.1.2 NOUN 1.1.2
Parmi ADP parmi
les DET le
ensembles NOUN ensemble
suivants ADJ suivant
, PUNCT ,
lesquels PRON lequel
, PUNCT ,
munis ADJ munir
des ADP de
opérations NOUN opération
usuelles ADJ usuel
, PUNCT ,
sont VERB être ind_pre
des DET un
R NOUN r
- PUNCT -
espaces NOUN espace
vectoriels NOUN vectoriel
? PUNCT ?
Sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
F NOUN f
E NOUN e
, PUNCT ,
on PRON on
dit VERB dire ind_pre
que SCONJ que
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
si SCONJ si
: PUNCT :
F NOUN f
est VERB être ind_pre
stable ADJ stable
par ADP par
( PUNCT (
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
que SCONJ que
pour ADP pour
tout ADV tout
( PUNCT (
x NOUN x
, PUNCT ,
y PRON y
) PUNCT )
F NOUN f
2 NUM 2
, PUNCT ,
x ADP x
y PRON y
F NOUN f
) PUNCT )
F NOUN f
est VERB être ind_pre
stable ADJ stable
par ADP par
. PUNCT .
( PUNCT (
c' PRON ce
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
que SCONJ que
pour ADP pour
tout ADV tout
x NOUN x
F ADJ f
et CCONJ et
tout DET tout
K NOUN k
, PUNCT ,
.x NOUN .
F NOUN f
) PUNCT )
. PUNCT .
1 NUM 1
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel VERB vectoriel
tel ADJ tel
que SCONJ que
E NOUN e
6 NUM 6
0E NUM 0E
et CCONJ et
soit VERB être sub_pre
x ADP x
E NOUN e
0E NUM 0E
. PUNCT .
La DET le
droite NOUN droite
vectorielle ADJ vectoriel
dirigée VERB diriger par_pas
par ADP par
x NOUN x
, PUNCT ,
notée VERB noter par_pas
K.x ADV k.x
, PUNCT ,
est VERB être ind_pre
le DET le
sous-ensemble NOUN sous-ensemble
de ADP de
E NOUN e
défini VERB définir par_pas
par ADP par
Les DET le
droites ADJ droit
vectorielles ADJ vectoriel
sont VERB être ind_pre
des DET un
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E. PROPN E.
2 NUM 2
. PUNCT .
L' DET le
ensemble NOUN ensemble
des ADP de
fonctions NOUN fonction
polynomiales ADJ polynomial
de ADP de
R PROPN R
dans ADP dans
K NOUN k
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
C NOUN c
0 NUM 0
( PUNCT (
R NOUN r
, PUNCT ,
K NOUN k
) PUNCT )
. PUNCT .
3 NUM 3
. PUNCT .
De ADP de
même ADV même
, PUNCT ,
pour ADP pour
I AUX i
intervalle NOUN intervalle
de ADP de
R NOUN r
et CCONJ et
p NOUN p
N ADJ n
, PUNCT ,
C NOUN c
p1 PROPN p1
( PUNCT (
I NOUN i
, PUNCT ,
K NOUN k
) PUNCT )
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
C NOUN c
p NOUN p
( PUNCT (
I NOUN i
, PUNCT ,
K NOUN k
) PUNCT )
. PUNCT .
4 NUM 4
. PUNCT .
De ADP de
plus ADV plus
, PUNCT ,
C NOUN c
( PUNCT (
I NOUN i
, PUNCT ,
K NOUN k
) PUNCT )
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
C NOUN c
p NOUN p
( PUNCT (
I NOUN i
, PUNCT ,
K NOUN k
) PUNCT )
. PUNCT .
Tout DET tout
K NOUN k
- ADJ -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
admet VERB admettre ind_pre
toujours ADV toujours
les DET le
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
( PUNCT (
dits ADJ dire
triviaux ADJ trivial
) PUNCT )
E NOUN e
et CCONJ et
0E NUM 0E
. PUNCT .
Démonstration NOUN démonstration
On PRON on
démontre VERB démontrer ind_pre
que SCONJ que
E NOUN e
et CCONJ et
0E NUM 0E
vérifient VERB vérifier ind_pre
les DET le
trois NUM trois
axiomes NOUN axiome
de ADP de
la DET le
définition NOUN définition
1.4 NUM 1.4
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
page NOUN page
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
soit VERB être sub_pre
F VERB f
E NOUN e
, PUNCT ,
F NOUN f
6 NUM 6
. PUNCT .
Alors ADV alors
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
F NOUN f
muni VERB munir par_pas
des ADP de
mêmes ADJ même
opérations NOUN opération
et CCONJ et
. PUNCT .
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Démonstration NOUN démonstration
Supposons VERB supposer imper
que ADV que
F NOUN f
soit VERB être sub_pre
sous-espace ADV sous-espace
vectoriel NOUN vectoriel
de ADP de
E. PROPN E.
Alors ADV alors
est VERB être ind_pre
une DET un
opération NOUN opération
interne ADJ interne
sur ADP sur
F NOUN f
F NOUN f
( PUNCT (
car CCONJ car
F NOUN f
est VERB être ind_pre
stable ADJ stable
par ADP par
) PUNCT )
, PUNCT ,
qui PRON qui
est VERB être ind_pre
associative ADJ associatif
( PUNCT (
car CCONJ car
elle PRON lui
l' PRON l'
est VERB être ind_pre
sur ADP sur
E NOUN e
F NOUN f
) PUNCT )
, PUNCT ,
possède VERB posséder ind_pre
un DET un
élément NOUN élément
neutre ADJ neutre
0E NUM 0E
F NOUN f
, PUNCT ,
tout DET tout
élément NOUN élément
de ADP de
F NOUN f
possède VERB posséder ind_pre
un DET un
unique ADJ unique
opposé VERB opposer par_pas
dans ADP dans
F NOUN f
( PUNCT (
si SCONJ si
x ADP x
F NOUN f
, PUNCT ,
x ADP x
( PUNCT (
1).x DET 1).x
F ADJ f
car CCONJ car
F NOUN f
est VERB être ind_pre
stable ADJ stable
par ADP par
. PUNCT .
) PUNCT )
et CCONJ et
est VERB être ind_pre
commutative ADJ commutatif
( PUNCT (
car CCONJ car
elle PRON lui
l' PRON l'
est VERB être ind_pre
sur ADP sur
E NOUN e
F NOUN f
) PUNCT )
. PUNCT .
De ADP de
plus ADV plus
, PUNCT ,
. PUNCT .
est VERB être ind_pre
une DET un
opération NOUN opération
externe ADJ externe
sur ADP sur
K NOUN k
F NOUN f
( PUNCT (
car CCONJ car
F NOUN f
est VERB être ind_pre
stable ADJ stable
par ADP par
. PUNCT .
) PUNCT )
, PUNCT ,
est VERB être ind_pre
distributive VERB distributive
par ADP par
rapport NOUN rapport
à ADP à
l' DET le
addition NOUN addition
de ADP de
F NOUN f
ainsi ADV ainsi
que SCONJ que
l' DET le
addition NOUN addition
et CCONJ et
la DET le
multiplication NOUN multiplication
de ADP de
K NOUN k
et CCONJ et
l' DET le
unité NOUN unité
du ADP de
corps NOUN corps
est VERB être ind_pre
respectée VERB respecter par_pas
( PUNCT (
car CCONJ car
ces DET ce
propriétés NOUN propriété
sont VERB être ind_pre
vraies VERB vraier
sur ADP sur
E NOUN e
F NOUN f
) PUNCT )
. PUNCT .
Conclusion NOUN conclusion
: PUNCT :
F NOUN f
muni VERB munir par_pas
des ADP de
opérations NOUN opération
et CCONJ et
. PUNCT .
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Réciproquement ADV réciproquement
, PUNCT ,
si SCONJ si
F NOUN f
muni VERB munir par_pas
des ADP de
opérations NOUN opération
et CCONJ et
. PUNCT .
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
alors ADV alors
il PRON il
est VERB être ind_pre
immédiat VERB immédiat
que SCONJ que
F NOUN f
vérifie VERB vérifier ind_pre
les DET le
trois NUM trois
axiomes NOUN axiome
de ADP de
la DET le
définition NOUN définition
1.4 NUM 1.4
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
page NOUN page
. PUNCT .
Pour ADP pour
démontrer VERB démontrer inf
qu' SCONJ que
un DET un
ensemble NOUN ensemble
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
il PRON il
est VERB être ind_pre
très ADV très
souvent ADV souvent
plus ADV plus
simple ADJ simple
et CCONJ et
plus ADV plus
rapide ADJ rapide
de ADP de
démontrer VERB démontrer inf
que SCONJ que
c' PRON ce
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel VERB vectoriel
déjà ADV déjà
connu VERB connaître par_pas
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
soit VERB être sub_pre
F VERB f
E NOUN e
, PUNCT ,
F NOUN f
6 NUM 6
. PUNCT .
Alors ADV alors
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
F NOUN f
est VERB être ind_pre
stable ADJ stable
par ADP par
combinaisons NOUN combinaison
linéaires ADJ linéaire
. PUNCT .
Démonstration NOUN démonstration
Supposons VERB supposer imper
que ADV que
F NOUN f
soit VERB être sub_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E. PROPN E.
Soit VERB être sub_pre
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xn VERB xn
des DET un
vecteurs NOUN vecteur
de ADP de
F NOUN f
( PUNCT (
qui PRON qui
existent VERB exister ind_pre
car CCONJ car
F NOUN f
6 NUM 6
) PUNCT )
et CCONJ et
soit VERB être sub_pre
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
n NOUN n
) PUNCT )
Kn PROPN Kn
. PUNCT .
Alors ADV alors
k NOUN k
.xk PROPN .xk
F NOUN f
pour ADP pour
tout ADV tout
k NOUN k
1 NUM 1
, PUNCT ,
n NOUN n
car CCONJ car
F NOUN f
est VERB être ind_pre
stable ADJ stable
par ADP par
. PUNCT .
et CCONJ et
par ADP par
une DET un
récurrence NOUN récurrence
immédiate ADJ immédiat
sur ADP sur
n NOUN n
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
donc ADV donc
F NOUN f
est VERB être ind_pre
stable ADJ stable
par ADP par
combinaisons NOUN combinaison
linéaires ADJ linéaire
. PUNCT .
Réciproquement ADV réciproquement
, PUNCT ,
supposons VERB supposer ind_pre
que SCONJ que
F NOUN f
soit VERB être sub_pre
stable ADJ stable
par ADP par
combinaisons NOUN combinaison
linéaires ADJ linéaire
. PUNCT .
Il PRON il
est VERB être ind_pre
alors ADV alors
immédiat VERB immédiat
que ADV que
F NOUN f
est VERB être ind_pre
stable ADJ stable
par ADP par
et CCONJ et
par ADP par
. PUNCT .
( PUNCT (
cas NOUN cas
particuliers ADJ particulier
de ADP de
combinaisons NOUN combinaison
linéaires ADJ linéaire
) PUNCT )
. PUNCT .
De ADP de
plus ADV plus
, PUNCT ,
puisque SCONJ puisque
F NOUN f
6 NUM 6
, PUNCT ,
il PRON il
existe VERB exister ind_pre
x ADP x
F NOUN f
. PUNCT .
On PRON on
a VERB avoir ind_pre
alors ADV alors
Finalement ADV finalement
, PUNCT ,
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E. PROPN E.
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Stabilité PROPN Stabilité
par ADP par
intersection NOUN intersection
finie ADJ fini
Si SCONJ si
F1 PROPN F1
et CCONJ et
F2 PRON f2
sont VERB être ind_pre
deux NUM deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
F1 NUM F1
F2 NOUN f2
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E. PROPN E.
Stabilité PROPN Stabilité
par ADP par
intersection NOUN intersection
quelconque ADJ quelconque
Plus ADV plus
généralement ADV généralement
, PUNCT ,
si SCONJ si
( PUNCT (
Fi PROPN Fi
) PUNCT )
iI PRON ii
est VERB être ind_pre
une DET un
famille NOUN famille
de ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
Fi PROPN Fi
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
Démonstration NOUN démonstration
On PRON on
a VERB avoir ind_pre
0E NUM 0E
F NOUN f
car CCONJ car
0E ADP 0e
Fi PROPN Fi
pour ADP pour
tout DET tout
i VERB i
I ADJ i
Soit VERB être sub_pre
( PUNCT (
x NOUN x
, PUNCT ,
y PRON y
) PUNCT )
F NOUN f
2 NUM 2
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
pour ADP pour
tout ADV tout
i DET i
I ADJ i
on PRON on
a VERB avoir ind_pre
x ADP x
Fi PROPN Fi
et CCONJ et
y PRON y
Fi PROPN Fi
donc ADV donc
x ADP x
y PRON y
Fi PROPN Fi
pour ADP pour
tout DET tout
i VERB i
I ADJ i
( PUNCT (
car CCONJ car
les DET le
Fi PRON fi
sont VERB être ind_pre
stables ADJ stable
par ADP par
) PUNCT )
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
x ADP x
y PRON y
F NOUN f
. PUNCT .
Soit VERB être sub_pre
x ADP x
F ADJ f
et CCONJ et
soit VERB être sub_pre
K. PROPN K.
En ADP en
particulier ADJ particulier
, PUNCT ,
pour ADP pour
tout ADV tout
i DET i
I ADJ i
on PRON on
a VERB avoir ind_pre
x ADP x
Fi PROPN Fi
donc ADV donc
.x ADV .x
Fi PROPN Fi
pour ADP pour
tout DET tout
i VERB i
I ADJ i
( PUNCT (
car CCONJ car
les DET le
Fi PRON fi
sont VERB être ind_pre
stables ADJ stable
par ADP par
. PUNCT .
) PUNCT )
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
.x ADV .x
F NOUN f
. PUNCT .
Finalement ADV finalement
, PUNCT ,
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E. PROPN E.
Si SCONJ si
F1 PROPN F1
et CCONJ et
F2 PRON f2
sont VERB être ind_pre
deux NUM deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
, PUNCT ,
alors ADV alors
F1 NUM F1
F2 ADJ f2
ne ADV ne
est VERB être ind_pre
jamais ADV jamais
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
sauf ADP sauf
si SCONJ si
F1 NUM F1
F2 ADJ f2
ou CCONJ ou
F1 PROPN F1
F2 NOUN f2
. PUNCT .
Démonstration NOUN démonstration
vectoriel NOUN vectoriel
de ADP de
E. PROPN E.
( PUNCT (
Un DET un
exemple NOUN exemple
) PUNCT )
Dans ADP dans
R2 NOUN r2
, PUNCT ,
considérons ADJ considéron
les DET le
droites ADJ droit
vectorielles ADJ vectoriel
F1 PROPN F1
R.(1 ADJ r.(1
, PUNCT ,
0 NUM 0
) PUNCT )
et CCONJ et
F2 NOUN f2
R.(0 PROPN R.(0
, PUNCT ,
1 NUM 1
) PUNCT )
. PUNCT .
On PRON on
a VERB avoir ind_pre
ne ADV ne
est VERB être ind_pre
pas ADV pas
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
R2 NOUN r2
( PUNCT (
il PRON il
ne ADV ne
est VERB être ind_pre
pas ADV pas
stable ADJ stable
par ADP par
addition NOUN addition
) PUNCT )
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
soit VERB être sub_pre
A ADP à
E NOUN e
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
sous-espace ADV sous-espace
vectoriel NOUN vectoriel
engendré VERB engendrer par_pas
par ADP par
A ADP à
le DET le
plus ADV plus
petit ADJ petit
sous-espace ADJ sous-espac
vectoriel NOUN vectoriel
de ADP de
E NOUN e
contenant VERB contenir par_pre
A. PROPN A.
On PRON on
le DET le
note NOUN note
: PUNCT :
Démonstration NOUN démonstration
que SCONJ que
la DET le
notion NOUN notion
de ADP de
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
engendré VERB engendrer par_pas
par ADP par
une DET un
partie NOUN partie
est VERB être ind_pre
bien ADV bien
définie VERB définir par_pas
L' DET le
existence NOUN existence
d' ADP de
un DET un
plus ADV plus
petit ADJ petit
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
contenant VERB contenir par_pre
A NOUN a
mérite NOUN mérite
une DET un
justification NOUN justification
. PUNCT .
F NOUN f
F NOUN f
sous-espace ADJ sous-espac
vectoriel NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
F NOUN f
A NOUN a
et CCONJ et
Vect(A PROPN Vect(A
) PUNCT )
Alors ADV alors
Vect(A PROPN Vect(A
) PUNCT )
6 NUM 6
car CCONJ car
E NOUN e
F ADJ f
et CCONJ et
c' PRON ce
est VERB être ind_pre
bien ADV bien
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
d' ADP de
après ADP après
la DET le
propriété NOUN propriété
1.4 NUM 1.4
, PUNCT ,
page NOUN page
ci PRON ci
- NOUN -
contre NOUN contre
. PUNCT .
Par ADP par
définition NOUN définition
, PUNCT ,
tout PRON tout
sous-espace ADV sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
qui PRON qui
contient VERB contenir ind_pre
A NOUN a
contient VERB contenir ind_pre
aussi ADV aussi
Vect(A PROPN Vect(A
) PUNCT )
, PUNCT ,
c' PRON ce
est VERB être ind_pre
donc ADV donc
bien ADV bien
le DET le
petit ADJ petit
sous-espace ADJ sous-espac
vectoriel NOUN vectoriel
de ADP de
E NOUN e
contenant VERB contenir par_pre
A. PROPN A.
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
2 NUM 2
. PUNCT .
Si SCONJ si
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
Vect(F PROPN Vect(F
) PUNCT )
F NOUN f
. PUNCT .
3 NUM 3
. PUNCT .
Si SCONJ si
E NOUN e
6 NUM 6
0E NUM 0E
et CCONJ et
si SCONJ si
x NOUN x
E NOUN e
, PUNCT ,
x ADP x
6 NUM 6
0E NUM 0E
, PUNCT ,
alors ADV alors
Vect(x ADJ vect(x
) PUNCT )
est VERB être ind_pre
la DET le
droite NOUN droite
vectorielle ADJ vectoriel
engendrée VERB engendrer par_pas
par ADP par
x NOUN x
: PUNCT :
Proposition NOUN proposition
1.1 NOUN 1.1
Si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
si SCONJ si
A VERB avoir ind_pre
E NOUN e
, PUNCT ,
A ADP à
6 NUM 6
, PUNCT ,
alors ADV alors
Vect(A PROPN Vect(A
) PUNCT )
est VERB être ind_pre
l' DET le
ensemble NOUN ensemble
des ADP de
combinaisons NOUN combinaison
linéaires ADJ linéaire
construites VERB construire par_pas
à ADP à
partir VERB partir inf
des ADP de
vecteurs NOUN vecteur
de ADP de
A NOUN a
: PUNCT :
Vect(A PROPN Vect(A
) PUNCT )
A NOUN a
Vect(A PROPN Vect(A
) PUNCT )
A X A
Démonstration NOUN démonstration
( PUNCT (
) PUNCT )
L' DET le
ensemble NOUN ensemble
des ADP de
combinaisons NOUN combinaison
linéaires ADJ linéaire
de ADP de
vecteurs NOUN vecteur
de ADP de
A NOUN a
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
qui PRON qui
contient VERB contenir ind_pre
A NOUN a
, PUNCT ,
il PRON il
contient VERB contenir ind_pre
donc ADV donc
Vect(A PROPN Vect(A
) PUNCT )
. PUNCT .
( PUNCT (
) PUNCT )
A NOUN a
est VERB être ind_pre
inclus VERB inclure par_pas ind_pre
dans ADP dans
Vect(A PROPN Vect(A
) PUNCT )
( PUNCT (
par ADP par
définition NOUN définition
) PUNCT )
qui PRON qui
est VERB être ind_pre
stable ADJ stable
par ADP par
combinaisons NOUN combinaison
linéaires ADJ linéaire
, PUNCT ,
donc ADV donc
Vect(A PROPN Vect(A
) PUNCT )
contient VERB contenir ind_pre
toutes ADJ tout
les DET le
combinaisons NOUN combinaison
linéaires ADJ linéaire
de ADP de
vecteurs NOUN vecteur
de ADP de
A. PROPN A.
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Partie NOUN partie
génératrice NOUN génératrice
Soit VERB être sub_pre
A ADP à
E NOUN e
, PUNCT ,
on PRON on
dit VERB dire ind_pre
que SCONJ que
A NOUN a
est VERB être ind_pre
une DET un
partie NOUN partie
génératrice NOUN génératrice
de ADP de
E NOUN e
si SCONJ si
Vect(A PROPN Vect(A
) PUNCT )
E NOUN e
Famille PROPN Famille
génératrice NOUN génératrice
Soit VERB être sub_pre
( PUNCT (
ai PROPN avoir
) PUNCT )
iI PRON ii
E NOUN e
I ADJ i
une DET un
famille NOUN famille
de ADP de
vecteurs NOUN vecteur
de ADP de
E NOUN e
, PUNCT ,
on PRON on
dit VERB dire ind_pre
que SCONJ que
c' PRON ce
est VERB être ind_pre
une DET un
famille NOUN famille
génératrice NOUN génératrice
de ADP de
E NOUN e
si SCONJ si
Quelle ADJ quell
différence NOUN différence
y PRON y
a VERB avoir ind_pre
-t PRON -t
-il PRON il
entre ADP entre
la DET le
famille NOUN famille
( PUNCT (
ai PROPN avoir
) PUNCT )
iI PRON ii
et CCONJ et
ai PROPN avoir
, PUNCT ,
i ADJ i
I ADJ i
? PUNCT ?
Dans ADP dans
un DET un
ensemble NOUN ensemble
, PUNCT ,
les DET le
termes NOUN terme
ne ADV ne
apparaissent VERB apparaître ind_pre
qu' SCONJ que
une DET un
seule ADJ seul
fois NOUN fois
, PUNCT ,
alors ADV alors
que SCONJ que
dans ADP dans
une DET un
famille NOUN famille
, PUNCT ,
il PRON il
est VERB être ind_pre
possible ADJ possible
de ADP de
les PRON le
répéter VERB répéter inf
. PUNCT .
C' PRON ce
est VERB être ind_pre
la DET le
même ADJ même
différence NOUN différence
qu' SCONJ que
entre ADP entre
une DET un
liste NOUN liste
et CCONJ et
un DET un
ensemble NOUN ensemble
en ADP en
informatique NOUN informatique
! PUNCT !
a VERB avoir ind_pre
Voir VERB voir inf
le DET le
code NOUN code
1.1 NUM 1.1
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
a. VERB avoir ind_pre
L' DET le
ensemble NOUN ensemble
ai PRON ai
, PUNCT ,
i ADJ i
I ADJ i
associé VERB associer par_pas
à ADP à
la DET le
famille NOUN famille
( PUNCT (
ai PROPN avoir
) PUNCT )
iI PRON ii
s' PRON se
appelle VERB appeler ind_pre
le DET le
support NOUN support
de ADP de
la DET le
famille NOUN famille
. PUNCT .
1 NUM 1
. PUNCT .
( PUNCT (
1 NUM 1
, PUNCT ,
i NOUN i
) PUNCT )
, PUNCT ,
( PUNCT (
1 NUM 1
, PUNCT ,
j PROPN j
) PUNCT )
, PUNCT ,
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
, PUNCT ,
( PUNCT (
1 NUM 1
, PUNCT ,
i X i
, PUNCT ,
j PROPN j
) PUNCT )
sont VERB être ind_pre
des DET un
familles NOUN famille
génératrices ADJ générateur
de ADP de
C NOUN c
vu VERB voir par_pas
comme ADP comme
un DET un
R NOUN r
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
2 NUM 2
. PUNCT .
La DET le
base NOUN base
canonique ADJ canonique
( PUNCT (
ei NOUN ei
) PUNCT )
i1,n PRON i1,n
est VERB être ind_pre
une DET un
famille NOUN famille
génératrice NOUN génératrice
de ADP de
Rn NOUN rn
et CCONJ et
de ADP de
Cn VERB cn
, PUNCT ,
où PRON où
pour ADP pour
tout DET tout
i NUM i
1 NUM 1
, PUNCT ,
n NOUN n
, PUNCT ,
i X i
- NOUN -
ième ADJ ième
coordonnée NOUN coordonnée
3 NUM 3
. PUNCT .
Plus ADV plus
généralement ADV généralement
, PUNCT ,
si SCONJ si
( PUNCT (
ei NOUN ei
) PUNCT )
iI PRON ii
est VERB être ind_pre
une DET un
famille NOUN famille
génératrice NOUN génératrice
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
et CCONJ et
si SCONJ si
( PUNCT (
fj CCONJ fj
) PUNCT )
jJ ADJ jj
est VERB être ind_pre
une DET un
famille NOUN famille
génératrice NOUN génératrice
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
F NOUN f
, PUNCT ,
alors ADV alors
la DET le
partie NOUN partie
( PUNCT (
ei CCONJ ei
, PUNCT ,
0F NOUN 0f
) PUNCT )
, PUNCT ,
i ADJ i
I ADJ i
( PUNCT (
0E NUM 0E
, PUNCT ,
fj CCONJ fj
) PUNCT )
, PUNCT ,
j PRON j
J NOUN j
est VERB être ind_pre
une DET un
partie NOUN partie
génératrice NOUN génératrice
de ADP de
E NOUN e
F NOUN f
1.2.1 NOUN 1.2.1
Démontrer VERB démontrer inf
que SCONJ que
est VERB être ind_pre
une DET un
partie NOUN partie
génératrice NOUN génératrice
de ADP de
K3 PROPN K3
. PUNCT .
1.2.2 NOUN 1.2.2
Déterminer VERB déterminer inf
une DET un
partie NOUN partie
génératrice NOUN génératrice
simple ADJ simple
du ADP de
plan NOUN plan
de ADP de
K3 PROPN K3
d' ADP de
équation NOUN équation
1.2.3 NOUN 1.2.3
Déterminer VERB déterminer inf
une DET un
famille NOUN famille
génératrice NOUN génératrice
simple ADJ simple
du ADP de
plan NOUN plan
vectoriel ADJ vectoriel
de ADP de
K4 PROPN K4
, PUNCT ,
d' ADP de
équations NOUN équation
: PUNCT :
1.2.4 NOUN 1.2.4
Soit VERB être sub_pre
a VERB avoir ind_pre
R NOUN r
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
la DET le
famille NOUN famille
( PUNCT (
x ADP x
7 NUM 7
( PUNCT (
x ADP x
a)n ADJ a)n
) PUNCT )
nN NOUN nn
est VERB être ind_pre
une DET un
famille NOUN famille
génératrice NOUN génératrice
du ADP de
R NOUN r
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
des ADP de
fonctions NOUN fonction
polynomiales ADJ polynomial
. PUNCT .
1.2.6 NUM 1.2.6
Soit VERB être sub_pre
F NOUN f
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
, PUNCT ,
que ADV que
dire VERB dire inf
de ADP de
1.2.7 NUM 1.2.7
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
soit VERB être sub_pre
E1 ADJ e1
, PUNCT ,
E2 NOUN e2
et CCONJ et
E3 NOUN e3
trois NUM trois
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
tels ADJ tel
que SCONJ que
: PUNCT :
Que PRON que
peut VERB pouvoir ind_pre
-on PRON on
en PRON en
conclure VERB conclure inf
? PUNCT ?
1.2.8 NUM 1.2.8
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
A NOUN a
et CCONJ et
B NOUN b
deux NUM deux
parties NOUN party
de ADP de
E NOUN e
, PUNCT ,
comparer VERB comparer inf
: PUNCT :
Vect(A ADJ vect(a
B NOUN b
) PUNCT )
et CCONJ et
Vect(A PROPN Vect(A
) PUNCT )
Vect(B PROPN Vect(B
) PUNCT )
Vect(A ADJ vect(a
B NOUN b
) PUNCT )
et CCONJ et
Vect(A PROPN Vect(A
) PUNCT )
Vect(B PROPN Vect(B
) PUNCT )
1.2.9 NUM 1.2.9
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel VERB vectoriel
tel ADJ tel
que SCONJ que
E NOUN e
6 NUM 6
0E NUM 0E
et CCONJ et
soit VERB être sub_pre
( PUNCT (
Ei NOUN ei
) PUNCT )
i1,n NOUN i1,n
des ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
tous ADJ tout
distincts NOUN distinct
de ADP de
E. PROPN E.
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
À ADP à
quelle DET quel
condition NOUN condition
est VERB être ind_pre
-il PRON il
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
? PUNCT ?
1.2.10 NUM 1.2.10
Reprendre VERB reprendre inf
l' DET le
exercice NOUN exercice
précédent ADJ précédent
lorsque SCONJ lorsque
l' PRON l'
on PRON on
considère VERB considérer ind_pre
une DET un
famille NOUN famille
dénombrable ADJ dénombrable
de ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
( PUNCT (
En NOUN en
) PUNCT )
nN NOUN nn
. PUNCT .
Plus ADV plus
précisément ADV précisément
, PUNCT ,
pour ADP pour
E NOUN e
Rp NOUN rp
, PUNCT ,
on PRON on
pourra VERB pouvoir fut_sim
démontrer VERB démontrer inf
que SCONJ que
le DET le
résultat NOUN résultat
est VERB être ind_pre
toujours ADV toujours
vrai ADJ vrai
, PUNCT ,
mais CCONJ mais
qu' SCONJ que
il PRON il
devient VERB devenir ind_pre
faux ADJ faux
pour ADP pour
l' DET le
espace NOUN espace
vectoriel VERB vectoriel
des ADP de
fonctions NOUN fonction
polynomiales ADJ polynomial
. PUNCT .
1.2.11 NOUN 1.2.11
Donner VERB donner inf
un DET un
exemple NOUN exemple
d' ADP de
une DET un
famille NOUN famille
de ADP de
sous-espaces NOUN sous-espace
( PUNCT (
Ei NOUN ei
) PUNCT )
iI PRON ii
de ADP de
Rp NOUN rp
, PUNCT ,
distincts ADJ distinct
de ADP de
Rp NOUN rp
, PUNCT ,
tels ADJ tel
que SCONJ que
Sommes PROPN Sommes
de ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Somme PROPN Somme else
finie VERB finir par_pas
Soit VERB être sub_pre
E1 ADJ e1
et CCONJ et
E2 ADV e2
deux NUM deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
somme NOUN somme
de ADP de
E1 PROPN E1
et CCONJ et
E2 ADJ e2
et CCONJ et
on PRON on
note VERB noter ind_pre
E1 AUX e1
E2 NOUN e2
le DET le
sous-espace ADJ sous-espac
vectoriel NOUN vectoriel
: PUNCT :
Somme PROPN Somme else
quelconque ADJ quelconque
Plus ADV plus
généralement ADV généralement
, PUNCT ,
si SCONJ si
( PUNCT (
Ei NOUN ei
) PUNCT )
iI PRON ii
est VERB être ind_pre
une DET un
famille NOUN famille
de ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
somme NOUN somme
des ADP de
Ei NOUN ei
et CCONJ et
Ei NOUN ei
le DET le
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
: PUNCT :
Il PRON il
est VERB être ind_pre
faux ADJ faux
de ADP de
penser VERB penser inf
: PUNCT :
1 NUM 1
. PUNCT .
R2 PRON r2
est VERB être ind_pre
somme VERB sommer ind_pre
de ADP de
R. NOUN r.
2 NUM 2
. PUNCT .
C NOUN c
est VERB être ind_pre
somme NOUN somme
de ADP de
R NOUN r
et CCONJ et
de ADP de
R.i NOUN r.i
. PUNCT .
3 NUM 3
. PUNCT .
Si SCONJ si
( PUNCT (
xi PRON xi
) PUNCT )
iI PRON ii
est VERB être ind_pre
une DET un
famille NOUN famille
génératrice NOUN génératrice
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
, PUNCT ,
alors ADV alors
: PUNCT :
4 NUM 4
. PUNCT .
Si SCONJ si
P1 PRON p1
est VERB être ind_pre
le DET le
plan NOUN plan
d' ADP de
équation NOUN équation
x ADP x
y ADV y
z PRON z
0 NUM 0
et CCONJ et
P2 NOUN p2
est VERB être ind_pre
le DET le
plan NOUN plan
d' ADP de
équation NOUN équation
x ADP x
2 NUM 2
y NOUN y
z X z
0 PRON 0
de ADP de
R3 PROPN R3
, PUNCT ,
alors ADV alors
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Somme PROPN Somme else
finie ADJ fini
Si SCONJ si
E1 ADJ e1
et CCONJ et
E2 NOUN e2
sont VERB être ind_pre
deux NUM deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
: PUNCT :
Somme PROPN Somme else
quelconque ADJ quelconque
Plus ADV plus
généralement ADV généralement
, PUNCT ,
si SCONJ si
( PUNCT (
Ei NOUN ei
) PUNCT )
iI PRON ii
est VERB être ind_pre
une DET un
famille NOUN famille
de ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
: PUNCT :
Démonstration NOUN démonstration
iI PRON ii
Ei NOUN ei
. PUNCT .
En ADP en
reprenant VERB reprendre par_pre
les DET le
notations NOUN notation
de ADP de
la DET le
définition NOUN définition
1.7 NUM 1.7
, PUNCT ,
page NOUN page
ci PRON ci
- NOUN -
contre NOUN contre
, PUNCT ,
on PRON on
a VERB avoir ind_pre
où PRON où
xik AUX xik
iI PRON ii
Ei NOUN ei
Eik PROPN Eik
pour ADP pour
tout ADV tout
k NOUN k
1 NUM 1
, PUNCT ,
n. NOUN n.
Le DET le
vecteur NOUN vecteur
x NOUN x
s' PRON se
écrit VERB écrire par_pas ind_pre
donc ADV donc
comme ADP comme
une DET un
combinaison NOUN combinaison
linéaire ADJ linéaire
d' ADP de
éléments NOUN élément
de ADP de
iI PRON ii
Ei VERB ei
, PUNCT ,
donc ADV donc
x ADP x
Vect PROPN Vect
( PUNCT (
) PUNCT )
Soit VERB être sub_pre
x ADP x
Vect PROPN Vect
iI PRON ii
Ei NOUN ei
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
où PRON où
xk VERB xk
iI PRON ii
Ei VERB ei
pour ADP pour
particulier ADJ particulier
, PUNCT ,
pour ADP pour
tout ADV tout
k NOUN k
1 NUM 1
, PUNCT ,
n NOUN n
, PUNCT ,
il PRON il
existe VERB exister ind_pre
ik CCONJ ik
I ADJ i
tel ADJ tel
que SCONJ que
xk NOUN xk
Eik PROPN Eik
, PUNCT ,
donc ADV donc
x ADP x
iI PRON ii
Ei NOUN ei
. PUNCT .
Il PRON il
est VERB être ind_pre
équivalent VERB équivaloir ind_pre
de ADP de
dire VERB dire inf
: PUNCT :
1 NUM 1
. PUNCT .
( PUNCT (
ei NOUN ei
) PUNCT )
iI PRON ii
est VERB être ind_pre
une DET un
famille NOUN famille
génératrice NOUN génératrice
de ADP de
E NOUN e
Vect(ei VERB vect(ei
) PUNCT )
Démonstration NOUN démonstration
Immédiat PROPN Immédiat
à ADP à
partir VERB partir inf
des DET un
définitions NOUN définition
. PUNCT .
1.3.1 PROPN 1.3.1
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Soit VERB être sub_pre
E1 NOUN e1
, PUNCT ,
E2 NOUN e2
et CCONJ et
E3 NOUN e3
trois NUM trois
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E. PROPN E.
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Comparer VERB comparer inf
pour ADP pour
l' DET le
inclusion NOUN inclusion
les DET le
sous-espaces NOUN sous-espace
: PUNCT :
( PUNCT (
b NOUN b
) PUNCT )
Comparer VERB comparer inf
pour ADP pour
l' DET le
inclusion NOUN inclusion
les DET le
sous-espaces NOUN sous-espace
: PUNCT :
( PUNCT (
c NOUN c
) PUNCT )
Comparer VERB comparer inf
pour ADP pour
l' DET le
inclusion NOUN inclusion
les DET le
sous-espaces NOUN sous-espace
: PUNCT :
1.3.2 NUM 1.3.2
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Soit VERB être sub_pre
E1 NOUN e1
, PUNCT ,
E2 NOUN e2
et CCONJ et
E3 NOUN e3
trois NUM trois
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E. PROPN E.
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
Démontrer VERB démontrer inf
que SCONJ que
ce PRON ce
ne ADV ne
est VERB être ind_pre
plus ADV plus
vrai ADJ vrai
, PUNCT ,
si SCONJ si
l' PRON l'
on PRON on
enlève VERB enlever ind_pre sub_pre
une DET un
des ADP de
hypothèses NOUN hypothèse
à ADP à
gauche NOUN gauche
. PUNCT .
Sommes PROPN Sommes
directes VERB directer
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Soit VERB être sub_pre
E1 ADJ e1
et CCONJ et
E2 ADV e2
deux NUM deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
on PRON on
dit VERB dire ind_pre
que SCONJ que
E1 PROPN E1
et CCONJ et
E2 PRON e2
sont VERB être ind_pre
en ADP en
somme NOUN somme
directe ADJ direct
si SCONJ si
tout DET tout
élément NOUN élément
de ADP de
E1 DET e1
E2 PRON e2
s' PRON se
écrit VERB écrire par_pas ind_pre
, PUNCT ,
de ADP de
manière NOUN manière
unique ADJ unique
sous ADP sous
la DET le
forme NOUN forme
x1 NOUN x1
x2 NOUN x2
, PUNCT ,
où PRON où
x1 NOUN x1
E1 ADJ e1
et CCONJ et
x2 NOUN x2
E2 ADJ e2
. PUNCT .
On PRON on
écrit VERB écrire ind_pre
alors ADV alors
: PUNCT :
E1 DET e1
E2 ADJ e2
à ADP à
la DET le
place NOUN place
de ADP de
E1 DET e1
E2 NOUN e2
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Deux NUM Deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
E1 ADJ e1
et CCONJ et
E2 ADJ e2
de ADP de
E NOUN e
sont VERB être ind_pre
en ADP en
somme NOUN somme
directe ADJ direct
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
Démonstration NOUN démonstration
Supposons VERB supposer imper
que SCONJ que
E1 PROPN E1
et CCONJ et
E2 NOUN e2
soient VERB être sub_pre
en ADP en
somme NOUN somme
directe ADJ direct
. PUNCT .
Soit VERB être sub_pre
x ADP x
E1 DET e1
E2 ADJ e2
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
x ADP x
0E NUM 0E
par ADP par
définition NOUN définition
de ADP de
la DET le
somme NOUN somme
directe ADJ direct
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
E1 DET e1
E2 NUM E2
0E NUM 0E
et CCONJ et
comme ADP comme
0E NUM 0E
E1 AUX e1
E2 NOUN e2
( PUNCT (
car CCONJ car
E1 DET e1
E2 ADJ e2
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
) PUNCT )
, PUNCT ,
on PRON on
a VERB avoir ind_pre
E1 VERB e1
E2 NUM E2
0E NUM 0E
. PUNCT .
Supposons VERB supposer ind_pre
que SCONJ que
E1 ADV e1
E2 NUM E2
0E NUM 0E
. PUNCT .
Soit VERB être sub_pre
x ADP x
E NOUN e
, PUNCT ,
qu' PRON qu'
on PRON on
écrit VERB écrire ind_pre
sous ADP sous
la DET le
forme NOUN forme
donc ADV donc
x1 NOUN x1
y1 PROPN y1
et CCONJ et
x2 NOUN x2
y2 PROPN y2
. PUNCT .
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
E1 PROPN E1
et CCONJ et
E2 PRON e2
sont VERB être ind_pre
en ADP en
somme NOUN somme
directe ADJ direct
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Deux NUM Deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
E1 ADJ e1
et CCONJ et
E2 ADJ e2
de ADP de
E NOUN e
sont VERB être ind_pre
en ADP en
somme NOUN somme
directe ADJ direct
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
il PRON il
y PRON y
a VERB avoir ind_pre
écriture NOUN écriture
unique ADJ unique
de ADP de
0E NUM 0E
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
: PUNCT :
Démonstration NOUN démonstration
Supposons VERB supposer imper
que SCONJ que
E1 PROPN E1
et CCONJ et
E2 NOUN e2
soient VERB être sub_pre
en ADP en
somme NOUN somme
directe ADJ direct
. PUNCT .
Soit VERB être sub_pre
( PUNCT (
x1 NOUN x1
, PUNCT ,
x2 NOUN x2
) PUNCT )
E1 AUX e1
E2 ADJ e2
tels ADJ tel
que SCONJ que
x1 NOUN x1
x2 NOUN x2
0E NUM 0E
. PUNCT .
On PRON on
a VERB avoir ind_pre
Supposons VERB supposer ind_pre
qu' SCONJ que
il PRON il
y PRON y
ait AUX avoir
écriture NOUN écriture
unique ADJ unique
de ADP de
0E NUM 0E
. PUNCT .
Soit VERB être sub_pre
x ADP x
E NOUN e
qu' PRON qu'
on PRON on
écrit VERB écrire ind_pre
sous ADP sous
la DET le
forme NOUN forme
donc ADV donc
x1 NOUN x1
y1 PROPN y1
x2 PROPN x2
y2 PROPN y2
0E NUM 0E
d' ADP de
où PRON où
x1 NOUN x1
y1 PROPN y1
et CCONJ et
x2 NOUN x2
y2 PROPN y2
. PUNCT .
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
E1 PROPN E1
et CCONJ et
E2 PRON e2
sont VERB être ind_pre
en ADP en
somme NOUN somme
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
soit VERB être sub_pre
( PUNCT (
Ei NOUN ei
) PUNCT )
iI NUM iI
une DET un
famille NOUN famille
de ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
on PRON on
dit VERB dire ind_pre
qu' SCONJ que
ils PRON il
sont VERB être ind_pre
en ADP en
somme NOUN somme
directe ADJ direct
, PUNCT ,
si SCONJ si
on PRON on
a VERB avoir ind_pre
écriture NOUN écriture
unique ADJ unique
de ADP de
0E NUM 0E
, PUNCT ,
soit VERB être sub_pre
: PUNCT :
distincts ADJ distinct
2 NUM 2
à ADP à
2 NUM 2
On PRON on
écrit VERB écrire ind_pre
alors ADV alors
Ei VERB ei
à ADP à
la DET le
place NOUN place
de ADP de
Ne ADV ne
pas ADV pas
oublier VERB oublier inf
que SCONJ que
l' PRON l'
on PRON on
ne ADV ne
sait VERB savoir ind_pre
faire VERB faire inf
que SCONJ que
des DET un
sommes NOUN somme
finies ADJ fini
de ADP de
vecteurs NOUN vecteur
! PUNCT !
! PUNCT !
Si SCONJ si
I NOUN i
contient VERB contenir ind_pre
strictement ADV strictement
plus ADV plus
de ADP de
deux NUM deux
éléments NOUN élément
, PUNCT ,
la DET le
condition NOUN condition
iI PRON ii
Ei VERB ei
0E NUM 0E
ne ADV ne
suffit VERB suffire ind_pre
pas ADV pas
pour ADP pour
assurer VERB assurer inf
que SCONJ que
les DET le
Ei NOUN ei
sont VERB être ind_pre
en ADP en
somme NOUN somme
directe ADJ direct
, PUNCT ,
de ADP de
même ADV même
que SCONJ que
les DET le
conditions NOUN condition
Ei NOUN ei
Ej VERB ej
0E VERB 0e
pour ADP pour
tout DET tout
Pour ADP pour
s' PRON se
en PRON en
convaincre VERB convaincre inf
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
considérer VERB considérer inf
les DET le
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
E1 ADJ e1
R.(1 ADJ r.(1
, PUNCT ,
0 NUM 0
) PUNCT )
, PUNCT ,
E2 NUM E2
R.(0 PROPN R.(0
, PUNCT ,
1 NUM 1
) PUNCT )
et CCONJ et
1 NUM 1
. PUNCT .
R2 PRON r2
est VERB être ind_pre
somme NOUN somme
directe ADJ direct
de ADP de
R. NOUN r.
2 NUM 2
. PUNCT .
C NOUN c
est VERB être ind_pre
somme NOUN somme
directe ADJ direct
de ADP de
R NOUN r
et CCONJ et
de ADP de
R.i NOUN r.i
. PUNCT .
3 NUM 3
. PUNCT .
Si SCONJ si
P1 PRON p1
est VERB être ind_pre
le DET le
plan NOUN plan
d' ADP de
équation NOUN équation
x ADP x
y ADV y
z PRON z
0 NUM 0
et CCONJ et
P2 NOUN p2
est VERB être ind_pre
le DET le
plan NOUN plan
d' ADP de
équation NOUN équation
x ADP x
2 NUM 2
y NOUN y
z X z
0 PRON 0
de ADP de
R3 PROPN R3
, PUNCT ,
alors ADV alors
mais CCONJ mais
la DET le
somme NOUN somme
ne ADV ne
est VERB être ind_pre
pas ADV pas
directe ADJ direct
car CCONJ car
( PUNCT (
1 NUM 1
, PUNCT ,
2 NUM 2
, PUNCT ,
3 NUM 3
) PUNCT )
P1 NUM P1
P2 NOUN p2
. PUNCT .
1.4.1 NUM 1.4.1
Soit VERB être sub_pre
E NOUN e
C NOUN c
0 NUM 0
( PUNCT (
R NOUN r
, PUNCT ,
R NOUN r
) PUNCT )
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
le DET le
sous-espace NOUN sous-espace
vectoriel VERB vectoriel
des ADP de
fonctions NOUN fonction
paires NOUN paire
et CCONJ et
celui PRON celui
des ADP de
fonctions NOUN fonction
impaires NOUN impaire
sont VERB être ind_pre
en ADP en
somme NOUN somme
directe ADJ direct
. PUNCT .
Quelle ADJ quell
est VERB être ind_pre
leur DET leur
somme NOUN somme
? PUNCT ?
1.4.2 NUM 1.4.2
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
soit VERB être sub_pre
E1 ADJ e1
, PUNCT ,
E2 NOUN e2
et CCONJ et
E3 NOUN e3
trois NUM trois
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E. PROPN E.
On PRON on
suppose VERB supposer ind_pre
que SCONJ que
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
si SCONJ si
E2 AUX e2
E3 NOUN e3
, PUNCT ,
alors ADV alors
( PUNCT (
b NOUN b
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
le DET le
résultat NOUN résultat
devient VERB devenir ind_pre
faux ADJ faux
lorsque SCONJ lorsque
E2 NOUN e2
6 NUM 6
E3 NOUN e3
et CCONJ et
E1 NOUN e1
6 NUM 6
E3 NOUN e3
. PUNCT .
1.4.3 NUM 1.4.3
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
( PUNCT (
Ei NOUN ei
) PUNCT )
iI PRON ii
et CCONJ et
( PUNCT (
Ei0 NUM Ei0
) PUNCT )
iI PRON ii
deux NUM deux
familles NOUN famille
de ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
telles ADJ tel
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
1.4.4 NUM 1.4.4
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
soit VERB être sub_pre
E1 ADJ e1
, PUNCT ,
E2 NOUN e2
et CCONJ et
E3 NOUN e3
trois NUM trois
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E. PROPN E.
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
Supplémentaires PROPN Supplémentaires
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Supplémentaire ADJ supplémentaire
Soit VERB être sub_pre
E1 ADJ e1
et CCONJ et
E2 ADJ e2
des ADP de
sous-espace NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
on PRON on
dit VERB dire ind_pre
que SCONJ que
E2 PRON e2
est VERB être ind_pre
un DET un
supplémentaire ADJ supplémentaire
de ADP de
E1 PROPN E1
si SCONJ si
: PUNCT :
On PRON on
dit VERB dire ind_pre
aussi ADV aussi
que SCONJ que
les DET le
deux NUM deux
espaces NOUN espace
E1 NOUN e1
et CCONJ et
E2 NOUN e2
sont VERB être ind_pre
supplémentaires ADJ supplémentaire
. PUNCT .
Décomposition NOUN décomposition
en ADP en
somme NOUN somme
directe ADJ direct
On PRON on
appelle VERB appeler ind_pre
décomposition NOUN décomposition
en ADP en
somme NOUN somme
directe ADJ direct
de ADP de
E NOUN e
toute DET tout
famille NOUN famille
( PUNCT (
Ei NOUN ei
) PUNCT )
iI PRON ii
de ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E PROPN E
telle ADJ tel
1 NUM 1
. PUNCT .
Dans ADP dans
R2 NOUN r2
, PUNCT ,
deux NUM deux
droites NOUN droite
vectorielles ADJ vectoriel
distinctes ADJ distinct
sont VERB être ind_pre
supplémentaires ADJ supplémentaire
. PUNCT .
2 NUM 2
. PUNCT .
Dans ADP dans
C NOUN c
( PUNCT (
vu VERB voir par_pas
comme ADP comme
un DET un
R NOUN r
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
) PUNCT )
, PUNCT ,
deux NUM deux
droites NOUN droite
vectorielles ADJ vectoriel
engendrées VERB engendrer par_pas
par ADP par
des DET un
complexes ADJ complexe
z1 NOUN z1
et CCONJ et
z2 PROPN z2
non ADV non
nuls ADJ nul
tels ADJ tel
que SCONJ que
sont VERB être ind_pre
supplémentaires ADJ supplémentaire
. PUNCT .
Ainsi ADV ainsi
: PUNCT :
3 NUM 3
. PUNCT .
Dans ADP dans
R3 PROPN R3
, PUNCT ,
une DET un
droite NOUN droite
vectorielle ADJ vectoriel
D NOUN d
et CCONJ et
un DET un
plan NOUN plan
vectoriel NOUN vectoriel
P NOUN p
tels ADJ tel
que SCONJ que
D NOUN d
6 NUM 6
P NOUN p
sont VERB être ind_pre
supplémentaires ADJ supplémentaire
. PUNCT .
4 NUM 4
. PUNCT .
Dans ADP dans
C NOUN c
0 NUM 0
( PUNCT (
R NOUN r
, PUNCT ,
R NOUN r
) PUNCT )
, PUNCT ,
les DET le
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
des ADP de
fonctions NOUN fonction
paires ADJ paire
et CCONJ et
impaires ADJ impair
sont VERB être ind_pre
supplémentaires ADJ supplémentaire
. PUNCT .
5 NUM 5
. PUNCT .
Dans ADP dans
E NOUN e
Cpm NOUN cpm
( PUNCT (
0 NUM 0
, PUNCT ,
1 NUM 1
, PUNCT ,
R NOUN r
) PUNCT )
, PUNCT ,
la DET le
droite NOUN droite
engendrée VERB engendrer par_pas
par ADP par
la DET le
fonction NOUN fonction
x NOUN x
7 NUM 7
1 DET 1
est VERB être ind_pre
supplémentaire ADJ supplémentaire
de ADP de
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Deux NUM Deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
E1 ADJ e1
et CCONJ et
E2 ADJ e2
de ADP de
E NOUN e
sont VERB être ind_pre
supplémentaires ADJ supplémentaire
dans ADP dans
E NOUN e
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
: PUNCT :
double ADJ double
inclusion NOUN inclusion
Si SCONJ si
E1 NOUN e1
6 NUM 6
E NOUN e
et CCONJ et
E NOUN e
6 NUM 6
0E NUM 0E
, PUNCT ,
il PRON il
y PRON y
a VERB avoir ind_pre
une DET un
infinité NOUN infinité
de ADP de
supplémentaires ADJ supplémentaire
de ADP de
E1 PROPN E1
( PUNCT (
cela PRON cela
peut VERB pouvoir ind_pre
être VERB être inf
faux ADJ faux
sur ADP sur
d' DET d'
autres ADJ autre
corps NOUN corps
K NOUN k
que SCONJ que
R NOUN r
ou CCONJ ou
C NOUN c
) PUNCT )
. PUNCT .
Nous PRON nous
admettrons VERB admettre fut_sim
que SCONJ que
tout DET tout
sous-espace ADV sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
( PUNCT (
quelconque ADJ quelconque
) PUNCT )
admet VERB admettre ind_pre
un DET un
supplémentaire ADJ supplémentaire
. PUNCT .
1.5.1 NUM 1.5.1
Dans ADP dans
R3 NOUN r3
, PUNCT ,
trouver VERB trouver inf
un DET un
supplémentaire ADJ supplémentaire
du ADP de
plan NOUN plan
d' ADP de
équation NOUN équation
x ADP x
y ADV y
z X z
0 NUM 0
. PUNCT .
Recommencer VERB recommencer inf
dans ADP dans
C3 NOUN c3
( PUNCT (
en ADP en
tant ADV tant
que SCONJ que
C NOUN c
- ADJ -
espace PROPN espace
vectoriel ADJ vectoriel
) PUNCT )
. PUNCT .
1.5.2 NOUN 1.5.2
Dans ADP dans
R3 NOUN r3
, PUNCT ,
trouver VERB trouver inf
un DET un
supplémentaire ADJ supplémentaire
de ADP de
la DET le
droite NOUN droite
d' ADP de
équations NOUN équation
: PUNCT :
1.5.3 PROPN 1.5.3
Dans ADP dans
E NOUN e
C NOUN c
0 NUM 0
( PUNCT (
R NOUN r
, PUNCT ,
R NOUN r
) PUNCT )
, PUNCT ,
trouver VERB trouver inf
des DET un
supplémentaires NOUN supplémentaire
de ADP de
: PUNCT :
Vect(x ADJ vect(x
7 NUM 7
x NOUN x
) PUNCT )
1.5.4 NUM 1.5.4
Soit VERB être sub_pre
E NOUN e
C NOUN c
( PUNCT (
R NOUN r
, PUNCT ,
R NOUN r
) PUNCT )
, PUNCT ,
soit VERB être sub_pre
n NUM ne
N ADJ n
, PUNCT ,
trouver VERB trouver inf
un DET un
supplémentaire ADJ supplémentaire
de ADP de
1.5.5 PROPN 1.5.5
On PRON on
considère VERB considérer ind_pre
ici ADV ici
R NOUN r
comme ADP comme
un DET un
Q NOUN q
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
( PUNCT (
on PRON on
a VERB avoir ind_pre
ici ADV ici
K NOUN k
Q NOUN q
) PUNCT )
. PUNCT .
En ADP en
prenant VERB prendre par_pre
en ADP en
considération NOUN considération
un DET un
supplémentaire ADJ supplémentaire
de ADP de
Vect(1 PROPN Vect(1
, PUNCT ,
2 NUM 2
) PUNCT )
dans ADP dans
R NOUN r
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
une DET un
fonction NOUN fonction
f ADP f
: PUNCT :
R NOUN r
R NOUN r
qui PRON qui
est VERB être ind_pre
1-périodique VERB 1-périodique
et CCONJ et
une DET un
fonction NOUN fonction
g NOUN gramme
: PUNCT :
R NOUN r
R NOUN r
qui PRON qui
est VERB être ind_pre
2-périodique ADJ 2-périodiqu
telles ADJ tel
que SCONJ que
: PUNCT :
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Famille PROPN Famille
libre ADJ libre
( PUNCT (
finie VERB finir par_pas
) PUNCT )
Soit VERB être sub_pre
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xn VERB xn
) PUNCT )
E NOUN e
n NOUN n
, PUNCT ,
on PRON on
dit VERB dire ind_pre
que SCONJ que
cette DET ce
famille NOUN famille
est VERB être ind_pre
libre ADJ libre
, PUNCT ,
ou CCONJ ou
que SCONJ que
les DET le
vecteurs NOUN vecteur
sont VERB être ind_pre
linéairement ADV linéairement
indépendants ADJ indépendant
, PUNCT ,
si SCONJ si
( PUNCT (
écriture NOUN écriture
unique ADJ unique
de ADP de
0E NUM 0E
) PUNCT )
: PUNCT :
On PRON on
parle VERB parler ind_pre
aussi ADV aussi
de ADP de
partie NOUN partie
libre ADJ libre
. PUNCT .
Famille PROPN Famille
liée VERB lier par_pas
( PUNCT (
finie VERB finir par_pas
) PUNCT )
Une DET un
famille NOUN famille
qui PRON qui
ne ADV ne
est VERB être ind_pre
pas ADV pas
libre ADJ libre
est VERB être ind_pre
dite VERB dire par_pas
famille NOUN famille
liée VERB lier par_pas
et CCONJ et
les DET le
vecteurs NOUN vecteur
de ADP de
cette DET ce
famille NOUN famille
sont VERB être ind_pre
dits ADJ dire
linéairement ADV linéairement
dépendants ADJ dépendant
. PUNCT .
Famille PROPN Famille
libre ADJ libre
Plus ADV plus
généralement ADV généralement
, PUNCT ,
une DET un
famille NOUN famille
( PUNCT (
xi PROPN xi
) PUNCT )
iI PRON ii
est VERB être ind_pre
dite VERB dire par_pas
libre ADJ libre
( PUNCT (
vecteurs NOUN vecteur
indépendants ADJ indépendant
) PUNCT )
, PUNCT ,
si SCONJ si
( PUNCT (
écriture NOUN écriture
unique ADJ unique
de ADP de
0E NUM 0E
) PUNCT )
: PUNCT :
distincts ADJ distinct
2 NUM 2
à ADP à
2 NUM 2
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
( PUNCT (
xi PRON xi
) PUNCT )
iI PRON ii
est VERB être ind_pre
libre ADJ libre
si SCONJ si
toute DET tout
sous-famille NOUN sous-famille
finie VERB finir par_pas
est VERB être ind_pre
libre ADJ libre
. PUNCT .
Proposition NOUN proposition
1.2 NUM 1.2
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
soit VERB être sub_pre
( PUNCT (
xi PRON xi
) PUNCT )
iI ADV ii
une DET un
famille NOUN famille
de ADP de
vecteurs NOUN vecteur
de ADP de
E. PROPN E.
Il PRON il
est VERB être ind_pre
équivalent VERB équivaloir ind_pre
de ADP de
dire VERB dire inf
: PUNCT :
1 NUM 1
. PUNCT .
la DET le
famille NOUN famille
( PUNCT (
xi PROPN xi
) PUNCT )
iI PRON ii
est VERB être ind_pre
liée VERB lier par_pas pas_cop
2 NUM 2
. PUNCT .
il PRON il
existe VERB exister ind_pre
une DET un
écriture NOUN écriture
de ADP de
0E NUM 0E
non ADV non
triviale ADJ trivial
, PUNCT ,
soit VERB être sub_pre
a VERB avoir ind_pre
: PUNCT :
distincts ADJ distinct
2 NUM 2
à ADP à
2 NUM 2
ik CCONJ ik
.xik PUNCT .xik
0E NUM 0E
3 NUM 3
. PUNCT .
autre ADJ autre
formulation NOUN formulation
: PUNCT :
a. VERB avoir ind_pre
Nous PRON nous
utiliserons VERB utiliser fut_sim
parfois ADV parfois
l' DET le
expression NOUN expression
non ADV non
tous ADJ tout
nuls NOUN nul
, PUNCT ,
pour ADP pour
parler VERB parler inf
de ADP de
coefficients NOUN coefficient
qui PRON qui
ne ADV ne
sont VERB être ind_pre
pas ADV pas
tous ADJ tout
nuls ADJ nul
. PUNCT .
Notons VERB noter imper
la DET le
différence NOUN différence
avec ADP avec
tous DET tout
non ADV non
nuls ADJ nul
qui PRON qui
signifient VERB signifier ind_pre
que SCONJ que
tous ADJ tout
les DET le
coefficients NOUN coefficient
sont VERB être ind_pre
non ADV non
nuls ADJ nul
, PUNCT ,
alors ADV alors
que SCONJ que
non ADV non
tous ADJ tout
nuls ADV nuls
signifie VERB signifier ind_pre sub_pre
qu' SCONJ que
il PRON il
en ADP en
existe VERB exister ind_pre sub_pre
au ADP à
moins ADV moins
un DET un
non ADV non
nul ADJ nul
! PUNCT !
Démonstration NOUN démonstration
1 NUM 1
. PUNCT .
Dans ADP dans
R2 PROPN R2
, PUNCT ,
les DET le
vecteurs NOUN vecteur
( PUNCT (
1 NUM 1
, PUNCT ,
2 NUM 2
) PUNCT )
et CCONJ et
( PUNCT (
1 NUM 1
, PUNCT ,
1 NUM 1
) PUNCT )
sont VERB être ind_pre
linéairement ADV linéairement
indépendants ADJ indépendant
alors ADV alors
que SCONJ que
les DET le
vecteurs NOUN vecteur
( PUNCT (
1 NUM 1
, PUNCT ,
2 NUM 2
) PUNCT )
, PUNCT ,
( PUNCT (
1 NUM 1
, PUNCT ,
1 NUM 1
) PUNCT )
2 NUM 2
. PUNCT .
Dans ADP dans
C NOUN c
en ADP en
tant ADV tant
que SCONJ que
R NOUN r
- ADJ -
espace PROPN espace
vectoriel VERB vectoriel
les DET le
parties NOUN party
1 NUM 1
, PUNCT ,
i X i
, PUNCT ,
1 NUM 1
, PUNCT ,
j PRON j
et CCONJ et
i NOUN i
, PUNCT ,
j PRON j
sont VERB être ind_pre
libres ADJ libre
, PUNCT ,
alors ADV alors
que SCONJ que
la DET le
partie NOUN partie
1 NUM 1
, PUNCT ,
i X i
, PUNCT ,
j PRON j
est VERB être ind_pre
liée VERB lier par_pas pas_cop
. PUNCT .
3 NUM 3
. PUNCT .
Dans ADP dans
C NOUN c
en ADP en
tant ADV tant
que SCONJ que
C NOUN c
- ADJ -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
les DET le
parties NOUN party
1 NUM 1
, PUNCT ,
i X i
, PUNCT ,
1 NUM 1
, PUNCT ,
j PRON j
et CCONJ et
i NOUN i
, PUNCT ,
j PRON j
sont VERB être ind_pre
liées VERB lier par_pas pas_cop
. PUNCT .
Si SCONJ si
ei PROPN ei
, PUNCT ,
i AUX i
I ADJ i
est VERB être ind_pre
une DET un
partie NOUN partie
libre ADJ libre
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
, PUNCT ,
et CCONJ et
si SCONJ si
x ADP x
6 NUM 6
Vect(ei VERB vect(ei
, PUNCT ,
i ADJ i
I ADJ i
) PUNCT )
, PUNCT ,
alors ADV alors
x ADP x
ei PROPN ei
, PUNCT ,
i AUX i
I ADJ i
est VERB être ind_pre
encore ADV encore
une DET un
partie NOUN partie
libre ADJ libre
de ADP de
E NOUN e
Démonstration NOUN démonstration
ik CCONJ ik
.xik PUNCT .xik
0E NUM 0E
Supposons VERB supposer imper
que ADV que
6 DET 6
0 DET 0
K NOUN k
. PUNCT .
Alors ADV alors
.xik PUNCT .xik
Vect(ei VERB vect(ei
, PUNCT ,
i ADJ i
I ADJ i
) PUNCT )
ce PRON ce
qui PRON qui
contredit VERB contredire par_pas ind_pre
x ADP x
6 NUM 6
Vect(ei VERB vect(ei
, PUNCT ,
i ADJ i
I ADJ i
) PUNCT )
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
0 NUM 0
K NOUN k
donc ADV donc
ik CCONJ ik
.xik PUNCT .xik
0E NUM 0E
d' ADP de
où PRON où
, PUNCT ,
puisque SCONJ puisque
ei PROPN ei
, PUNCT ,
i AUX i
I ADJ i
est VERB être ind_pre
une DET un
partie NOUN partie
libre ADJ libre
de ADP de
E NOUN e
, PUNCT ,
i1 NOUN i1
in X in
0 NUM 0
K NOUN k
. PUNCT .
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
x ADP x
ei PROPN ei
, PUNCT ,
i AUX i
I ADJ i
est VERB être ind_pre
une DET un
partie NOUN partie
libre ADJ libre
de ADP de
E. PROPN E.
Soit VERB être sub_pre
X NOUN x
( PUNCT (
xi PROPN xi
) PUNCT )
iI ADV ii
une DET un
famille NOUN famille
de ADP de
vecteurs NOUN vecteur
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
E. PROPN E.
Alors ADV alors
: PUNCT :
1 NUM 1
. PUNCT .
si SCONJ si
il PRON il
existe VERB exister ind_pre
i0 VERB i0
I ADJ i
tel ADJ tel
que SCONJ que
xi0 PROPN xi0
0E NUM 0E
, PUNCT ,
alors ADV alors
X NOUN x
est VERB être ind_pre
liée VERB lier par_pas pas_cop
2 NUM 2
. PUNCT .
si SCONJ si
il PRON il
existe VERB exister ind_pre
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
I ADJ i
2 NUM 2
tel ADJ tel
que SCONJ que
i ADP i
6 NUM 6
j NOUN j
et CCONJ et
xi NOUN xi
xj NOUN xj
, PUNCT ,
alors ADV alors
X NOUN x
est VERB être ind_pre
liée VERB lier par_pas pas_cop
3 NUM 3
. PUNCT .
si SCONJ si
une DET un
sous-famille NOUN sous-famille
( PUNCT (
xi PROPN xi
) PUNCT )
iJ VERB ij
où PRON où
J NOUN j
I ADJ i
est VERB être ind_pre
liée VERB lier par_pas pas_cop
, PUNCT ,
alors ADV alors
X NOUN x
est VERB être ind_pre
liée VERB lier par_pas pas_cop
4 NUM 4
. PUNCT .
si SCONJ si
X NOUN x
est VERB être ind_pre
libre ADJ libre
, PUNCT ,
alors ADV alors
toute DET tout
sous-famille NOUN sous-famille
de ADP de
X NOUN x
est VERB être ind_pre
libre ADJ libre
. PUNCT .
Démonstration NOUN démonstration
1 NUM 1
. PUNCT .
Il PRON il
existe VERB exister ind_pre
une DET un
écriture NOUN écriture
de ADP de
0E NUM 0E
non ADV non
trivial ADJ trivial
, PUNCT ,
car CCONJ car
0E ADP 0e
1.xi0 NOUN 1.xi0
, PUNCT ,
donc ADV donc
X NOUN x
est VERB être ind_pre
liée VERB lier par_pas pas_cop
. PUNCT .
2 NUM 2
. PUNCT .
Il PRON il
existe VERB exister ind_pre
une DET un
écriture NOUN écriture
de ADP de
0 NUM 0
K NOUN k
non ADV non
trivial ADJ trivial
, PUNCT ,
car CCONJ car
0E ADP 0e
xi PRON xi
xj NOUN xj
1.xi NOUN 1.xi
( PUNCT (
1).xj NOUN 1).xj
, PUNCT ,
donc ADV donc
X NOUN x
est VERB être ind_pre
liée VERB lier par_pas pas_cop
. PUNCT .
3 NUM 3
. PUNCT .
Si SCONJ si
il PRON il
existe VERB exister ind_pre
une DET un
écriture NOUN écriture
de ADP de
0E NUM 0E
non ADV non
trivial ADJ trivial
à ADP à
partir VERB partir inf
des ADP de
( PUNCT (
xi PRON xi
) PUNCT )
iJ NOUN ij
, PUNCT ,
c' PRON ce
est VERB être ind_pre
encore ADV encore
une DET un
écriture NOUN écriture
de ADP de
0E NUM 0E
non ADV non
trivial ADJ trivial
à ADP à
partir VERB partir inf
des ADP de
vecteurs NOUN vecteur
de ADP de
X NOUN x
, PUNCT ,
car CCONJ car
( PUNCT (
xi PROPN xi
) PUNCT )
iJ NOUN ij
est VERB être ind_pre
une DET un
sous-famille NOUN sous-famille
de ADP de
X NOUN x
. PUNCT .
4 NUM 4
. PUNCT .
C' PRON ce
est VERB être ind_pre
la DET le
contraposée NOUN contraposée
de ADP de
la DET le
propriété NOUN propriété
précédente ADJ précédent
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
une DET un
famille NOUN famille
( PUNCT (
xi PROPN xi
) PUNCT )
iI PRON ii
est VERB être ind_pre
appelée VERB appeler par_pas
base NOUN base
de ADP de
E NOUN e
, PUNCT ,
si SCONJ si
elle PRON lui
est VERB être ind_pre
à ADP à
la DET le
fois NOUN fois
famille NOUN famille
libre ADJ libre
et CCONJ et
famille NOUN famille
génératrice NOUN génératrice
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Si SCONJ si
B NOUN b
( PUNCT (
ei NOUN ei
) PUNCT )
iI PRON ii
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
a VERB avoir ind_pre
: PUNCT :
distincts ADJ distinct
2 NUM 2
à ADP à
2 NUM 2
Cela PRON cela
signifie VERB signifier ind_pre
que SCONJ que
tout DET tout
vecteur NOUN vecteur
de ADP de
E NOUN e
s' PRON se
écrit VERB écrire par_pas ind_pre
de ADP de
manière NOUN manière
unique ADJ unique
comme ADP comme
une DET un
combinaison NOUN combinaison
linéaire ADJ linéaire
d' ADP de
éléments NOUN élément
a. VERB avoir ind_pre
Notons VERB noter ind_pre
que SCONJ que
dans ADP dans
cette DET ce
écriture NOUN écriture
, PUNCT ,
lorsque SCONJ lorsque
x ADP x
0E NUM 0E
, PUNCT ,
on PRON on
a VERB avoir ind_pre
n AUX n
0 NUM 0
. PUNCT .
Démonstration NOUN démonstration
Immédiat PROPN Immédiat
: PUNCT :
x ADP x
s' PRON se
écrit VERB écrire par_pas ind_pre
comme ADP comme
une DET un
combinaison NOUN combinaison
linéaire ADJ linéaire
d' ADP de
éléments NOUN élément
de ADP de
B NOUN b
car CCONJ car
B NOUN b
est VERB être ind_pre
génératrice NOUN génératrice
et CCONJ et
cette DET ce
combinaison NOUN combinaison
linéaire ADJ linéaire
est VERB être ind_pre
unique ADJ unique
car CCONJ car
B NOUN b
est VERB être ind_pre
libre ADJ libre
. PUNCT .
La DET le
famille NOUN famille
( PUNCT (
i NOUN i
) PUNCT )
iI PRON ii
définie VERB définir par_pas
par ADP par
: PUNCT :
est VERB être ind_pre
appelée VERB appeler par_pas
coordonnées VERB coordonner par_pas
du ADP de
vecteur NOUN vecteur
x NOUN x
dans ADP dans
la DET le
base NOUN base
B. NOUN b.
L' DET le
ensemble NOUN ensemble
vide ADJ vide
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
0E NUM 0E
. PUNCT .
1 NUM 1
. PUNCT .
La DET le
base NOUN base
canonique ADJ canonique
de ADP de
Kn PROPN Kn
est VERB être ind_pre
la DET le
famille NOUN famille
( PUNCT (
ei NOUN ei
) PUNCT )
i1,n NOUN i1,n
, PUNCT ,
où PRON où
pour ADP pour
tout DET tout
i NUM i
1 NUM 1
, PUNCT ,
n NOUN n
, PUNCT ,
i X i
- NUM -
ième ADJ ième
élément NOUN élément
La DET le
base NOUN base
canonique ADJ canonique
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
K NOUN k
. PUNCT .
2 NUM 2
. PUNCT .
La DET le
famille NOUN famille
( PUNCT (
x ADP x
7 NUM 7
xn NOUN xn
) PUNCT )
nN NOUN nn
est VERB être ind_pre
une DET un
base NOUN base
du ADP de
R NOUN r
- NOUN -
espace PROPN espace
vectoriel VERB vectoriel
des ADP de
fonctions NOUN fonction
polynomiales ADJ polynomial
. PUNCT .
Il PRON il
est VERB être ind_pre
équivalent VERB équivaloir ind_pre
de ADP de
dire VERB dire inf
: PUNCT :
1 NUM 1
. PUNCT .
la DET le
famille NOUN famille
( PUNCT (
ei NOUN ei
) PUNCT )
iI PRON ii
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
2 NUM 2
. PUNCT .
on PRON on
a VERB avoir ind_pre
la DET le
décomposition NOUN décomposition
en ADP en
somme NOUN somme
directe ADJ direct
de ADP de
E PROPN E
suivante ADJ suivant
: PUNCT :
Vect(ei VERB vect(ei
) PUNCT )
Démonstration NOUN démonstration
Immédiat PROPN Immédiat
: PUNCT :
on PRON on
utilise VERB utiliser ind_pre
la DET le
proposition NOUN proposition
1.7 NUM 1.7
, PUNCT ,
page NOUN page
29 NUM 29
et CCONJ et
on PRON on
remarque VERB remarquer ind_pre
que SCONJ que
la DET le
famille NOUN famille
( PUNCT (
ei NOUN ei
) PUNCT )
iI PRON ii
est VERB être ind_pre
libre ADJ libre
si SCONJ si
et CCONJ et
seulement ADV seulement
si SCONJ si
les PRON le
Vect(ei NOUN vect(ei
) PUNCT )
sont VERB être ind_pre
en ADP en
somme NOUN somme
directe ADJ direct
. PUNCT .
La DET le
notion NOUN notion
de ADP de
base NOUN base
ne ADV ne
est VERB être ind_pre
donc ADV donc
qu' SCONJ que
un DET un
cas NOUN cas
très ADV très
particulier ADJ particulier
de ADP de
la DET le
décomposition NOUN décomposition
en ADP en
somme NOUN somme
directe ADJ direct
. PUNCT .
1.6.1 PRON 1.6.1
Si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
si SCONJ si
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en NOUN en
) PUNCT )
est VERB être ind_pre
une DET un
famille NOUN famille
de ADP de
vecteurs NOUN vecteur
de ADP de
E NOUN e
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Dans ADP dans
tous ADJ tout
les DET le
cas NOUN cas
: PUNCT :
1.6.2 NUM 1.6.2
Dans ADP dans
R4 PROPN R4
, PUNCT ,
on PRON on
considère VERB considérer ind_pre
les DET le
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
suivants ADJ suivant
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
( PUNCT (
c NOUN c
) PUNCT )
Exprimer VERB exprimer inf
les DET le
coordonnées NOUN coordonnée
d' ADP de
un DET un
vecteur NOUN vecteur
quelconque ADJ quelconque
de ADP de
R4 PROPN R4
dans ADP dans
cette DET ce
base NOUN base
. PUNCT .
1.6.3 NUM 1.6.3
Dans ADP dans
R5 NOUN r5
, PUNCT ,
on PRON on
considère VERB considérer ind_pre
les DET le
vecteurs NOUN vecteur
: PUNCT :
F NOUN f
Vect(a PROPN Vect(a
, PUNCT ,
b NOUN b
, PUNCT ,
c NOUN c
) PUNCT )
et CCONJ et
G NOUN gramme
Vect(d VERB vect(d
, PUNCT ,
e X e
) PUNCT )
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Trouver VERB trouver inf
des DET un
bases NOUN base
de ADP de
F NOUN f
, PUNCT ,
G NOUN gramme
, PUNCT ,
F NOUN f
G PROPN G
et CCONJ et
F NOUN f
G. NOUN g.
( PUNCT (
b NOUN b
) PUNCT )
Trouver VERB trouver inf
des DET un
équations NOUN équation
de ADP de
ces DET ce
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
. PUNCT .
1.6.4 NUM 1.6.4
On PRON on
considère VERB considérer ind_pre
dans ADP dans
R4 NOUN r4
les DET le
cinq NUM cinq
vecteurs NOUN vecteur
suivants ADJ suivant
: PUNCT :
Donner VERB donner inf
une DET un
équation NOUN équation
du ADP de
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
engendré VERB engendrer par_pas
par ADP par
ces DET ce
cinq NUM cinq
vecteurs NOUN vecteur
. PUNCT .
1.6.5 NUM 1.6.5
Soit VERB être sub_pre
E NOUN e
F NOUN f
( PUNCT (
R NOUN r
, PUNCT ,
R NOUN r
) PUNCT )
et CCONJ et
F NOUN f
le DET le
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
engendré VERB engendrer par_pas
par ADP par
les DET le
fonctions NOUN fonction
: PUNCT :
Déterminer VERB déterminer inf
une DET un
base NOUN base
de ADP de
F NOUN f
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
( PUNCT (
f NOUN f
) PUNCT )
R NOUN r
est VERB être ind_pre
une DET un
famille NOUN famille
libre ADJ libre
de ADP de
F NOUN f
( PUNCT (
R NOUN r
, PUNCT ,
R NOUN r
) PUNCT )
1.6.7 NUM 1.6.7
Soit VERB être sub_pre
A ADP à
un DET un
ensemble NOUN ensemble
, PUNCT ,
f NUM f
une DET un
application NOUN application
de ADP de
A PROPN A
dans ADP dans
R NOUN r
, PUNCT ,
telle ADJ tel
que SCONJ que
f PRON f
( PUNCT (
A NOUN a
) PUNCT )
est VERB être ind_pre
infini ADJ infini
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
la DET le
famille NOUN famille
( PUNCT (
f NOUN f
) PUNCT )
R NOUN r
est VERB être ind_pre
libre ADJ libre
dans ADP dans
F NOUN f
( PUNCT (
A NOUN a
, PUNCT ,
R NOUN r
) PUNCT )
. PUNCT .
1.6.8 PROPN 1.6.8
Soit VERB être sub_pre
n AUX n
N ADJ n
, PUNCT ,
et CCONJ et
x1 PROPN x1
xn VERB xn
des DET un
réels NOUN réel
. PUNCT .
On PRON on
pose VERB poser ind_pre
x0 NUM x0
et CCONJ et
xn1 NOUN xn1
. PUNCT .
Soit VERB être sub_pre
E NOUN e
l' DET le
ensemble NOUN ensemble
des ADP de
fonctions NOUN fonction
f NUM f
: PUNCT :
R NOUN r
R NOUN r
, PUNCT ,
de ADP de
classe NOUN classe
C NOUN c
1 NUM 1
, PUNCT ,
telles ADJ tel
que SCONJ que
la DET le
restriction NOUN restriction
de ADP de
f PRON f
à ADP à
chaque DET chaque
intervalle NOUN intervalle
xi PRON xi
, PUNCT ,
xi1 NOUN xi1
, PUNCT ,
( PUNCT (
i X i
0 NUM 0
, PUNCT ,
n NOUN n
) PUNCT )
est VERB être ind_pre
une DET un
fonction NOUN fonction
polynomiale ADJ polynomial
de ADP de
degré NOUN degré
2 NUM 2
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
E NOUN e
est VERB être ind_pre
un DET un
R NOUN r
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
en ADP en
donner VERB donner inf
une DET un
base NOUN base
. PUNCT .
1.6.9 NUM 1.6.9
Démontrer VERB démontrer inf
que SCONJ que
dans ADP dans
Rn PROPN Rn
, PUNCT ,
il PRON il
existe VERB exister ind_pre
une DET un
famille NOUN famille
infinie ADJ infini
F NOUN f
de ADP de
vecteurs NOUN vecteur
tels ADJ tel
que SCONJ que
chaque DET chaque
sous ADP sous
famille NOUN famille
de ADP de
cardinal ADJ cardinal
n ADJ n
est VERB être ind_pre
libre ADJ libre
. PUNCT .
Dimension NOUN dimension
finie VERB finir par_pas
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
On PRON on
dit VERB dire ind_pre
que SCONJ que
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
si SCONJ si
il PRON il
possède VERB posséder ind_pre
une DET un
base NOUN base
de ADP de
cardinal NOUN cardinal
fini VERB finir par_pas
. PUNCT .
Dans ADP dans
le DET le
cas NOUN cas
contraire ADJ contraire
, PUNCT ,
il PRON il
est VERB être ind_pre
dit VERB dire par_pas ind_pre
de ADP de
dimension NOUN dimension
infinie ADJ infini
. PUNCT .
1 NUM 1
. PUNCT .
Pour ADP pour
tout DET tout
n AUX n
N ADJ n
, PUNCT ,
Kn PROPN Kn
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
. PUNCT .
2 NUM 2
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
C NOUN c
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
alors ADV alors
E NOUN e
est VERB être ind_pre
un DET un
R NOUN r
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
. PUNCT .
3 NUM 3
. PUNCT .
L' DET le
ensemble NOUN ensemble
des ADP de
fonctions NOUN fonction
polynomiales ADJ polynomial
de ADP de
R PROPN R
dans ADP dans
R NOUN r
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
infinie ADJ infini
. PUNCT .
Théorème NOUN théorème
1.1 NUM 1.1
Échange NOUN échange else
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
soit VERB être sub_pre
( PUNCT (
g1 PROPN g1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
gn PROPN gn
) PUNCT )
une DET un
famille NOUN famille
génératrice NOUN génératrice
et CCONJ et
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
p NOUN p
) PUNCT )
une DET un
famille NOUN famille
libre ADJ libre
de ADP de
E NOUN e
, PUNCT ,
2 NUM 2
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
échanger VERB échanger inf
certains DET certain
vecteurs NOUN vecteur
de ADP de
la DET le
famille NOUN famille
génératrice VERB génératrice
avec ADP avec
des DET un
vecteurs NOUN vecteur
de ADP de
la DET le
famille NOUN famille
libre ADJ libre
tout DET tout
en ADP en
gardant VERB garder par_pre
la DET le
propriété NOUN propriété
d' ADP de
être VERB être inf
génératrice NOUN génératrice
, PUNCT ,
soit VERB être sub_pre
: PUNCT :
Démonstration NOUN démonstration
Puisque SCONJ puisque
( PUNCT (
g1 PROPN g1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
gn PROPN gn
) PUNCT )
est VERB être ind_pre
génératrice NOUN génératrice
, PUNCT ,
1 NUM 1
est VERB être ind_pre
combinaison NOUN combinaison
linéaire ADJ linéaire
de ADP de
( PUNCT (
g1 PROPN g1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
gn PROPN gn
) PUNCT )
. PUNCT .
De ADP de
plus ADV plus
, PUNCT ,
1 DET 1
6 DET 6
0E NUM 0E
( PUNCT (
car CCONJ car
( PUNCT (
1 NUM 1
) PUNCT )
est VERB être ind_pre
libre ADJ libre
) PUNCT )
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
supposer VERB supposer inf
que SCONJ que
les DET le
coefficients NOUN coefficient
ne ADV ne
sont VERB être ind_pre
pas ADV pas
tous ADJ tout
nuls ADJ nul
, PUNCT ,
par ADP par
exemple NOUN exemple
le DET le
premier ADJ premier
: PUNCT :
avec ADP avec
1 DET 1
6 DET 6
0 NOUN 0
. PUNCT .
Alors ADV alors
On PRON on
itère NOUN itère
le DET le
procédé NOUN procédé
. PUNCT .
Supposons VERB supposer ind_pre
qu' PRON qu'
on PRON on
ait AUX avoir
formé VERB former par_pas
une DET un
famille NOUN famille
génératrice NOUN génératrice
de ADP de
la DET le
forme NOUN forme
donc ADV donc
on PRON on
peut VERB pouvoir ind_pre
écrire VERB écrire inf
liées VERB lier par_pas
) PUNCT )
. PUNCT .
Par ADP par
le DET le
même ADJ même
argument NOUN argument
qui PRON qui
ci PRON ci
- NUM -
dessus ADJ dessu
, PUNCT ,
on PRON on
a VERB avoir ind_pre
donc ADV donc
Il PRON il
reste VERB rester ind_pre
à ADP à
démontrer VERB démontrer inf
que SCONJ que
p NOUN p
n. DET n.
Si SCONJ si
p NOUN p
n NOUN n
, PUNCT ,
en ADP en
prenant VERB prendre par_pre
k DET k
n DET n
1 PRON 1
dans ADP dans
la DET le
construction NOUN construction
ci PRON ci
- NUM -
dessus ADJ dessu
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
que SCONJ que
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
n NOUN n
) PUNCT )
est VERB être ind_pre
une DET un
partie NOUN partie
génératrice NOUN génératrice
de ADP de
E. PROPN E.
On PRON on
aurait VERB avoir con_pre
alors ADV alors
n1 NOUN n1
Vect(1 PROPN Vect(1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
n NOUN n
) PUNCT )
, PUNCT ,
donc ADV donc
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
n1 NOUN n1
) PUNCT )
serait VERB être con_pre
liée VERB lier par_pas con_pas
, PUNCT ,
ce PRON ce
qui PRON qui
contredit VERB contredire par_pas ind_pre
le DET le
fait NOUN fait
que SCONJ que
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
p NOUN p
) PUNCT )
est VERB être ind_pre
libre ADJ libre
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
p NOUN p
n. NOUN n.
On PRON on
peut VERB pouvoir ind_pre
aussi ADV aussi
énoncer VERB énoncer inf
ce DET ce
résultat NOUN résultat
avec ADP avec
une DET un
famille NOUN famille
génératrice NOUN génératrice
de ADP de
cardinal NOUN cardinal
quelconque ADJ quelconque
( PUNCT (
peut-être ADV peut-être
infini ADV infini
) PUNCT )
, PUNCT ,
où PRON où
l' PRON l'
on PRON on
pourra VERB pouvoir fut_sim
échanger VERB échanger inf
p NOUN p
vecteurs NOUN vecteur
de ADP de
cette DET ce
famille NOUN famille
tout ADV tout
en ADP en
la PRON le
gardant VERB garder par_pre
génératrice NOUN génératrice
. PUNCT .
Théorème NOUN théorème
1.2 NUM 1.2
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
alors ADV alors
toutes ADJ tout
les DET le
bases NOUN base
ont VERB avoir ind_pre
même ADV même
cardinal NOUN cardinal
. PUNCT .
Ce DET ce
cardinal NOUN cardinal
commun ADJ commun
est VERB être ind_pre
appelé VERB appeler par_pas
dimension NOUN dimension
de ADP de
E NOUN e
et CCONJ et
est VERB être ind_pre
notée VERB noter par_pas
a X avoir
: PUNCT :
dimK PROPN dimK
E NOUN e
ou CCONJ ou
dim ADP dim
E NOUN e
si SCONJ si
il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
pas ADV pas
ambiguïté ADV ambiguïté
sur ADP sur
le DET le
corps NOUN corps
K NOUN k
a. VERB avoir ind_pre
On PRON on
utiliser VERB utiliser inf
aussi ADV aussi
parfois ADV parfois
la DET le
notation NOUN notation
dim(E VERB dim(e
) PUNCT )
ou CCONJ ou
dimK CCONJ dimk
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Démonstration NOUN démonstration
C' PRON ce
est VERB être ind_pre
une DET un
application NOUN application
immédiate ADJ immédiat
du ADP de
théorème NOUN théorème
de ADP de
l' DET le
échange NOUN échange
car CCONJ car
les DET le
bases NOUN base
sont VERB être ind_pre
à ADP à
la DET le
fois NOUN fois
libres ADJ libre
et CCONJ et
génératrices ADJ générateur
. PUNCT .
On PRON on
appelle VERB appeler ind_pre
droite NOUN droite
vectorielle ADJ vectoriel
tout DET tout
K NOUN k
- ADJ -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
1 NUM 1
. PUNCT .
On PRON on
appelle VERB appeler ind_pre
plan NOUN plan
vectoriel ADJ vectoriel
tout DET tout
K NOUN k
- ADJ -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
2 NUM 2
. PUNCT .
Dimension NOUN dimension
nulle ADJ nul
On PRON on
convient VERB convenir ind_pre
que SCONJ que
l' DET le
espace NOUN espace
vectoriel VERB vectoriel
0E NUM 0E
est VERB être ind_pre
de ADP de
dimension NOUN dimension
0 NUM 0
. PUNCT .
Cette DET ce
définition NOUN définition
est VERB être ind_pre
cohérente ADJ cohérent
avec ADP avec
celle PRON celui
de ADP de
droite NOUN droite
vectorielle ADJ vectoriel
engendrée VERB engendrer par_pas
: PUNCT :
si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
différent ADV différent
de ADP de
0E NUM 0E
et CCONJ et
si SCONJ si
x NOUN x
E NOUN e
, PUNCT ,
x ADP x
6 NUM 6
0E NUM 0E
, PUNCT ,
alors ADV alors
x NOUN x
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
K.x PROPN K.x
, PUNCT ,
la DET le
droite NOUN droite
vectorielle ADJ vectoriel
engendrée VERB engendrer par_pas
par ADP par
x NOUN x
, PUNCT ,
qui PRON qui
est VERB être ind_pre
bien ADV bien
de ADP de
dimension NOUN dimension
1 NUM 1
. PUNCT .
1 NUM 1
. PUNCT .
On PRON on
a VERB avoir ind_pre
clairement ADV clairement
: PUNCT :
dimK PROPN dimK
Kn PROPN Kn
n NOUN n
, PUNCT ,
dimR NOUN dimr
C NOUN c
2 NUM 2
2 NUM 2
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
C NOUN c
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
alors ADV alors
: PUNCT :
dimC PROPN dimC
E NOUN e
n NOUN n
dimR ADV dimr
E NOUN e
2 NUM 2
n NOUN n
3 NUM 3
. PUNCT .
Quelques DET quelque
espaces NOUN espace
de ADP de
dimensions NOUN dimension
infinies ADJ infini
: PUNCT :
le DET le
R NOUN r
- NOUN -
espace PROPN espace
vectoriel VERB vectoriel
des ADP de
fonctions NOUN fonction
polynomiales ADJ polynomial
, PUNCT ,
mais CCONJ mais
aussi ADV aussi
: PUNCT :
Théorème NOUN théorème
1.3 NUM 1.3
Base NOUN base else
incomplète ADJ incomplet
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n NOUN n
, PUNCT ,
soit VERB être sub_pre
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
p NOUN p
) PUNCT )
une DET un
famille NOUN famille
libre ADJ libre
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
2 NUM 2
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
compléter VERB compléter inf
la DET le
famille NOUN famille
libre ADJ libre
en ADP en
une DET un
base NOUN base
, PUNCT ,
soit VERB être sub_pre
: PUNCT :
Démonstration NOUN démonstration
C' PRON ce
est VERB être ind_pre
une DET un
application NOUN application
immédiate ADJ immédiat
du ADP de
théorème NOUN théorème
de ADP de
l' DET le
échange NOUN échange
, PUNCT ,
en ADP en
prenant VERB prendre par_pre
comme ADP comme
famille NOUN famille
génératrice VERB génératrice
une DET un
base NOUN base
de ADP de
E NOUN e
( PUNCT (
qui PRON qui
a VERB avoir ind_pre
n ADV n
éléments NOUN élément
) PUNCT )
. PUNCT .
Principe NOUN principe
de ADP de
construction NOUN construction
de ADP de
bases NOUN base
( PUNCT (
en ADP en
dimension NOUN dimension
finie VERB finir par_pas
) PUNCT )
. PUNCT .
Si SCONJ si
on PRON on
veut VERB vouloir ind_pre
trouver VERB trouver inf
une DET un
base NOUN base
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
E NOUN e
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
on PRON on
procède VERB procéder ind_pre
par ADP par
itération NOUN itération
: PUNCT :
1 NUM 1
. PUNCT .
Supposons VERB supposer ind_pre
construits VERB construire par_pas
les DET le
p NOUN p
premiers ADJ premier
vecteurs NOUN vecteur
de ADP de
la DET le
base NOUN base
( PUNCT (
au ADP à
départ NOUN départ
p NOUN p
0 NUM 0
) PUNCT )
, PUNCT ,
notés VERB noter par_pas
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
, PUNCT ,
on PRON on
prend VERB prendre ind_pre
alors ADV alors
un DET un
vecteur NOUN vecteur
de ADP de
E NOUN e
qui PRON qui
ne ADV ne
est VERB être ind_pre
pas ADV pas
dans ADP dans
Vect(e1 NOUN vect(e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
, PUNCT ,
cela PRON cela
fait VERB faire par_pas ind_pre
un DET un
nouveau ADJ nouveau
vecteur NOUN vecteur
. PUNCT .
Si SCONJ si
l' PRON l'
on PRON on
dispose VERB disposer ind_pre
d' ADP de
une DET un
partie NOUN partie
génératrice NOUN génératrice
de ADP de
E NOUN e
, PUNCT ,
on PRON on
cherche VERB chercher ind_pre
le DET le
premier ADJ premier
vecteur NOUN vecteur
de ADP de
la DET le
partie NOUN partie
génératrice NOUN génératrice
qui PRON qui
ne ADV ne
est VERB être ind_pre
2 NUM 2
. PUNCT .
On PRON on
réitère VERB réitérer ind_pre
. PUNCT .
Trouvons VERB trouver ind_pre
une DET un
base NOUN base
du ADP de
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
F ADJ f
de ADP de
R4 NOUN r4
, PUNCT ,
d' ADP de
équations NOUN équation
x ADJ x
y PRON y
z X z
t X t
0 NUM 0
et CCONJ et
x ADP x
y PRON y
2 NUM 2
z NOUN z
3 NUM 3
t NOUN t
0 NUM 0
. PUNCT .
Les DET le
calculs NOUN calcul
sont VERB être ind_pre
explicités VERB expliciter par_pas
dans ADP dans
la DET le
session NOUN session
Wxmaxima ADJ wxmaxima
1.2 NUM 1.2
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
page NOUN page
. PUNCT .
Ce PRON ce
qui PRON qui
nous PRON nous
donne VERB donner ind_pre
, PUNCT ,
par ADP par
exemple NOUN exemple
, PUNCT ,
Cherchons VERB chercher ind_pre
un DET un
supplémentaire ADJ supplémentaire
de ADP de
F NOUN f
( PUNCT (
et CCONJ et
une DET un
base NOUN base
de ADP de
ce DET ce
supplémentaire ADJ supplémentaire
) PUNCT )
: PUNCT :
on PRON on
cherche VERB chercher ind_pre
un DET un
vecteur NOUN vecteur
qui PRON qui
ne ADV ne
est VERB être ind_pre
pas ADV pas
dans ADP dans
Vect(e1 NOUN vect(e1
, PUNCT ,
e2 NOUN e2
) PUNCT )
. PUNCT .
Pour ADP pour
cela PRON cela
, PUNCT ,
il PRON il
suffit VERB suffire ind_pre
d' ADP de
imposer VERB imposer inf
z NOUN z
t NOUN t
0 NUM 0
et CCONJ et
( PUNCT (
x NOUN x
, PUNCT ,
y PRON y
) PUNCT )
6 NUM 6
( PUNCT (
0 NUM 0
, PUNCT ,
0 NUM 0
) PUNCT )
, PUNCT ,
car CCONJ car
Par ADP par
exemple NOUN exemple
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
prendre VERB prendre inf
: PUNCT :
Remarquons VERB remarquer imper
que PRON que
nous PRON nous
avons VERB avoir
utilisé VERB utiliser pas_cop
une DET un
partie NOUN partie
génératrice NOUN génératrice
bien ADV bien
connue VERB connaître par_pas
: PUNCT :
la DET le
base NOUN base
canonique ADJ canonique
de ADP de
R4 PROPN R4
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
. PUNCT .
Si SCONJ si
dim ADP dim
E NOUN e
n NOUN n
, PUNCT ,
alors ADV alors
: PUNCT :
1 NUM 1
. PUNCT .
toute DET tout
famille NOUN famille
de ADP de
plus ADV plus
de ADP de
n AUX n
1 NUM 1
éléments NOUN élément
est VERB être ind_pre
liée VERB lier par_pas pas_cop
2 NUM 2
. PUNCT .
toute DET tout
partie NOUN partie
génératrice NOUN génératrice
a VERB avoir ind_pre
plus ADV plus
de ADP de
n AUX n
éléments NOUN élément
3 NUM 3
. PUNCT .
toute DET tout
partie NOUN partie
libre ADJ libre
a VERB avoir ind_pre
moins ADV moins
de ADP de
n AUX n
éléments NOUN élément
4 NUM 4
. PUNCT .
toute DET tout
partie NOUN partie
génératrice NOUN génératrice
de ADP de
n AUX n
éléments NOUN élément
est VERB être ind_pre
une DET un
base NOUN base
5 NUM 5
. PUNCT .
toute DET tout
partie NOUN partie
libre ADJ libre
de ADP de
n AUX n
éléments NOUN élément
est VERB être ind_pre
une DET un
base NOUN base
. PUNCT .
Démonstration NOUN démonstration
1 NUM 1
. PUNCT .
Si SCONJ si
une DET un
famille NOUN famille
de ADP de
plus ADV plus
de ADP de
n AUX n
1 NUM 1
éléments NOUN élément
est VERB être ind_pre
libre ADJ libre
, PUNCT ,
on PRON on
pourrait VERB pouvoir con_pre
la PRON le
compléter VERB compléter inf
en ADP en
une DET un
base NOUN base
qui PRON qui
contiendrait VERB contenir con_pre
au ADP à
moins ADV moins
n AUX n
1 NUM 1
éléments NOUN élément
, PUNCT ,
ce PRON ce
qui PRON qui
contredit VERB contredire par_pas ind_pre
dim ADP dim
E NOUN e
n. NOUN n.
2 NUM 2
. PUNCT .
On PRON on
utilise VERB utiliser ind_pre
le DET le
théorème NOUN théorème
de ADP de
l' DET le
échange NOUN échange
avec ADP avec
une DET un
base NOUN base
comme ADP comme
famille NOUN famille
libre ADJ libre
. PUNCT .
3 NUM 3
. PUNCT .
C' PRON ce
est VERB être ind_pre
le DET le
théorème NOUN théorème
de ADP de
la DET le
base NOUN base
incomplète ADJ incomplet
. PUNCT .
4 NUM 4
. PUNCT .
Soit VERB être sub_pre
G NOUN gramme
une DET un
partie NOUN partie
génératrice NOUN génératrice
à ADP à
n AUX n
éléments NOUN élément
. PUNCT .
On PRON on
utilise VERB utiliser ind_pre
le DET le
théorème NOUN théorème
de ADP de
l' DET le
échange NOUN échange
pour ADP pour
extraire VERB extraire inf
une DET un
base NOUN base
B NOUN b
G NOUN gramme
de ADP de
E NOUN e
( PUNCT (
en ADP en
partant VERB partir par_pre
d' ADP de
une DET un
une DET un
sous-famille NOUN sous-famille
libre ADJ libre
de ADP de
G NOUN gramme
) PUNCT )
. PUNCT .
Mais CCONJ mais
B NOUN b
a VERB avoir ind_pre
n ADV n
dim ADP dim
E NUM E
élément NOUN élément
car CCONJ car
c' PRON ce
est VERB être ind_pre
une DET un
base NOUN base
, PUNCT ,
donc ADV donc
on PRON on
a VERB avoir ind_pre
G PROPN G
B NOUN b
, PUNCT ,
c' PRON ce
est VERB être ind_pre
donc ADV donc
une DET un
base NOUN base
. PUNCT .
5 NUM 5
. PUNCT .
Soit VERB être sub_pre
L NOUN l
une DET un
partie NOUN partie
libre ADJ libre
à ADP à
n AUX n
éléments NOUN élément
. PUNCT .
On PRON on
utilise VERB utiliser ind_pre
le DET le
théorème NOUN théorème
de ADP de
la DET le
base NOUN base
incomplète ADJ incomplet
pour ADP pour
obtenir VERB obtenir inf
une DET un
base NOUN base
L0 NOUN l0
L NOUN l
de ADP de
E. PROPN E.
Mais CCONJ mais
L0 NOUN l0
a VERB avoir ind_pre
n ADV n
dim ADP dim
E NUM E
élément NOUN élément
car CCONJ car
c' PRON ce
est VERB être ind_pre
une DET un
base NOUN base
, PUNCT ,
donc ADV donc
on PRON on
a VERB avoir ind_pre
L VERB l
L0 PROPN L0
, PUNCT ,
c' PRON ce
est VERB être ind_pre
donc ADV donc
une DET un
base NOUN base
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
. PUNCT .
Alors ADV alors
de ADP de
toute DET tout
partie NOUN partie
génératrice NOUN génératrice
on PRON on
peut VERB pouvoir ind_pre
extraire ADJ extrair
une DET un
base NOUN base
( PUNCT (
finie VERB finir par_pas
) PUNCT )
. PUNCT .
Démonstration NOUN démonstration
Si SCONJ si
E NOUN e
0E NUM 0E
, PUNCT ,
il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
rien PRON rien
à ADP à
démontrer VERB démontrer inf
. PUNCT .
Supposons VERB supposer ind_pre
E NOUN e
6 NUM 6
0E NOUN 0e
. PUNCT .
Soit VERB être sub_pre
G NOUN gramme
une DET un
partie NOUN partie
génératrice NOUN génératrice
de ADP de
E NOUN e
( PUNCT (
éventuellement ADV éventuellement
infinie ADJ infini
) PUNCT )
. PUNCT .
Il PRON il
existe VERB exister ind_pre
une DET un
base NOUN base
B NOUN b
de ADP de
E NOUN e
qui PRON qui
est VERB être ind_pre
finie VERB finir par_pas
. PUNCT .
Tous ADJ tout
les DET le
vecteurs NOUN vecteur
( PUNCT (
en ADP en
nombre NOUN nombre
fini VERB finir par_pas
) PUNCT )
de ADP de
B NOUN b
peuvent VERB pouvoir ind_pre
s' PRON se
écrire VERB écrire inf
comme ADP comme
une DET un
combinaison NOUN combinaison
linéaire ADJ linéaire
d' ADP de
éléments NOUN élément
de ADP de
G PROPN G
donc ADV donc
E NOUN e
est VERB être ind_pre
en ADP en
fait NOUN fait
engendré VERB engendrer par_pas
par ADP par
une DET un
sous-famille NOUN sous-famille
finie VERB finir par_pas
G NOUN gramme
0 NUM 0
de ADP de
G. NOUN g.
Comme ADP comme
E NOUN e
6 NUM 6
0E NUM 0E
, PUNCT ,
G NOUN gramme
0 NUM 0
contient VERB contenir ind_pre
un DET un
vecteur NOUN vecteur
x NOUN x
6 NUM 6
0E NOUN 0e
. PUNCT .
Le DET le
théorème NOUN théorème
de ADP de
la DET le
base NOUN base
incomplète ADJ incomplet
permet VERB permettre ind_pre
alors ADV alors
de ADP de
construire VERB construire inf
une DET un
base NOUN base
de ADP de
E NOUN e
en ADP en
complétant VERB compléter par_pre
la DET le
famille NOUN famille
( PUNCT (
x NOUN x
) PUNCT )
par ADP par
des DET un
éléments NOUN élément
de ADP de
G. NOUN g.
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Alors ADV alors
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
il PRON il
possède VERB posséder ind_pre
une DET un
partie NOUN partie
génératrice NOUN génératrice
finie VERB finir par_pas
( PUNCT (
c' PRON ce
est VERB être ind_pre
d' ADP de
ailleurs ADV ailleurs
une DET un
définition NOUN définition
fréquente ADJ fréquent
des ADP de
espaces NOUN espace
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
) PUNCT )
. PUNCT .
Démonstration NOUN démonstration
C' PRON ce
est VERB être ind_pre
une DET un
conséquence NOUN conséquence
immédiate ADJ immédiat
de ADP de
la DET le
définition NOUN définition
de ADP de
la DET le
dimension NOUN dimension
finie VERB finir par_pas
et CCONJ et
de ADP de
la DET le
proposition NOUN proposition
précédente ADJ précédent
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Alors ADV alors
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
infinie ADJ infini
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
il PRON il
existe VERB exister ind_pre
des DET un
parties NOUN party
libres ADJ libre
de ADP de
cardinal NOUN cardinal
quelconque ADJ quelconque
n AUX n
N. NOUN n.
Démonstration NOUN démonstration
Cela PRON cela
revient VERB revenir ind_pre
à ADP à
démontrer VERB démontrer inf
que SCONJ que
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
il PRON il
existe VERB exister ind_pre
n ADV n
N ADJ n
tel ADJ tel
que SCONJ que
toute DET tout
famille NOUN famille
de ADP de
E PROPN E
à ADP à
n NOUN n
éléments NOUN élément
soit VERB être sub_pre
liée VERB lier par_pas sub_pas
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
prendre VERB prendre inf
n DET n
dim ADP dim
E NOUN e
1 NUM 1
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
alors ADV alors
tout ADV tout
sous-espace ADV sous-espace
vectoriel NOUN vectoriel
F ADJ f
de ADP de
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
et CCONJ et
, PUNCT ,
de ADP de
plus ADV plus
: PUNCT :
dim ADP dim
F NOUN f
dim ADP dim
E NOUN e
E NOUN e
F NOUN f
dim ADP dim
E NOUN e
dim ADP dim
F NOUN f
Démonstration NOUN démonstration
Si SCONJ si
F NOUN f
0E NUM 0E
, PUNCT ,
il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
rien PRON rien
à ADP à
démontrer VERB démontrer inf
. PUNCT .
Supposons VERB supposer imper
F NOUN f
6 NUM 6
0E NUM 0E
. PUNCT .
Notons VERB noter imper
p NOUN p
le DET le
nombre NOUN nombre
maximal ADJ maximal
d' ADP de
éléments NOUN élément
que PRON que
peut VERB pouvoir ind_pre
avoir VERB avoir inf
une DET un
famille NOUN famille
libre ADJ libre
L NOUN l
de ADP de
F NOUN f
. PUNCT .
On PRON on
a VERB avoir ind_pre
1 NUM 1
p NOUN p
dim ADP dim
E NOUN e
( PUNCT (
car CCONJ car
F NOUN f
6 NUM 6
0E NUM 0E
et CCONJ et
que SCONJ que
L NOUN l
est VERB être ind_pre
une DET un
famille NOUN famille
libre ADJ libre
de ADP de
E NOUN e
) PUNCT )
. PUNCT .
Soit VERB être sub_pre
L NOUN l
une DET un
famille NOUN famille
libre ADJ libre
d' ADP de
éléments NOUN élément
de ADP de
F NOUN f
de ADP de
cardinal NOUN cardinal
p. NOUN p.
Pour ADP pour
tout ADV tout
x NOUN x
F NOUN f
, PUNCT ,
la DET le
famille NOUN famille
( PUNCT (
L NOUN l
, PUNCT ,
x NOUN x
) PUNCT )
est VERB être ind_pre
liée VERB lier par_pas pas_cop
( PUNCT (
car CCONJ car
sinon ADV sinon
cela PRON cela
contredit VERB contredire par_pas ind_pre
la DET le
définition NOUN définition
de ADP de
p NOUN p
) PUNCT )
, PUNCT ,
donc ADV donc
x PRON x
est VERB être ind_pre
combinaison NOUN combinaison
linéaire ADJ linéaire
d' ADP de
éléments NOUN élément
de ADP de
L NOUN l
, PUNCT ,
donc ADV donc
L NOUN l
est VERB être ind_pre
une DET un
famille NOUN famille
génératrice NOUN génératrice
de ADP de
F NOUN f
, PUNCT ,
c' PRON ce
est VERB être ind_pre
donc ADV donc
une DET un
base NOUN base
de ADP de
F NOUN f
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
dim ADP dim
F NOUN f
p NOUN p
dim ADP dim
E. PROPN E.
Si SCONJ si
dim ADP dim
E NOUN e
dim ADP dim
F NOUN f
p NOUN p
, PUNCT ,
L NOUN l
est VERB être ind_pre
une DET un
famille NOUN famille
libre ADJ libre
de ADP de
E NOUN e
à ADP à
p NOUN p
dim ADP dim
E NOUN e
éléments NOUN élément
, PUNCT ,
donc ADV donc
c' PRON ce
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
: PUNCT :
on PRON on
a VERB avoir ind_pre
Vect(L PROPN Vect(L
) PUNCT )
E. PROPN E.
Comme ADP comme
de ADP de
plus ADV plus
Vect(L NOUN vect(l
) PUNCT )
F NOUN f
, PUNCT ,
on PRON on
a VERB avoir ind_pre
bien ADV bien
E NOUN e
F NOUN f
. PUNCT .
La DET le
proposition NOUN proposition
précédente ADJ précédent
est VERB être ind_pre
très ADV très
pratique ADJ pratique
pour ADP pour
démontrer VERB démontrer inf
l' DET le
égalité NOUN égalité
de ADP de
deux NUM deux
espaces NOUN espace
vectoriels NOUN vectoriel
: PUNCT :
au ADP à
lieu NOUN lieu
de ADP de
démontrer VERB démontrer inf
le DET le
résultat NOUN résultat
par ADP par
double ADJ double
inclusion NOUN inclusion
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
se PRON se
limiter VERB limiter inf
à ADP à
démontrer VERB démontrer inf
une DET un
inclusion NOUN inclusion
et CCONJ et
conclure VERB conclure inf
par ADP par
une DET un
égalité NOUN égalité
de ADP de
dimension NOUN dimension
. PUNCT .
Attention NOUN attention
à ADP à
une DET un
erreur NOUN erreur
courante ADJ courant
: PUNCT :
si SCONJ si
B NOUN b
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
et CCONJ et
si SCONJ si
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
il PRON il
est VERB être ind_pre
faux ADJ faux
en ADP en
général NOUN général
qu' SCONJ que
une DET un
sous-famille NOUN sous-famille
de ADP de
B NOUN b
soit VERB être sub_pre
une DET un
base NOUN base
de ADP de
F NOUN f
. PUNCT .
Par ADP par
exemple NOUN exemple
, PUNCT ,
une DET un
base NOUN base
de ADP de
F NOUN f
R.(1 ADJ r.(1
, PUNCT ,
1 NUM 1
) PUNCT )
ne ADV ne
est VERB être ind_pre
jamais ADV jamais
une DET un
sous-famille NOUN sous-famille
de ADP de
la DET le
base NOUN base
canonique ADJ canonique
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
. PUNCT .
Base NOUN base else
adaptée VERB adapter par_pas
à ADP à
une DET un
somme NOUN somme
directe ADJ direct
de ADP de
deux NUM deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
On PRON on
suppose VERB supposer ind_pre
que SCONJ que
E NOUN e
F NOUN f
G NOUN gramme
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
alors ADV alors
construire VERB construire inf
une DET un
base NOUN base
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en ADP en
) PUNCT )
de ADP de
E PROPN E
telle ADJ tel
que SCONJ que
Une DET un
telle ADJ tel
base NOUN base
est VERB être ind_pre
dite VERB dire par_pas
base NOUN base
adaptée ADJ adapté
à ADP à
la DET le
somme NOUN somme
directe ADJ direct
. PUNCT .
Base NOUN base else
adaptée VERB adapter par_pas
à ADP à
une DET un
somme NOUN somme
directe ADJ direct
finie VERB finir par_pas
De ADP de
même ADV même
, PUNCT ,
lorsque SCONJ lorsque
l' PRON l'
on PRON on
a VERB avoir ind_pre
une DET un
décomposition NOUN décomposition
en ADP en
somme NOUN somme
directe ADJ direct
de ADP de
E NOUN e
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
toujours ADV toujours
construire VERB construire inf
une DET un
base NOUN base
adaptée VERB adapter par_pas
à ADP à
cette DET ce
somme NOUN somme
directe ADJ direct
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
si SCONJ si
E NOUN e
F NOUN f
G NOUN gramme
, PUNCT ,
alors ADV alors
: PUNCT :
dim ADP dim
E NOUN e
dim ADP dim
F NOUN f
dim ADP dim
G NOUN gramme
Plus ADV plus
généralement ADV généralement
, PUNCT ,
si SCONJ si
E NOUN e
admet VERB admettre ind_pre
une DET un
décomposition NOUN décomposition
en ADP en
somme NOUN somme
directe ADJ direct
a VERB avoir ind_pre
: PUNCT :
Ek NOUN ek
dim ADP dim
E NOUN e
a. VERB avoir ind_pre
Il PRON il
y PRON y
alors ADV alors
un DET un
nombre NOUN nombre
fini VERB finir par_pas
de ADP de
termes NOUN terme
dans ADP dans
la DET le
décomposition NOUN décomposition
en ADP en
somme NOUN somme
directe ADJ direct
, PUNCT ,
si SCONJ si
on PRON on
enlève VERB enlever ind_pre
les DET le
espaces NOUN espace
réduits VERB réduire par_pas
à ADP à
0E NUM 0E
. PUNCT .
Notons VERB noter ind_pre
ce DET ce
nombre NOUN nombre
p. NOUN p.
Démonstration NOUN démonstration
C' PRON ce
est VERB être ind_pre
immédiat VERB immédiat
en ADP en
considérant VERB considérer par_pre
une DET un
base NOUN base
adaptée ADJ adapté
à ADP à
cette DET ce
décomposition NOUN décomposition
en ADP en
somme NOUN somme
directe ADJ direct
. PUNCT .
Si SCONJ si
E1 ADJ e1
et CCONJ et
E2 PRON e2
sont VERB être ind_pre
des DET un
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
de ADP de
dimensions NOUN dimension
finies ADJ fini
, PUNCT ,
alors ADV alors
E1 DET e1
E2 ADJ e2
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
et CCONJ et
: PUNCT :
Plus ADV plus
généralement ADV généralement
, PUNCT ,
si SCONJ si
E1 NOUN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Ep NOUN ep
sont VERB être ind_pre
des DET un
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
de ADP de
dimensions NOUN dimension
finies ADJ fini
, PUNCT ,
alors ADV alors
E1 NOUN e1
Ep NOUN ep
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
et CCONJ et
: PUNCT :
Démonstration NOUN démonstration
Si SCONJ si
E1 DET e1
0E NUM 0E
ou CCONJ ou
E2 ADV e2
0E NUM 0E
, PUNCT ,
c' PRON ce
est VERB être ind_pre
immédiat PROPN immédiat
. PUNCT .
Supposons VERB supposer ind_pre
que ADV que
E1 NOUN e1
6 DET 6
0E NUM 0E
et CCONJ et
E2 NOUN e2
6 NUM 6
0E VERB 0e
. PUNCT .
alors ADV alors
on PRON on
vérifie VERB vérifier ind_pre
que SCONJ que
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E1 DET e1
E2 PROPN E2
( PUNCT (
en ADP en
démontrant VERB démontrer par_pre
que SCONJ que
c' PRON ce
est VERB être ind_pre
une DET un
famille NOUN famille
libre ADJ libre
et CCONJ et
génératrice NOUN génératrice
) PUNCT )
et CCONJ et
qui PRON qui
a VERB avoir ind_pre
n1 NOUN n1
n2 NOUN n2
dim ADP dim
E1 DET e1
dim ADP dim
E2 NUM E2
éléments NOUN élément
. PUNCT .
On PRON on
en PRON en
conclut VERB conclure ind_pre
que SCONJ que
E1 ADV e1
E2 ADJ e2
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
que SCONJ que
dim NOUN dim
( PUNCT (
E1 PRON e1
E2 NOUN e2
) PUNCT )
dim ADP dim
E1 DET e1
dim ADP dim
E2 NOUN e2
. PUNCT .
Dans ADP dans
le DET le
cas NOUN cas
général ADJ général
, PUNCT ,
on PRON on
procède VERB procéder ind_pre
par ADP par
récurrence NOUN récurrence
sur ADP sur
p. NOUN p.
Proposition NOUN proposition
1.3 NUM 1.3
Formule NOUN formule else
de ADP de
Grassman PROPN Grassman
Si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
si SCONJ si
F NOUN f
et CCONJ et
G NOUN gramme
sont VERB être ind_pre
deux NUM deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
: PUNCT :
Démonstration NOUN démonstration
Soit VERB être sub_pre
F1 NUM F1
un DET un
supplémentaire ADJ supplémentaire
de ADP de
F NOUN f
G PROPN G
dans ADP dans
F NOUN f
et CCONJ et
soit VERB être sub_pre
G1 VERB g1
un DET un
supplémentaire ADJ supplémentaire
de ADP de
F NOUN f
G PROPN G
dans ADP dans
G PROPN G
: PUNCT :
On PRON on
a VERB avoir ind_pre
alors ADV alors
Pour ADP pour
conclure VERB conclure inf
, PUNCT ,
il PRON il
suffit VERB suffire ind_pre
de ADP de
prendre VERB prendre inf
une DET un
base NOUN base
adaptée ADJ adapté
à ADP à
cette DET ce
décomposition NOUN décomposition
en ADP en
somme NOUN somme
directe ADJ direct
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
. PUNCT .
Vect(e1 VERB vect(e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
et CCONJ et
Vect(ep1 PROPN Vect(ep1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en ADP en
) PUNCT )
sont VERB être ind_pre
supplémentaires ADJ supplémentaire
dans ADP dans
E. NOUN e.
2 NUM 2
. PUNCT .
Si SCONJ si
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
alors ADV alors
il PRON il
existe VERB exister ind_pre
( PUNCT (
au ADP à
moins ADV moins
) PUNCT )
un DET un
sous-espace NOUN sous-espace
supplémentaire ADJ supplémentaire
de ADP de
Démonstration NOUN démonstration
1 NUM 1
. PUNCT .
C' PRON ce
est VERB être ind_pre
immédiat ADJ immédiat
: PUNCT :
puisque SCONJ puisque
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en ADP en
) PUNCT )
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
, PUNCT ,
tout DET tout
élément NOUN élément
x NOUN x
E NOUN e
s' PRON se
écrit VERB écrire par_pas ind_pre
de ADP de
manière NOUN manière
unique ADJ unique
sous ADP sous
la DET le
forme NOUN forme
2 NUM 2
. PUNCT .
On PRON on
considère VERB considérer ind_pre
une DET un
base NOUN base
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
de ADP de
F NOUN f
( PUNCT (
avec ADP avec
p NOUN p
dim ADV dim
F NOUN f
n ADJ n
dim ADP dim
E NOUN e
) PUNCT )
. PUNCT .
C' PRON ce
est VERB être ind_pre
une DET un
famille NOUN famille
libre ADJ libre
de ADP de
E NOUN e
qu' PRON qu'
on PRON on
peut VERB pouvoir ind_pre
compléter VERB compléter inf
en ADP en
une DET un
base NOUN base
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
, PUNCT ,
ep1 PROPN ep1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en ADP en
) PUNCT )
de ADP de
E. PROPN E.
Alors ADV alors
d' ADP de
après ADP après
ce PRON ce
qui PRON qui
précède VERB précéder ind_pre
, PUNCT ,
Démontrer VERB démontrer inf
que SCONJ que
F1 PRON f1
F2 NOUN f2
. PUNCT .
Quelle ADJ quell
est VERB être ind_pre
la DET le
dimension NOUN dimension
de ADP de
F NOUN f
Ga PROPN Ga
? PUNCT ?
Quelle ADJ quell
est VERB être ind_pre
la DET le
dimension NOUN dimension
de ADP de
F NOUN f
Ga PROPN Ga
? PUNCT ?
1.7.3 NUM 1.7.3
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
on PRON on
suppose VERB supposer ind_pre
qu' SCONJ que
on PRON on
a VERB avoir ind_pre
la DET le
somme NOUN somme
directe ADJ direct
E NOUN e
F1 NUM F1
F2 NOUN f2
. PUNCT .
Soit VERB être sub_pre
G NOUN gramme
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
tel ADJ tel
que SCONJ que
: PUNCT :
Démontrer VERB démontrer inf
que SCONJ que
F2 NOUN f2
G. NOUN g.
1.7.4 NUM 1.7.4
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
soit VERB être sub_pre
F ADJ f
et CCONJ et
G NOUN gramme
deux NUM deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
tels ADJ tel
que SCONJ que
F NOUN f
G NOUN gramme
0E NUM 0E
. PUNCT .
Démontrer VERB démontrer inf
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
un DET un
supplémentaire ADJ supplémentaire
de ADP de
F NOUN f
contenant VERB contenir par_pre
G. PROPN G.
1.7.5 NUM 1.7.5
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
F NOUN f
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
strict ADJ strict
de ADP de
E NOUN e
( PUNCT (
F NOUN f
6 NUM 6
E NOUN e
) PUNCT )
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
F NOUN f
admet VERB admettre ind_pre
une DET un
infinité NOUN infinité
de ADP de
supplémentaires NOUN supplémentaire
. PUNCT .
1.7.6 NUM 1.7.6
Soit VERB être sub_pre
V ADJ v
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
n NOUN n
, PUNCT ,
k NUM k
N ADJ n
et CCONJ et
V1 NOUN v1
, PUNCT ,
V2 NOUN v2
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Vk NOUN vk
des ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
V NOUN v
tels ADJ tel
que SCONJ que
Démontrer VERB démontrer inf
que SCONJ que
1.7.7 NUM 1.7.7
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n NOUN n
, PUNCT ,
soit VERB être sub_pre
F1 PRON f1
et CCONJ et
F2 ADV f2
deux NUM deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
dimension NOUN dimension
p NOUN p
n. NOUN n.
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
l' PRON l'
on PRON on
peut VERB pouvoir ind_pre
alors ADV alors
trouver VERB trouver inf
un DET un
supplémentaire ADJ supplémentaire
commun ADJ commun
à ADP à
F1 PROPN F1
et CCONJ et
F2 NOUN f2
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Généraliser VERB généraliser inf
lorsque SCONJ lorsque
le DET le
corps NOUN corps
est VERB être ind_pre
R VERB r
à ADP à
un DET un
nombre NOUN nombre
fini VERB finir par_pas
de ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
dimension NOUN dimension
p. NOUN p.
( PUNCT (
c NOUN c
) PUNCT )
Puis CCONJ puis
, PUNCT ,
à ADP à
une DET un
infinité NOUN infinité
dénombrable ADJ dénombrable
de ADP de
tels ADJ tel
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
. PUNCT .
( PUNCT (
d NOUN d
) PUNCT )
Donner ADP donner
un DET un
contre-exemple NOUN contre-exemple
pour ADP pour
une DET un
infinité NOUN infinité
non-dénombrable ADJ non-dénombrable
. PUNCT .
Applications NOUN application
linéaires ADJ linéaire
Généralités NOUN généralité
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
une DET un
application NOUN application
f ADJ f
: PUNCT :
E NOUN e
E NOUN e
0 NUM 0
est VERB être ind_pre
dite VERB dire par_pas
application NOUN application
linéaire ADJ linéaire
si SCONJ si
elle PRON lui
est VERB être ind_pre
compatible ADJ compatible
avec ADP avec
les DET le
structures NOUN structure
d' ADP de
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire ADV dire
a VERB avoir ind_pre
: PUNCT :
L' DET le
ensemble NOUN ensemble
des ADP de
applications NOUN application
linéaires ADJ linéaire
de ADP de
E NOUN e
dans ADP dans
E NOUN e
0 NUM 0
se PRON se
note VERB noter ind_pre
: PUNCT :
LK PROPN LK
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
ou CCONJ ou
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
lorsqu' SCONJ lorsque
il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
pas ADV pas
ambiguïté ADV ambiguïté
sur ADP sur
le DET le
corps NOUN corps
K NOUN k
1 NUM 1
. PUNCT .
Lorsque SCONJ lorsque
E NOUN e
E NOUN e
0 NUM 0
, PUNCT ,
on PRON on
parle VERB parler ind_pre
d' ADP de
endomorphisme NOUN endomorphisme
de ADP de
E NOUN e
et CCONJ et
on PRON on
note NOUN note
LK PROPN LK
( PUNCT (
E NOUN e
) PUNCT )
ou CCONJ ou
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
2 NUM 2
. PUNCT .
Lorsque SCONJ lorsque
f PRON f
est VERB être ind_pre
bijective ADJ bijectif
, PUNCT ,
on PRON on
parle VERB parler ind_pre
d' ADP de
isomorphisme NOUN isomorphisme
entre ADP entre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
. PUNCT .
3 NUM 3
. PUNCT .
Lorsque SCONJ lorsque
E NOUN e
E NOUN e
0 NUM 0
et CCONJ et
f NOUN f
est VERB être ind_pre
bijective ADJ bijectif
, PUNCT ,
on PRON on
parle VERB parler ind_pre
d' ADP de
automorphisme NOUN automorphisme
de ADP de
E NOUN e
et CCONJ et
on PRON on
note VERB noter ind_pre
GL NOUN gl
K NOUN k
( PUNCT (
E NOUN e
) PUNCT )
ou CCONJ ou
GL NOUN gl
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
4 NUM 4
. PUNCT .
Lorsque SCONJ lorsque
E NOUN e
0 NUM 0
K NOUN k
, PUNCT ,
on PRON on
parle VERB parler ind_pre
de ADP de
forme NOUN forme
linéaire ADJ linéaire
et CCONJ et
on PRON on
note NOUN note
E NOUN e
? PUNCT ?
. PUNCT .
a. VERB avoir ind_pre
L' DET le
image NOUN image
d' ADP de
une DET un
combinaison NOUN combinaison
linéaire ADJ linéaire
est VERB être ind_pre
donc ADV donc
la DET le
combinaison NOUN combinaison
linéaire ADJ linéaire
des ADP de
images NOUN image
. PUNCT .
1 NUM 1
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
alors ADV alors
l' DET le
application NOUN application
identité NOUN identité
, PUNCT ,
notée VERB noter par_pas
idE PROPN idE
et CCONJ et
définie VERB définir par_pas
par ADP par
idE PRON ide
( PUNCT (
x NOUN x
) PUNCT )
x NOUN x
pour ADP pour
tout ADV tout
x NOUN x
E NOUN e
est VERB être ind_pre
une DET un
application NOUN application
linéaire ADJ linéaire
de ADP de
E NOUN e
dans ADP dans
lui-même PRON lui-même
( PUNCT (
c' PRON ce
est VERB être ind_pre
donc ADV donc
un DET un
endomorphisme NOUN endomorphisme
de ADP de
E NOUN e
) PUNCT )
. PUNCT .
Plus ADV plus
généralement ADV généralement
, PUNCT ,
si SCONJ si
K NOUN k
, PUNCT ,
l' DET le
homothétie NOUN homothétie
de ADP de
rapport NOUN rapport
, PUNCT ,
définie VERB définir par_pas
par ADP par
x ADP x
7 NUM 7
.x NOUN .
, PUNCT ,
est VERB être ind_pre
un DET un
endomorphisme NOUN endomorphisme
de ADP de
E. PROPN E.
En ADP en
particulier ADJ particulier
, PUNCT ,
l' DET le
application NOUN application
nulle ADJ nul
x NOUN x
7 NUM 7
0E NUM 0E
est VERB être ind_pre
un DET un
endomorphisme NOUN endomorphisme
de ADP de
E. PROPN E.
2 NUM 2
. PUNCT .
Dans ADP dans
Rn NOUN rn
euclidien NOUN euclidien
, PUNCT ,
les DET le
projections NOUN projection
, PUNCT ,
symétries NOUN symétrie
, PUNCT ,
rotations NOUN rotation
, PUNCT ,
homothéties NOUN homothétie
vectorielles ADJ vectoriel
sont VERB être ind_pre
des DET un
endomorphismes NOUN endomorphisme
. PUNCT .
Les DET le
symétries NOUN symétrie
, PUNCT ,
rotations NOUN rotation
et CCONJ et
homothéties NOUN homothétie
( PUNCT (
de ADP de
rapport NOUN rapport
non ADV non
nul ADJ nul
) PUNCT )
sont VERB être ind_pre
des DET un
automorphismes NOUN automorphisme
. PUNCT .
Les DET le
translations NOUN translation
de ADP de
vecteur NOUN vecteur
non ADV non
nul ADJ nul
ne ADV ne
sont VERB être ind_pre
pas ADV pas
des DET un
applications NOUN application
linéaires ADJ linéaire
! PUNCT !
3 NUM 3
. PUNCT .
La DET le
dérivation NOUN dérivation
des ADP de
fonctions NOUN fonction
de ADP de
classe NOUN classe
C NOUN c
1 NUM 1
est VERB être ind_pre
une DET un
application NOUN application
linéaire ADJ linéaire
de ADP de
4 NUM 4
. PUNCT .
L' DET le
application NOUN application
définie VERB définir par_pas
pour ADP pour
a VERB avoir ind_pre
b NOUN b
par ADP par
: PUNCT :
est VERB être ind_pre
un DET un
isomorphisme NOUN isomorphisme
. PUNCT .
5 NUM 5
. PUNCT .
L' DET le
application NOUN application
définie VERB définir par_pas
par ADP par
: PUNCT :
est VERB être ind_pre
une DET un
forme NOUN forme
linéaire ADJ linéaire
Si SCONJ si
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
sont VERB être ind_pre
deux NUM deux
K NOUN k
- ADJ -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
alors ADV alors
: PUNCT :
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel VERB vectoriel
Démonstration NOUN démonstration
Montrons VERB montrer imper
que SCONJ que
c' PRON ce
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
F NOUN f
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
. PUNCT .
Il PRON il
est VERB être ind_pre
immédiat VERB immédiat
que SCONJ que
l' DET le
application NOUN application
nulle ADJ nul
x ADP x
7 NUM 7
0E VERB 0e
0 NUM 0
est VERB être ind_pre
linéaire ADJ linéaire
de ADP de
E NOUN e
dans ADP dans
E NOUN e
0 NUM 0
. PUNCT .
ce PRON ce
qui PRON qui
démontre VERB démontrer ind_pre
que SCONJ que
.f PUNCT .f
.g PROPN .g
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
. PUNCT .
Finalement ADV finalement
, PUNCT ,
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
F NOUN f
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
c' PRON ce
est VERB être ind_pre
donc ADV donc
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
et CCONJ et
soit VERB être sub_pre
f NUM f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
. PUNCT .
Si SCONJ si
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
: PUNCT :
f NOUN f
( PUNCT (
F NOUN f
) PUNCT )
f NOUN f
( PUNCT (
x NOUN x
) PUNCT )
, PUNCT ,
x ADP x
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
0 NUM 0
De ADP de
même ADV même
, PUNCT ,
si SCONJ si
F NOUN f
0 NUM 0
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
0 NUM 0
, PUNCT ,
alors ADV alors
: PUNCT :
f NOUN f
1 NUM 1
( PUNCT (
F NOUN f
0 NUM 0
) PUNCT )
x NOUN x
E NOUN e
, PUNCT ,
f CCONJ f
( PUNCT (
x NOUN x
) PUNCT )
F NOUN f
0 NUM 0
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
Démonstration NOUN démonstration
On PRON on
a VERB avoir
vu VERB voir pas_cop
( PUNCT (
voir VERB voir inf
la DET le
remarque NOUN remarque
1.17 NUM 1.17
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
page NOUN page
) PUNCT )
que SCONJ que
0E ADP 0e
0 NUM 0
f PRON f
( PUNCT (
0E NUM 0E
) PUNCT )
f NOUN f
( PUNCT (
F NOUN f
) PUNCT )
( PUNCT (
avec ADP avec
0E DET 0e
F NOUN f
) PUNCT )
. PUNCT .
de ADP de
f PRON f
, PUNCT ,
on PRON on
a VERB avoir ind_pre
donc ADV donc
f ADP f
( PUNCT (
F NOUN f
) PUNCT )
est VERB être ind_pre
stable ADJ stable
par ADP par
combinaison NOUN combinaison
linéaire ADJ linéaire
. PUNCT .
C' PRON ce
est VERB être ind_pre
donc ADV donc
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E. PROPN E.
car CCONJ car
F NOUN f
0 NUM 0
est VERB être ind_pre
stable ADJ stable
par ADP par
combinaison NOUN combinaison
linéaire ADJ linéaire
. PUNCT .
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
f DET f
1 NUM 1
( PUNCT (
F NOUN f
0 NUM 0
) PUNCT )
est VERB être ind_pre
stable ADJ stable
par ADP par
combinaison NOUN combinaison
linéaire ADJ linéaire
. PUNCT .
C' PRON ce
est VERB être ind_pre
donc ADV donc
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E. PROPN E.
La DET le
composée NOUN composée
de ADP de
deux NUM deux
applications NOUN application
linéaires ADJ linéaire
est VERB être ind_pre
une DET un
application NOUN application
linéaire ADJ linéaire
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
on PRON on
a VERB avoir ind_pre
: PUNCT :
1 NUM 1
. PUNCT .
Si SCONJ si
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
et CCONJ et
E NOUN e
00 NUM 00
sont VERB être ind_pre
trois NUM trois
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
si SCONJ si
f PRON f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
g NOUN gramme
L NOUN l
( PUNCT (
E NOUN e
0 NUM 0
, PUNCT ,
E NOUN e
00 NUM 00
) PUNCT )
les DET le
applications NOUN application
: PUNCT :
sont VERB être ind_pre
des DET un
applications NOUN application
linéaires ADJ linéaire
. PUNCT .
2 NUM 2
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
donc ADV donc
définir VERB définir inf
pour ADP pour
un DET un
endomorphisme NOUN endomorphisme
f CCONJ f
de ADP de
E NOUN e
, PUNCT ,
la DET le
notion NOUN notion
d' ADP de
itéré NOUN itéré
de ADP de
la DET le
manière NOUN manière
suivante ADJ suivant
: PUNCT :
On PRON on
a VERB avoir ind_pre
alors ADV alors
les DET le
formules NOUN formule
suivantes ADJ suivant
, PUNCT ,
si SCONJ si
f PRON f
et CCONJ et
g NOUN gramme
sont VERB être ind_pre
deux NUM deux
endomorphismes NOUN endomorphisme
de ADP de
E NOUN e
tels ADJ tel
que SCONJ que
f DET f
g NOUN gramme
g NOUN gramme
f PRON f
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
( PUNCT (
Formule NOUN formule else
du ADP de
binôme NOUN binôme
) PUNCT )
: PUNCT :
( PUNCT (
b NOUN b
) PUNCT )
( PUNCT (
Identité NOUN identité
remarquable ADJ remarquable
) PUNCT )
: PUNCT :
3 NUM 3
. PUNCT .
Si SCONJ si
f PRON f
est VERB être ind_pre
un DET un
automorphisme NOUN automorphisme
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
f NOUN f
1 NUM 1
est VERB être ind_pre
aussi ADV aussi
un DET un
automorphisme NOUN automorphisme
de ADP de
E NOUN e
( PUNCT (
en ADP en
particulier ADJ particulier
c' PRON ce
est VERB être ind_pre
un DET un
endomorphisme NOUN endomorphisme
de ADP de
E NOUN e
) PUNCT )
et CCONJ et
on PRON on
définit VERB définir ind_pre
de ADP de
même ADV même
: PUNCT :
1.8.1 NUM 1.8.1
Soit VERB être sub_pre
f ADP f
un DET un
endomorphisme NOUN endomorphisme
de ADP de
E NOUN e
, PUNCT ,
calculer VERB calculer inf
1.8.2 NUM 1.8.2
Soit VERB être sub_pre
f NUM f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
tel ADJ tel
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
n ADV n
N ADJ n
tel ADJ tel
que SCONJ que
f NOUN f
n NOUN n
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
( PUNCT (
on PRON on
dit VERB dire ind_pre
que SCONJ que
f PRON f
est VERB être ind_pre
nilpotent VERB nilpoter
) PUNCT )
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
idE PRON ide
f PRON f
est VERB être ind_pre
inversible ADJ inversible
. PUNCT .
Images NOUN image
et CCONJ et
noyaux NOUN noyau
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
et CCONJ et
f PRON f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
alors ADV alors
: PUNCT :
L' DET le
image NOUN image
de ADP de
E NOUN e
par ADP par
f NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
0 NUM 0
noté VERB noter par_pas
: PUNCT :
L' DET le
image NOUN image
réciproque ADJ réciproque
de ADP de
0E DET 0e
0 NUM 0
par ADP par
f PRON f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
appelé VERB appeler par_pas
noyau NOUN noyau
de ADP de
f PRON f
et CCONJ et
noté VERB noter par_pas
1 NUM 1
. PUNCT .
Pour ADP pour
tout DET tout
endomorphisme NOUN endomorphisme
p NOUN p
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
En ADP en
effet NOUN effet
, PUNCT ,
un DET un
raisonnement NOUN raisonnement
par ADP par
analyse NOUN analyse
- PUNCT -
synthèse NOUN synthèse
démontre VERB démontrer ind_pre
que SCONJ que
x ADP x
se PRON se
décompose VERB décomposer ind_pre sub_pre
de ADP de
manière NOUN manière
unique ADJ unique
sous ADP sous
2 NUM 2
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
utiliser VERB utiliser inf
les DET le
images NOUN image
et CCONJ et
noyaux NOUN noyau
pour ADP pour
démontrer VERB démontrer inf
que SCONJ que
des DET un
ensembles NOUN ensemble
sont VERB être ind_pre
des DET un
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
( PUNCT (
Image NOUN image
peu ADV peu
fréquent ADJ fréquent
) PUNCT )
: PUNCT :
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
C NOUN c
0 NUM 0
( PUNCT (
a VERB avoir ind_pre
, PUNCT ,
b NOUN b
, PUNCT ,
R NOUN r
) PUNCT )
en ADP en
considérant VERB considérer par_pre
l' DET le
endomorphisme NOUN endomorphisme
de ADP de
C NOUN c
0 NUM 0
( PUNCT (
a VERB avoir ind_pre
, PUNCT ,
b NOUN b
, PUNCT ,
R NOUN r
) PUNCT )
: PUNCT :
( PUNCT (
b NOUN b
) PUNCT )
( PUNCT (
Noyau NOUN noyau
très ADV très
fréquent ADJ fréquent
) PUNCT )
: PUNCT :
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
C NOUN c
1 NUM 1
( PUNCT (
a VERB avoir ind_pre
, PUNCT ,
b NOUN b
, PUNCT ,
R NOUN r
) PUNCT )
en ADP en
considérant VERB considérer par_pre
la DET le
forme NOUN forme
linéaire ADJ linéaire
de ADP de
C NOUN c
1 NUM 1
( PUNCT (
a VERB avoir ind_pre
, PUNCT ,
b NOUN b
, PUNCT ,
R NOUN r
) PUNCT )
: PUNCT :
Proposition NOUN proposition
1.4 NUM 1.4
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
f NUM f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
alors ADV alors
: PUNCT :
f NOUN f
est VERB être ind_pre
injective VERB injective
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
Ker(f VERB ker(f
) PUNCT )
0E NUM 0E
f NOUN f
est VERB être ind_pre
surjective ADJ surjectif
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
Im(f NOUN im(f
) PUNCT )
E NOUN e
0 NUM 0
Démonstration NOUN démonstration
La DET le
caractérisation NOUN caractérisation
de ADP de
la DET le
surjectivité NOUN surjectivité
est VERB être ind_pre
immédiate ADJ immédiat
. PUNCT .
Pour ADP pour
l' DET le
injectivité NOUN injectivité
, PUNCT ,
on PRON on
utilise VERB utiliser ind_pre
le DET le
fait NOUN fait
que SCONJ que
: PUNCT :
Si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
( PUNCT (
ei NOUN ei
) PUNCT )
iI PRON ii
une DET un
base NOUN base
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
pour ADP pour
connaître VERB connaître inf
une DET un
application NOUN application
linéaire ADJ linéaire
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
il PRON il
faut VERB falloir ind_pre
et CCONJ et
il PRON il
suffit VERB suffire ind_pre
de ADP de
connaître VERB connaître inf
la DET le
famille NOUN famille
des ADP de
images NOUN image
( PUNCT (
f NOUN f
( PUNCT (
ei NOUN ei
) PUNCT )
) PUNCT )
iI PRON ii
. PUNCT .
Plus ADV plus
formellement ADV formellement
: PUNCT :
est VERB être ind_pre
un DET un
isomorphisme NOUN isomorphisme
C' PRON ce
est VERB être ind_pre
pourquoi ADV pourquoi
il PRON il
suffit VERB suffire ind_pre
de ADP de
donner VERB donner inf
uniquement ADV uniquement
les DET le
images NOUN image
des ADP de
vecteurs NOUN vecteur
d' ADP de
une DET un
base NOUN base
pour ADP pour
décrire VERB décrire inf
une DET un
application NOUN application
linéaire ADJ linéaire
. PUNCT .
Plus ADV plus
généralement ADV généralement
, PUNCT ,
pour ADP pour
tout ADV tout
( PUNCT (
xi PRON xi
) PUNCT )
iI PRON ii
E NOUN e
0 NUM 0
, PUNCT ,
il PRON il
existe VERB exister ind_pre
une DET un
unique ADJ unique
application NOUN application
linéaire ADJ linéaire
f PUNCT f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Si SCONJ si
f PUNCT f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
si SCONJ si
X NOUN x
( PUNCT (
xi PROPN xi
) PUNCT )
iI PRON ii
est VERB être ind_pre
une DET un
famille NOUN famille
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
: PUNCT :
f NUM f
injective NOUN injective
et CCONJ et
X NOUN x
libre ADJ libre
( PUNCT (
f NOUN f
( PUNCT (
xi PRON xi
) PUNCT )
) PUNCT )
iI PRON ii
libre ADJ libre
f X f
bijective ADJ bijectif
et CCONJ et
X NOUN x
base NOUN base
( PUNCT (
f NOUN f
( PUNCT (
xi PRON xi
) PUNCT )
) PUNCT )
iI PRON ii
base VERB baser ind_pre
f CCONJ f
surjective NOUN surjective
et CCONJ et
X NOUN x
génératrice NOUN génératrice
( PUNCT (
f NOUN f
( PUNCT (
xi PRON xi
) PUNCT )
) PUNCT )
iI PRON ii
génératrice NOUN génératrice
X NOUN x
génératrice NOUN génératrice
Ces DET ce
propriétés NOUN propriété
sont VERB être ind_pre
vraies ADJ vrai
même ADV même
si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
infinie ADJ infini
( PUNCT (
mais CCONJ mais
ce PRON ce
sera VERB être fut_sim
surtout ADV surtout
utile ADJ utile
en ADP en
dimension NOUN dimension
Démonstration NOUN démonstration
1 NUM 1
. PUNCT .
Notons VERB noter imper
( PUNCT (
i1 NOUN i1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ip X ip
) PUNCT )
une DET un
sous-famille NOUN sous-famille
finie VERB finir par_pas
quelconque ADJ quelconque
de ADP de
I. NOUN i.
Soit VERB être sub_pre
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
p NOUN p
) PUNCT )
Kp NOUN kp
tel ADJ tel
que SCONJ que
Par ADP par
linéarité NOUN linéarité
, PUNCT ,
on PRON on
a VERB avoir ind_pre
donc ADV donc
i DET i
.xik NOUN .xik
Ker NOUN ker
f NOUN f
Puisque SCONJ puisque
f AUX f
est VERB être ind_pre
injective VERB injective
, PUNCT ,
on PRON on
a VERB avoir ind_pre
Ker PROPN Ker
f DET f
0E NUM 0E
donc ADV donc
Comme SCONJ comme
X NOUN x
est VERB être ind_pre
libre ADJ libre
, PUNCT ,
on PRON on
a VERB avoir ind_pre
1 NUM 1
p NOUN p
0 NUM 0
, PUNCT ,
ce PRON ce
qui PRON qui
démontre VERB démontrer ind_pre
que SCONJ que
( PUNCT (
f NOUN f
( PUNCT (
xi1 NOUN xi1
) PUNCT )
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
f PUNCT f
( PUNCT (
xip PRON xip
) PUNCT )
) PUNCT )
est VERB être ind_pre
libre ADJ libre
, PUNCT ,
donc ADV donc
que SCONJ que
( PUNCT (
f NOUN f
( PUNCT (
xi PRON xi
) PUNCT )
) PUNCT )
iI PRON ii
est VERB être ind_pre
libre ADJ libre
. PUNCT .
2 NUM 2
. PUNCT .
Soit VERB être sub_pre
y PRON y
E NOUN e
0 NUM 0
. PUNCT .
Comme SCONJ comme
f PRON f
est VERB être ind_pre
surjective NOUN surjective
, PUNCT ,
il PRON il
existe VERB exister ind_pre
x NUM x
E NOUN e
tel ADJ tel
que SCONJ que
y PRON y
f NOUN f
( PUNCT (
x NOUN x
) PUNCT )
. PUNCT .
Puisque SCONJ puisque
X NOUN x
est VERB être ind_pre
génératrice NOUN génératrice
, PUNCT ,
il PRON il
On PRON on
a VERB avoir ind_pre
alors ADV alors
par ADP par
linéarité NOUN linéarité
de ADP de
f ADP f
ce PRON ce
qui PRON qui
démontre VERB démontrer ind_pre
que SCONJ que
y PRON y
s' PRON se
écrit VERB écrire par_pas ind_pre
comme ADP comme
une DET un
combinaison NOUN combinaison
linéaire ADJ linéaire
finie VERB finir par_pas
d' ADP de
éléments NOUN élément
de ADP de
( PUNCT (
f NOUN f
( PUNCT (
xi PRON xi
) PUNCT )
) PUNCT )
iI PRON ii
. PUNCT .
Finalement ADV finalement
, PUNCT ,
( PUNCT (
f NOUN f
( PUNCT (
xi PRON xi
) PUNCT )
) PUNCT )
iI PRON ii
est VERB être ind_pre
génératrice NOUN génératrice
. PUNCT .
3 NUM 3
. PUNCT .
On PRON on
applique VERB appliquer ind_pre
les DET le
points NOUN point
1 NUM 1
et CCONJ et
2 PRON 2
pour ADP pour
démontrer VERB démontrer inf
que SCONJ que
( PUNCT (
f NOUN f
( PUNCT (
xi PRON xi
) PUNCT )
) PUNCT )
iI PRON ii
est VERB être ind_pre
à ADP à
la DET le
fois NOUN fois
libre ADJ libre
et CCONJ et
génératrice NOUN génératrice
. PUNCT .
4 NUM 4
. PUNCT .
Il PRON il
s' PRON se
agit VERB agir ind_pre
du ADP de
point NOUN point
2 NUM 2
en ADP en
remplaçant ADJ remplaçant
E NOUN e
0 NUM 0
par ADP par
Im NUM Im
f ADJ f
et CCONJ et
en ADP en
remarquant VERB remarquer par_pre
que SCONJ que
f PRON f
est VERB être ind_pre
surjective ADJ surjectif
sur ADP sur
son DET son
image NOUN image
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
si SCONJ si
( PUNCT (
ei NOUN ei
) PUNCT )
iI PRON ii
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
et CCONJ et
si SCONJ si
f PUNCT f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
alors ADV alors
1 NUM 1
. PUNCT .
f NOUN f
est VERB être ind_pre
surjective ADJ surjectif
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
( PUNCT (
f PRON f
( PUNCT (
ei NOUN ei
) PUNCT )
) PUNCT )
iI PRON ii
engendre VERB engendrer ind_pre
E NOUN e
0 NUM 0
2 NUM 2
. PUNCT .
f NOUN f
est VERB être ind_pre
injective VERB injective
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
( PUNCT (
f PRON f
( PUNCT (
ei NOUN ei
) PUNCT )
) PUNCT )
iI PRON ii
est VERB être ind_pre
libre ADJ libre
3 NUM 3
. PUNCT .
f NOUN f
est VERB être ind_pre
bijective ADJ bijectif
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
( PUNCT (
f PRON f
( PUNCT (
ei NOUN ei
) PUNCT )
) PUNCT )
iI PRON ii
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
0 NUM 0
. PUNCT .
Soit VERB être sub_pre
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
et CCONJ et
E NOUN e
00 PRON 00
des ADP de
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels ADJ vectoriel
. PUNCT .
On PRON on
a VERB avoir ind_pre
: PUNCT :
Démonstration NOUN démonstration
Soit VERB être sub_pre
f PRON f
et CCONJ et
g NOUN gramme
deux NUM deux
endomorphismes NOUN endomorphisme
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E. PROPN E.
Si SCONJ si
f CCONJ f
g NOUN gramme
g NOUN gramme
f NOUN f
, PUNCT ,
alors ADV alors
: PUNCT :
Démonstration NOUN démonstration
Si SCONJ si
f PRON f
est VERB être ind_pre
un DET un
endomorphisme NOUN endomorphisme
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
, PUNCT ,
alors ADV alors
: PUNCT :
Démonstration NOUN démonstration
On PRON on
utilise VERB utiliser ind_pre
les DET le
deux NUM deux
premiers ADJ premier
points NOUN point
de ADP de
la DET le
propriété NOUN propriété
1.26 NUM 1.26
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
page NOUN page
avec ADP avec
f DET f
n NOUN n
à ADP à
la DET le
place NOUN place
de ADP de
f PRON f
et CCONJ et
f PRON f
à ADP à
la DET le
place NOUN place
de ADP de
g. X g.
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
soit VERB être sub_pre
F VERB f
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
on PRON on
dit VERB dire ind_pre
que SCONJ que
F NOUN f
est VERB être ind_pre
f NUM f
-stable ADJ -stabl
ou CCONJ ou
stable ADJ stable
par ADP par
f PUNCT f
si SCONJ si
: PUNCT :
f NOUN f
( PUNCT (
F NOUN f
) PUNCT )
F NOUN f
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
que SCONJ que
, PUNCT ,
pour ADP pour
tout ADV tout
x NOUN x
F NOUN f
, PUNCT ,
f PUNCT f
( PUNCT (
x NOUN x
) PUNCT )
F NOUN f
1 NUM 1
. PUNCT .
Im(f NOUN im(f
) PUNCT )
et CCONJ et
Ker(f PROPN Ker(f
) PUNCT )
sont VERB être ind_pre
stables ADJ stable
par ADP par
f PRON f
. PUNCT .
2 NUM 2
. PUNCT .
Plus ADV plus
généralement ADV généralement
, PUNCT ,
sont VERB être ind_pre
stables ADJ stable
par ADP par
f PRON f
. PUNCT .
3 NUM 3
. PUNCT .
Si SCONJ si
f PRON f
est VERB être ind_pre
un DET un
automorphisme NOUN automorphisme
et CCONJ et
F NOUN f
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
alors ADV alors
F NOUN f
est VERB être ind_pre
stable ADJ stable
par ADP par
f DET f
F NOUN f
est VERB être ind_pre
stable ADJ stable
par ADP par
f ADP f
1 NUM 1
1.9.1 NUM 1.9.1
Soit VERB être sub_pre
f PUNCT f
, PUNCT ,
g NOUN gramme
et CCONJ et
h NOUN heure
trois NUM trois
endomorphismes NOUN endomorphisme
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
tels ADJ tel
que SCONJ que
: PUNCT :
Démontrer VERB démontrer inf
que SCONJ que
ces DET ce
trois NUM trois
endomorphismes NOUN endomorphisme
ont VERB avoir ind_pre
même ADV même
image NOUN image
et CCONJ et
même ADV même
noyau NOUN noyau
. PUNCT .
1.9.2 PROPN 1.9.2
Soit VERB être sub_pre
f VERB f
un DET un
endomorphisme NOUN endomorphisme
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
1.9.3 NUM 1.9.3
Soit VERB être sub_pre
f PRON f
et CCONJ et
g NOUN gramme
deux NUM deux
endomorphismes NOUN endomorphisme
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
Projecteurs PROPN Projecteurs
et CCONJ et
symétries NOUN symétrie
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
F NOUN f
et CCONJ et
G NOUN gramme
deux NUM deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
tels ADJ tel
que SCONJ que
E NOUN e
F NOUN f
G. PROPN G.
On PRON on
appelle VERB appeler ind_pre
projection NOUN projection
de ADP de
E NOUN e
sur ADP sur
F NOUN f
parallèlement ADV parallèlement
à ADP à
G NOUN gramme
l' DET le
endomorphisme NOUN endomorphisme
de ADP de
E NOUN e
défini VERB définir par_pas
par ADP par
: PUNCT :
x ADP x
7 NUM 7
xF NOUN xf
où PRON où
x VERB x
xF VERB xf
xG VERB xg
avec ADP avec
xF PRON xf
F NOUN f
et CCONJ et
xG ADP xg
G NOUN gramme
Puisque DET puisque
E VERB e
F NOUN f
G NOUN gramme
, PUNCT ,
xF X xF
et CCONJ et
xG NOUN xg
sont VERB être ind_pre
uniques ADJ unique
donc ADV donc
pF NOUN pf
kG PROPN kG
est VERB être ind_pre
bien ADV bien
définie VERB définir par_pas
. PUNCT .
De ADP de
plus ADV plus
, PUNCT ,
c' PRON ce
est VERB être ind_pre
un DET un
endomorphisme NOUN endomorphisme
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
F NOUN f
et CCONJ et
G NOUN gramme
deux NUM deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
tels ADJ tel
que SCONJ que
E NOUN e
F NOUN f
G. PROPN G.
Alors ADV alors
: PUNCT :
pF PRON pf
kG NOUN kilogramme
pGkF VERB pgkf
idE ADV ide
On PRON on
a VERB avoir ind_pre
de ADP de
plus ADV plus
: PUNCT :
G NOUN gramme
Ker(pF X Ker(pF
kG PROPN kG
) PUNCT )
et CCONJ et
, PUNCT ,
pour ADP pour
tout ADV tout
x NOUN x
G NOUN gramme
, PUNCT ,
pF PRON pf
kG PROPN kG
( PUNCT (
x NOUN x
) PUNCT )
0E NUM 0E
F NOUN f
Im(pF ADP im(pf
kG PROPN kG
) PUNCT )
Ker(pF X Ker(pF
kG NOUN kilogramme
idE VERB ide
) PUNCT )
et CCONJ et
, PUNCT ,
pour ADP pour
tout ADV tout
x NOUN x
F NOUN f
, PUNCT ,
pF PRON pf
kG PROPN kG
( PUNCT (
x NOUN x
) PUNCT )
x NOUN x
Démonstration NOUN démonstration
Soit VERB être sub_pre
x ADP x
E NOUN e
qu' PRON qu'
on PRON on
écrit VERB écrire ind_pre
de ADP de
manière NOUN manière
unique ADJ unique
x ADP x
xF VERB xf
xG VERB xg
avec ADP avec
xF PRON xf
pF NOUN pf
kG PROPN kG
( PUNCT (
x NOUN x
) PUNCT )
F NOUN f
et CCONJ et
xG ADP xg
pGkF VERB pgkf
( PUNCT (
x NOUN x
) PUNCT )
G. NOUN g.
donc ADV donc
pF NOUN pf
kG NOUN kilogramme
pGkF VERB pgkf
idE NOUN ide
. PUNCT .
donc ADV donc
G NOUN gramme
Ker(pF X Ker(pF
kG PROPN kG
) PUNCT )
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
pF PRON pf
kG PROPN kG
( PUNCT (
x NOUN x
) PUNCT )
0E NUM 0E
pour ADP pour
tout ADV tout
x NOUN x
G. NOUN g.
donc ADV donc
F NOUN f
Ker(pF X Ker(pF
kG NOUN kilogramme
idE VERB ide
) PUNCT )
. PUNCT .
De ADP de
plus ADV plus
, PUNCT ,
donc ADV donc
F NOUN f
Im(pF ADP im(pf
kG PROPN kG
) PUNCT )
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
pF PRON pf
kG PROPN kG
( PUNCT (
x NOUN x
) PUNCT )
x NOUN x
pour ADP pour
tout ADV tout
x NOUN x
F NOUN f
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
espace NOUN espace
vectoriel ADJ vectoriel
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
projecteur NOUN projecteur
de ADP de
E NOUN e
tout ADV tout
endomorphisme NOUN endomorphisme
p NOUN p
de ADP de
E NOUN e
tel ADJ tel
que SCONJ que
p NOUN p
p NOUN p
p. VERB p.
Proposition NOUN proposition
1.5 NUM 1.5
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Toute DET tout
projection NOUN projection
de ADP de
E NOUN e
est VERB être ind_pre
un DET un
projecteur NOUN projecteur
de ADP de
E NOUN e
et CCONJ et
, PUNCT ,
réciproquement ADV réciproquement
, PUNCT ,
tout DET tout
projecteur NOUN projecteur
de ADP de
E NOUN e
est VERB être ind_pre
une DET un
projection NOUN projection
de ADP de
E. PROPN E.
Démonstration NOUN démonstration
1 NUM 1
. PUNCT .
Une DET un
projection NOUN projection
est VERB être ind_pre
un DET un
projecteur NOUN projecteur
, PUNCT ,
d' ADP de
après ADP après
la DET le
propriété NOUN propriété
1.29 NUM 1.29
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
page NOUN page
. PUNCT .
En ADP en
effet NOUN effet
, PUNCT ,
si SCONJ si
F NOUN f
et CCONJ et
G NOUN gramme
deux NUM deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
tels ADJ tel
que SCONJ que
E NOUN e
F NOUN f
G PROPN G
et CCONJ et
si SCONJ si
p NOUN p
pF NOUN pf
kG PROPN kG
, PUNCT ,
alors ADV alors
pour ADP pour
tout ADV tout
x NOUN x
E NOUN e
qu' PRON qu'
on PRON on
écrit VERB écrire ind_pre
de ADP de
manière NOUN manière
unique ADJ unique
x ADP x
xF VERB xf
xG VERB xg
avec ADP avec
xF PRON xf
F NOUN f
et CCONJ et
xG ADP xg
G NOUN gramme
, PUNCT ,
on PRON on
a VERB avoir ind_pre
2 NUM 2
. PUNCT .
Si SCONJ si
p NOUN p
est VERB être ind_pre
un DET un
projecteur NOUN projecteur
, PUNCT ,
on PRON on
a VERB avoir ind_pre
alors ADV alors
: PUNCT :
E NOUN e
Im NUM Im
p NOUN p
Ker X Ker
p NOUN p
d' ADP de
après ADP après
l' DET le
exemple NOUN exemple
1.18 NUM 1.18
, PUNCT ,
page NOUN page
49 NUM 49
, PUNCT ,
donc ADV donc
p NOUN p
est VERB être ind_pre
la DET le
projection NOUN projection
de ADP de
E NOUN e
sur ADP sur
son DET son
image NOUN image
Im NUM Im
p NOUN p
parallèlement ADV parallèlement
à ADP à
son DET son
noyau NOUN noyau
Ker PROPN Ker
p. VERB p.
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
F NOUN f
et CCONJ et
G NOUN gramme
deux NUM deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
tels ADJ tel
que SCONJ que
E NOUN e
F NOUN f
G. PROPN G.
On PRON on
peut VERB pouvoir ind_pre
définir VERB définir inf
de ADP de
même ADV même
la DET le
notion NOUN notion
de ADP de
symétrie NOUN symétrie
de ADP de
E NOUN e
par ADP par
rapport NOUN rapport
à ADP à
F NOUN f
, PUNCT ,
parallèlement ADV parallèlement
à ADP à
G. PROPN G.
C' PRON ce
est VERB être ind_pre
l' DET le
automorphisme NOUN automorphisme
de ADP de
E NOUN e
défini VERB définir par_pas
x ADP x
xF VERB xf
xG NOUN xg
7 NUM 7
xF NOUN xf
xG ADJ xg
, PUNCT ,
où PRON où
x VERB x
xF VERB xf
xG VERB xg
avec ADP avec
xF PRON xf
F NOUN f
et CCONJ et
xG ADP xg
G NOUN gramme
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
F NOUN f
et CCONJ et
G NOUN gramme
deux NUM deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
tels ADJ tel
que SCONJ que
E NOUN e
F NOUN f
G. PROPN G.
On PRON on
a VERB avoir ind_pre
alors ADV alors
: PUNCT :
sF PROPN sF
kG PROPN kG
sF X sF
kG PROPN kG
idE AUX ide
De ADP de
plus ADV plus
, PUNCT ,
on PRON on
a VERB avoir ind_pre
sF PROPN sF
kG PROPN kG
2.pF NUM 2.pF
kG NOUN kilogramme
idE PRON ide
et CCONJ et
pF NOUN pf
kG PROPN kG
. PUNCT .
idE PROPN idE
sF PROPN sF
kG PROPN kG
F NOUN f
Ker(sF ADJ ker(sf
kG NOUN kilogramme
idE VERB ide
) PUNCT )
et CCONJ et
G NOUN gramme
Ker(sF ADJ ker(sf
kG NOUN kilogramme
idE VERB ide
) PUNCT )
Démonstration NOUN démonstration
Analogue PROPN Analogue
à ADP à
la DET le
démonstration NOUN démonstration
de ADP de
la DET le
propriété NOUN propriété
1.29 NUM 1.29
, PUNCT ,
page NOUN page
précédente ADJ précédent
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
définir VERB définir inf
plus ADV plus
généralement ADV généralement
la DET le
notion NOUN notion
de ADP de
symétrie NOUN symétrie
de ADP de
E NOUN e
, PUNCT ,
ce PRON ce
sont VERB être ind_pre
les DET le
endomorphismes NOUN endomorphisme
s NUM s
de ADP de
E NOUN e
tels ADJ tel
que SCONJ que
s DET s
s X s
idE NOUN ide
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
alors ADV alors
démontrer VERB démontrer inf
( PUNCT (
à ADP à
l' DET le
aide NOUN aide
de ADP de
la DET le
propriété NOUN propriété
1.30 NUM 1.30
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
page NOUN page
) PUNCT )
que SCONJ que
si SCONJ si
sF PROPN sF
kG PROPN kG
est VERB être ind_pre
la DET le
symétrie NOUN symétrie
de ADP de
E NOUN e
par ADP par
rapport NOUN rapport
à ADP à
F NOUN f
, PUNCT ,
parallèlement ADV parallèlement
à ADP à
G PROPN G
, PUNCT ,
alors ADV alors
sF X sF
kG PROPN kG
sF X sF
kG PROPN kG
idE NOUN ide
. PUNCT .
Réciproquement ADV réciproquement
, PUNCT ,
si SCONJ si
s PROPN s
est VERB être ind_pre
une DET un
symétrie NOUN symétrie
de ADP de
E NOUN e
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire ADV dire
un DET un
endomorphisme NOUN endomorphisme
s NOUN s
de ADP de
E NOUN e
tel ADJ tel
que SCONJ que
s DET s
s X s
idE PROPN idE
, PUNCT ,
alors ADV alors
( PUNCT (
par ADP par
un DET un
raisonnement NOUN raisonnement
par ADP par
analyse NOUN analyse
- PUNCT -
synthèse NOUN synthèse
) PUNCT )
E NOUN e
Ker(s NOUN ker(
idE VERB ide
) PUNCT )
Ker(s PROPN Ker(s
idE VERB ide
) PUNCT )
et CCONJ et
que SCONJ que
s PRON s
est VERB être ind_pre
la DET le
symétrie NOUN symétrie
de ADP de
E NOUN e
par ADP par
rapport NOUN rapport
à ADP à
Ker(s NOUN ker(
idE PRON ide
) PUNCT )
parallèlement ADV parallèlement
à ADP à
Ker(s NOUN ker(
idE VERB ide
) PUNCT )
. PUNCT .
Enfin ADV enfin
, PUNCT ,
si SCONJ si
p NOUN p
est VERB être ind_pre
un DET un
projecteur NOUN projecteur
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
s X s
2.p NUM 2.p
idE PRON ide
est VERB être ind_pre
une DET un
symétrie NOUN symétrie
. PUNCT .
Réciproquement ADV réciproquement
, PUNCT ,
si SCONJ si
s PROPN s
est VERB être ind_pre
une DET un
symétrie NOUN symétrie
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
p NOUN p
21 NUM 21
.(s PUNCT .(s
idE PRON ide
) PUNCT )
est VERB être ind_pre
un DET un
projecteur NOUN projecteur
de ADP de
E. PROPN E.
1.10.1 ADJ 1.10.1
Soit VERB être sub_pre
p NOUN p
est VERB être ind_pre
une DET un
projection NOUN projection
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
, PUNCT ,
et CCONJ et
soit VERB être sub_pre
K NOUN k
0 NUM 0
, PUNCT ,
1 NUM 1
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
p NOUN p
. PUNCT .
idE DET ide
est VERB être ind_pre
bijective ADJ bijectif
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
est VERB être ind_pre
une DET un
projection NOUN projection
( PUNCT (
sur ADP sur
quoi PRON quoi
? PUNCT ?
parallèlement ADV parallèlement
à ADP à
quoi PRON quoi
? PUNCT ?
) PUNCT )
. PUNCT .
1.10.3 ADJ 1.10.3
Soit VERB être sub_pre
l' DET le
application NOUN application
: PUNCT :
Démontrer VERB démontrer inf
que SCONJ que
est VERB être ind_pre
une DET un
symétrie NOUN symétrie
( PUNCT (
par ADP par
rapport NOUN rapport
à ADP à
quoi PRON quoi
? PUNCT ?
parallèlement ADV parallèlement
à ADP à
quoi PRON quoi
? PUNCT ?
) PUNCT )
. PUNCT .
1.10.4 PROPN 1.10.4
Soit VERB être sub_pre
p NOUN p
et CCONJ et
q AUX q
deux NUM deux
projecteurs NOUN projecteur
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E. PROPN E.
Démontrer VERB démontrer inf
l' DET le
équivalence NOUN équivalence
des ADP de
trois NUM trois
propriétés NOUN propriété
suivantes ADJ suivant
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
p NOUN p
q PRON q
est VERB être ind_pre
un DET un
projecteur NOUN projecteur
. PUNCT .
1.10.5 X 1.10.5
Si SCONJ si
p NOUN p
et CCONJ et
q PRON q
sont VERB être ind_pre
deux NUM deux
projecteurs NOUN projecteur
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
tels ADJ tel
que SCONJ que
p NOUN p
q NUM q
q PRON q
p NOUN p
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
p NOUN p
q PRON q
est VERB être ind_pre
un DET un
projecteur NOUN projecteur
et CCONJ et
en PRON en
calculer VERB calculer inf
son DET son
image NOUN image
et CCONJ et
son DET son
noyau NOUN noyau
. PUNCT .
1.10.6 PROPN 1.10.6
Si SCONJ si
p NOUN p
et CCONJ et
q PRON q
sont VERB être ind_pre
deux NUM deux
projecteurs NOUN projecteur
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
tels ADJ tel
que SCONJ que
p NOUN p
q NUM q
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
p NOUN p
q NUM q
q PRON q
p NOUN p
est VERB être ind_pre
un DET un
projecteur NOUN projecteur
et CCONJ et
en PRON en
calculer VERB calculer inf
son DET son
image NOUN image
et CCONJ et
son DET son
noyau NOUN noyau
. PUNCT .
1.10.7 NOUN 1.10.7
Soit VERB être sub_pre
f DET f
un DET un
endomorphisme NOUN endomorphisme
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
et CCONJ et
p NOUN p
un DET un
projecteur NOUN projecteur
de ADP de
E NOUN e
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
Cas NOUN cas
particulier ADJ particulier
de ADP de
la DET le
dimension NOUN dimension
finie VERB finir par_pas
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels ADJ vectoriel
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
si SCONJ si
f PUNCT f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
alors ADV alors
Im(f PROPN Im(f
) PUNCT )
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
dim DET dim
Im(f PROPN Im(f
) PUNCT )
dim NOUN dim
E NOUN e
De ADP de
plus ADV plus
, PUNCT ,
on PRON on
a VERB avoir ind_pre
dim DET dim
Im(f PROPN Im(f
) PUNCT )
dim ADP dim
E NOUN e
f NUM f
injective NOUN injective
Démonstration NOUN démonstration
La DET le
famille NOUN famille
( PUNCT (
f NOUN f
( PUNCT (
e1 NOUN e1
) PUNCT )
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
f PUNCT f
( PUNCT (
en NOUN en
) PUNCT )
) PUNCT )
est VERB être ind_pre
génératrice NOUN génératrice
de ADP de
Im NUM Im
f NOUN f
et CCONJ et
à ADP à
n AUX n
éléments NOUN élément
, PUNCT ,
donc ADV donc
dim ADP dim
Im(f PROPN Im(f
) PUNCT )
n VERB n
dim ADP dim
E. PROPN E.
aussi ADV aussi
. PUNCT .
C' PRON ce
est VERB être ind_pre
donc ADV donc
une DET un
base NOUN base
de ADP de
Im NUM Im
f NOUN f
, PUNCT ,
d' ADP de
où PRON où
dim ADP dim
Im NUM Im
f ADP f
n NOUN n
dim ADP dim
E. PROPN E.
Si SCONJ si
dim ADP dim
Im(f NOUN im(f
) PUNCT )
dim ADP dim
E NOUN e
, PUNCT ,
la DET le
famille NOUN famille
génératrice ADJ générateur
( PUNCT (
f NOUN f
( PUNCT (
e1 NOUN e1
) PUNCT )
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
f PUNCT f
( PUNCT (
en NOUN en
) PUNCT )
) PUNCT )
de ADP de
Im NUM Im
f NOUN f
a VERB avoir ind_pre
n ADV n
dim ADP dim
E NOUN e
éléments NOUN élément
, PUNCT ,
c' PRON ce
est VERB être ind_pre
donc ADV donc
une DET un
base NOUN base
de ADP de
Im NUM Im
f NOUN f
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
c' PRON ce
est VERB être ind_pre
une DET un
famille NOUN famille
libre ADJ libre
, PUNCT ,
donc ADV donc
f PRON f
est VERB être ind_pre
injective VERB injective
. PUNCT .
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
f NUM f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
telle ADJ tel
que SCONJ que
Im(f PROPN Im(f
) PUNCT )
soit VERB être sub_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
rang NOUN rang
de ADP de
f PRON f
et CCONJ et
on PRON on
note VERB noter ind_pre
: PUNCT :
rang(f NOUN rang(f
) PUNCT )
dim(Im(f PRON dim(im(f
) PUNCT )
) PUNCT )
Lorsque SCONJ lorsque
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
Im(f NOUN im(f
) PUNCT )
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
. PUNCT .
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
et CCONJ et
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
alors ADV alors
: PUNCT :
E NOUN e
0 NUM 0
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
rang(f NOUN rang(f
) PUNCT )
dim ADP dim
E NOUN e
0 NUM 0
et CCONJ et
rang(f NOUN rang(f
) PUNCT )
dim ADP dim
E NOUN e
0 NUM 0
f PUNCT f
surjective NOUN surjective
E NOUN e
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
rang(f NOUN rang(f
) PUNCT )
dim NOUN dim
E NOUN e
et CCONJ et
rang(f NOUN rang(f
) PUNCT )
dim ADP dim
E NOUN e
f NUM f
injective NOUN injective
Démonstration NOUN démonstration
Im NUM Im
f NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
0 NUM 0
qui PRON qui
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
donc ADV donc
Im NUM Im
f NOUN f
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
rang NOUN rang
f ADJ f
dim ADP dim
Im NUM Im
f DET f
dim ADP dim
E NOUN e
0 NUM 0
. PUNCT .
Si SCONJ si
f PRON f
est VERB être ind_pre
surjective ADJ surjectif
, PUNCT ,
alors ADV alors
Im NUM Im
f DET f
E NOUN e
0 NUM 0
donc ADV donc
rang NOUN rang
f ADJ f
dim ADP dim
Im NUM Im
f DET f
dim ADP dim
E NOUN e
0 NUM 0
. PUNCT .
Si SCONJ si
dim ADP dim
Im NUM Im
f DET f
dim ADP dim
E NOUN e
0 NUM 0
, PUNCT ,
comme ADP comme
Im PUNCT im
f NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
0 NUM 0
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
on PRON on
a VERB avoir ind_pre
Im VERB im
f NUM f
E NOUN e
( PUNCT (
propriété NOUN propriété
1.19 NUM 1.19
, PUNCT ,
page NOUN page
43 NUM 43
) PUNCT )
donc ADV donc
f PRON f
est VERB être ind_pre
surjective ADJ surjectif
. PUNCT .
C' PRON ce
est VERB être ind_pre
la DET le
propriété NOUN propriété
1.31 CCONJ 1.31
, PUNCT ,
page NOUN page
précédente ADJ précédent
. PUNCT .
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels ADJ vectoriel
. PUNCT .
Si SCONJ si
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
sont VERB être ind_pre
de ADP de
dimensions NOUN dimension
finies ADJ fini
, PUNCT ,
alors ADV alors
: PUNCT :
dim ADP dim
E NOUN e
dim ADP dim
E NOUN e
0 NUM 0
f NUM f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
injective NOUN injective
dim ADP dim
E NOUN e
dim ADP dim
E NOUN e
0 NUM 0
f NUM f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
bijective NOUN bijective
dim ADP dim
E NOUN e
dim ADP dim
E NOUN e
0 NUM 0
f NUM f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
surjective NOUN surjective
En ADP en
particulier ADJ particulier
, PUNCT ,
tout ADV tout
K NOUN k
- ADJ -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n NOUN n
est VERB être ind_pre
isomorphe NOUN isomorphe
à ADP à
Kn PROPN Kn
. PUNCT .
Démonstration NOUN démonstration
Si SCONJ si
n NOUN n
p NOUN p
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
définir VERB définir inf
l' DET le
application NOUN application
linéaire ADJ linéaire
f PUNCT f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
telle ADJ tel
que SCONJ que
f PRON f
( PUNCT (
ei NOUN ei
) PUNCT )
e0i NOUN e0i
pour ADP pour
tout ADV tout
i DET i
1 NUM 1
, PUNCT ,
n. NOUN n.
elle PRON lui
est VERB être ind_pre
donc ADV donc
libre ADJ libre
, PUNCT ,
ce PRON ce
qui PRON qui
démontre VERB démontrer ind_pre sub_pre
que SCONJ que
f PRON f
est VERB être ind_pre
injective NOUN injective
( PUNCT (
voir VERB voir inf
la DET le
remarque NOUN remarque
1.19 NUM 1.19
, PUNCT ,
page NOUN page
51 NUM 51
) PUNCT )
. PUNCT .
Réciproquement ADV réciproquement
, PUNCT ,
si SCONJ si
il PRON il
existe VERB exister ind_pre
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
injective NOUN injective
, PUNCT ,
alors ADV alors
( PUNCT (
f NOUN f
( PUNCT (
e1 NOUN e1
) PUNCT )
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
f PUNCT f
( PUNCT (
en NOUN en
) PUNCT )
) PUNCT )
est VERB être ind_pre
une DET un
famille NOUN famille
libre ADJ libre
à ADP à
n ADJ n
éléments NOUN élément
dans ADP dans
un DET un
espace NOUN espace
de ADP de
dimension NOUN dimension
p NOUN p
, PUNCT ,
donc ADV donc
n NOUN n
p. NOUN p.
Si SCONJ si
n NOUN n
p NOUN p
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
définir VERB définir inf
l' DET le
application NOUN application
linéaire ADJ linéaire
f PUNCT f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
telle ADJ tel
que SCONJ que
f PRON f
( PUNCT (
ei NOUN ei
) PUNCT )
e0i NOUN e0i
pour ADP pour
tout ADV tout
i DET i
1 NUM 1
, PUNCT ,
p NOUN p
et CCONJ et
E NOUN e
0 NUM 0
, PUNCT ,
donc ADV donc
est VERB être ind_pre
génératrice NOUN génératrice
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
f NOUN f
est VERB être ind_pre
surjective ADJ surjectif
. PUNCT .
Réciproquement ADV réciproquement
, PUNCT ,
si SCONJ si
il PRON il
existe VERB exister ind_pre
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
surjective NOUN surjective
, PUNCT ,
alors ADV alors
( PUNCT (
f NOUN f
( PUNCT (
e1 NOUN e1
) PUNCT )
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
f PUNCT f
( PUNCT (
en NOUN en
) PUNCT )
) PUNCT )
est VERB être ind_pre
une DET un
famille NOUN famille
génératrice NOUN génératrice
à ADP à
n NOUN n
éléments NOUN élément
dans ADP dans
un DET un
espace NOUN espace
de ADP de
dimension NOUN dimension
p NOUN p
, PUNCT ,
donc ADV donc
n NOUN n
p. NOUN p.
Si SCONJ si
n NOUN n
p NOUN p
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
définir VERB définir inf
l' DET le
application NOUN application
linéaire ADJ linéaire
f PUNCT f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
telle ADJ tel
que SCONJ que
f PRON f
( PUNCT (
ei NOUN ei
) PUNCT )
e0i NOUN e0i
pour ADP pour
tout ADV tout
i DET i
1 NUM 1
, PUNCT ,
n NOUN n
1 NUM 1
, PUNCT ,
p. NOUN p.
D' ADP de
après ADP après
ce PRON ce
qui PRON qui
précède VERB précéder ind_pre
, PUNCT ,
f PRON f
est VERB être ind_pre
injective NOUN injective
et CCONJ et
surjective NOUN surjective
donc ADV donc
bijective ADJ bijectif
. PUNCT .
Réciproquement ADV réciproquement
, PUNCT ,
si SCONJ si
il PRON il
existe VERB exister ind_pre
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
bijective NOUN bijective
, PUNCT ,
alors ADV alors
d' ADP de
après ADP après
ce PRON ce
qui PRON qui
précède VERB précéder ind_pre
n ADV n
p NOUN p
et CCONJ et
p NOUN p
n NOUN n
, PUNCT ,
donc ADV donc
Ces DET ce
propriétés NOUN propriété
sont VERB être ind_pre
très ADV très
importantes ADJ important
pour ADP pour
démontrer VERB démontrer inf
des DET un
égalités NOUN égalité
ou CCONJ ou
des DET un
inégalités NOUN inégalité
de ADP de
dimensions NOUN dimension
! PUNCT !
Proposition NOUN proposition
1.6 NUM 1.6
Rang NOUN rang
d' ADP de
une DET un
composition NOUN composition
Soit VERB être sub_pre
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
et CCONJ et
E NOUN e
00 NOUN 00
trois NUM trois
K NOUN k
- PUNCT -
espaces NOUN espace
vectoriels NOUN vectoriel
de ADP de
dimensions NOUN dimension
finies ADJ fini
, PUNCT ,
u ADP u
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
v NOUN v
L NOUN l
( PUNCT (
E NOUN e
0 NUM 0
, PUNCT ,
E NOUN e
00 NUM 00
) PUNCT )
, PUNCT ,
alors ADV alors
: PUNCT :
rang(v PROPN rang(v
u NOUN u
) PUNCT )
dim ADP dim
E NOUN e
0 NUM 0
rang(v PROPN rang(v
) PUNCT )
rang(u PROPN rang(u
) PUNCT )
Démonstration NOUN démonstration
On PRON on
peut VERB pouvoir ind_pre
déjà ADV déjà
remarquer VERB remarquer inf
que SCONJ que
: PUNCT :
donc ADV donc
, PUNCT ,
en ADP en
introduisant VERB introduire par_pre
des DET un
supplémentaires NOUN supplémentaire
: PUNCT :
l' DET le
inégalité NOUN inégalité
demandée VERB demander par_pas
devient VERB devenir ind_pre
: PUNCT :
Or CCONJ or
, PUNCT ,
il PRON il
existe VERB exister ind_pre
une DET un
application NOUN application
naturelle ADJ naturel
qui PRON qui
va VERB aller ind_pre
de ADP de
F NOUN f
0 NUM 0
dans ADP dans
F NOUN f
00 NUM 00
, PUNCT ,
l' DET le
application NOUN application
: PUNCT :
L' DET le
énoncé NOUN énoncé
devient VERB devenir ind_pre
: PUNCT :
La DET le
démonstration NOUN démonstration
ne ADV ne
est VERB être ind_pre
alors ADV alors
qu' SCONJ que
une DET un
vérification NOUN vérification
: PUNCT :
soit VERB être sub_pre
x00 DET x00
F NOUN f
00 NUM 00
, PUNCT ,
alors ADV alors
x00 VERB x00
Im(v NOUN im(v
) PUNCT )
, PUNCT ,
donc ADV donc
, PUNCT ,
il PRON il
existe VERB exister ind_pre
Théorème NOUN théorème
1.4 NUM 1.4
Théorème NOUN théorème
du ADP de
rang NOUN rang
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
des ADP de
K NOUN k
- PROPN -
espace PROPN espace
vectoriels NOUN vectoriel
et CCONJ et
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
alors ADV alors
: PUNCT :
rang(f NOUN rang(f
) PUNCT )
dim ADP dim
E NOUN e
dim ADP dim
Ker(f PROPN Ker(f
) PUNCT )
Théorème NOUN théorème
du ADP de
rang NOUN rang
Démonstration NOUN démonstration
C' PRON ce
est VERB être ind_pre
une DET un
application NOUN application
immédiate ADJ immédiat
du ADP de
théorème NOUN théorème
de ADP de
factorisation NOUN factorisation
( PUNCT (
théorème NOUN théorème
1.5 NUM 1.5
, PUNCT ,
page NOUN page
62 NUM 62
) PUNCT )
dans ADP dans
le DET le
cas NOUN cas
de ADP de
la DET le
dimension NOUN dimension
finie VERB finir par_pas
. PUNCT .
1 NUM 1
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
F NOUN f
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
et CCONJ et
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
2 NUM 2
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
alors ADV alors
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
En ADP en
posant VERB poser par_pre
f ADP f
0 NUM 0
idE PRON ide
, PUNCT ,
on PRON on
a VERB avoir ind_pre
: PUNCT :
( PUNCT (
b NOUN b
) PUNCT )
De ADP de
plus ADV plus
, PUNCT ,
( PUNCT (
c NOUN c
) PUNCT )
On PRON on
peut VERB pouvoir ind_pre
alors ADV alors
poser VERB poser inf
: PUNCT :
Proposition NOUN proposition
1.7 NUM 1.7
Caractérisation NOUN caractérisation
des ADP de
automorphismes NOUN automorphisme
en ADP en
dimension NOUN dimension
finie VERB finir par_pas
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
alors ADV alors
: PUNCT :
f NUM f
injective NOUN injective
f PUNCT f
surjective NOUN surjective
f NUM f
bijective ADJ bijectif
C' PRON ce
est VERB être ind_pre
faux ADJ faux
en ADP en
dimension NOUN dimension
infinie ADJ infini
. PUNCT .
Démonstration NOUN démonstration
1 NUM 1
. PUNCT .
C' PRON ce
est VERB être ind_pre
une DET un
application NOUN application
immédiate ADJ immédiat
du ADP de
théorème NOUN théorème
du ADP de
rang NOUN rang
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
remarquer VERB remarquer inf
que SCONJ que
le DET le
résultat NOUN résultat
est VERB être ind_pre
encore ADV encore
vrai ADJ vrai
lorsque SCONJ lorsque
f PUNCT f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
dim ADP dim
E NOUN e
dim ADP dim
E NOUN e
0 NUM 0
. PUNCT .
2 NUM 2
. PUNCT .
En ADP en
dimension NOUN dimension
infinie ADJ infini
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
considérer VERB considérer inf
, PUNCT ,
par ADP par
exemple NOUN exemple
, PUNCT ,
la DET le
dérivation NOUN dérivation
sur ADP sur
C NOUN c
( PUNCT (
R NOUN r
, PUNCT ,
R NOUN r
) PUNCT )
qui PRON qui
est VERB être ind_pre
surjective NOUN surjective
, PUNCT ,
mais CCONJ mais
pas ADV pas
injective NOUN injective
! PUNCT !
Proposition NOUN proposition
1.8 NUM 1.8
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- ADJ -
espaces NOUN espace
vectoriels NOUN vectoriel
de ADP de
dimensions NOUN dimension
finies ADJ fini
, PUNCT ,
alors ADV alors
L NOUN l
( PUNCT (
E NOUN e
E NOUN e
0 NUM 0
) PUNCT )
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
égale ADJ égal
à ADP à
dim ADP dim
E NOUN e
dim ADP dim
E NOUN e
0 NUM 0
Démonstration NOUN démonstration
Si SCONJ si
E NOUN e
0E NUM 0E
ou CCONJ ou
E NOUN e
0 NUM 0
0E NOUN 0e
0 NUM 0
, PUNCT ,
il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
rien PRON rien
à ADP à
démontrer VERB démontrer inf
. PUNCT .
Supposons VERB supposer imper
que PRON que
E NOUN e
6 NUM 6
0E NUM 0E
et CCONJ et
E NOUN e
0 NUM 0
6 DET 6
0E ADP 0e
0 NUM 0
. PUNCT .
Soit VERB être sub_pre
( PUNCT (
e1 NOUN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
une DET un
base NOUN base
de ADP de
E NOUN e
et CCONJ et
( PUNCT (
e01 PROPN e01
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
e0n ADJ e0n
) PUNCT )
une DET un
base NOUN base
de ADP de
E NOUN e
0 NUM 0
, PUNCT ,
il PRON il
suffit VERB suffire ind_pre
de ADP de
vérifier VERB vérifier inf
alors ADV alors
que SCONJ que
: PUNCT :
où PRON où
si SCONJ si
( PUNCT (
k NOUN k
, PUNCT ,
l NOUN l
) PUNCT )
1 NUM 1
, PUNCT ,
n NOUN n
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
uk CCONJ uk
, PUNCT ,
l NOUN l
est VERB être ind_pre
définie VERB définir par_pas
par ADP par
a VERB avoir ind_pre
: PUNCT :
a. VERB avoir ind_pre
On PRON on
rappelle VERB rappeler ind_pre
la DET le
définition NOUN définition
du ADP de
symbole NOUN symbole
de ADP de
Kronecker PROPN Kronecker
: PUNCT :
On PRON on
voit VERB voir ind_pre
donc ADV donc
que SCONJ que
si SCONJ si
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
sont VERB être ind_pre
de ADP de
dimensions NOUN dimension
finies ADJ fini
, PUNCT ,
alors ADV alors
L NOUN l
( PUNCT (
E NOUN e
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
L NOUN l
( PUNCT (
E NOUN e
0 NUM 0
E NOUN e
) PUNCT )
sont VERB être ind_pre
isomorphes VERB isomorpher
car CCONJ car
ils PRON il
ont VERB avoir ind_pre
même ADV même
dimension NOUN dimension
! PUNCT !
Nous PRON nous
verrons VERB voir fut_sim
que SCONJ que
c' PRON ce
est VERB être ind_pre
faux ADJ faux
en ADP en
dimension NOUN dimension
infinie ADJ infini
! PUNCT !
Il PRON il
y PRON y
a VERB avoir ind_pre
en PRON en
fait NOUN fait
deux NUM deux
sortes ADJ sorte
d' ADP de
isomorphismes NOUN isomorphisme
: PUNCT :
1 NUM 1
. PUNCT .
Des DET un
isomorphismes NOUN isomorphisme
géométriques ADJ géométrique
: PUNCT :
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
vrais ADJ vrai
sans ADP sans
propriétés NOUN propriété
de ADP de
dimensions NOUN dimension
. PUNCT .
2 NUM 2
. PUNCT .
Des DET un
isomorphismes NOUN isomorphisme
non ADV non
géométriques ADJ géométrique
: PUNCT :
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
qu' SCONJ que
ils PRON il
ne ADV ne
traduisent VERB traduire ind_pre
qu' SCONJ que
une DET un
égalité NOUN égalité
de ADP de
dimensions NOUN dimension
. PUNCT .
1.11.1 NUM 1.11.1
Soit VERB être sub_pre
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
, PUNCT ,
F NOUN f
et CCONJ et
F NOUN f
0 NUM 0
des ADP de
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
de ADP de
dimensions NOUN dimension
finies ADJ fini
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
F NOUN f
) PUNCT )
. PUNCT .
Démontrer VERB démontrer inf
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Pour ADP pour
toute DET tout
L NOUN l
( PUNCT (
E NOUN e
0 NUM 0
, PUNCT ,
E NOUN e
) PUNCT )
surjective NOUN surjective
, PUNCT ,
rang(f NOUN rang(f
) PUNCT )
rang NOUN rang
f NOUN f
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Pour ADP pour
toute DET tout
L NOUN l
( PUNCT (
F NOUN f
, PUNCT ,
F NOUN f
0 NUM 0
) PUNCT )
injective NOUN injective
, PUNCT ,
rang NOUN rang
( PUNCT (
f NOUN f
) PUNCT )
rang NOUN rang
f NOUN f
. PUNCT .
1.11.3 PROPN 1.11.3
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
n ADJ n
et CCONJ et
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
tel ADJ tel
que SCONJ que
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
( PUNCT (
b NOUN b
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
, PUNCT ,
si SCONJ si
f PUNCT f
n1 NOUN n1
6 NUM 6
0L NOUN 0l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
alors ADV alors
1.11.4 VERB 1.11.4
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
démontrer VERB démontrer inf
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
un DET un
automorphisme NOUN automorphisme
g NOUN gramme
GL PROPN GL
( PUNCT (
E NOUN e
) PUNCT )
et CCONJ et
p NOUN p
un DET un
projecteur NOUN projecteur
de ADP de
E NOUN e
tel ADJ tel
que SCONJ que
: PUNCT :
1.11.5 PROPN 1.11.5
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
on PRON on
considère VERB considérer ind_pre
les DET le
applications NOUN application
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
et CCONJ et
sont VERB être ind_pre
dans ADP dans
L NOUN l
( PUNCT (
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
) PUNCT )
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Calculer VERB calculer inf
rang NOUN rang
( PUNCT (
) PUNCT )
et CCONJ et
rang NOUN rang
( PUNCT (
) PUNCT )
. PUNCT .
1.11.6 PROPN 1.11.6
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
On PRON on
considère VERB considérer ind_pre
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
F NOUN f
est VERB être ind_pre
non ADV non
vide ADJ vide
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Soit VERB être sub_pre
v0 NOUN v0
F NOUN f
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
v0 PROPN v0
F NOUN f
v X v
v0 PROPN v0
, PUNCT ,
v NOUN v
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
On PRON on
suppose VERB supposer ind_pre
dorénavant ADV dorénavant
que SCONJ que
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n. DET n.
( PUNCT (
c NOUN c
) PUNCT )
Calculer VERB calculer inf
la DET le
dimension NOUN dimension
de ADP de
v0 NOUN v0
F. PROPN F.
( PUNCT (
d NOUN d
) PUNCT )
Que PRON que
peut VERB pouvoir ind_pre
-on PRON on
dire VERB dire inf
du ADP de
rang NOUN rang
de ADP de
v X v
lorsque SCONJ lorsque
v NOUN v
F NOUN f
? PUNCT ?
1.11.7 ADJ 1.11.7
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
rang NOUN rang
f ADP f
k NOUN k
rang NOUN rang
f NOUN f
k2 NOUN k2
1.11.8 X 1.11.8
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
1.11.9 VERB 1.11.9
Soit VERB être sub_pre
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
, PUNCT ,
E NOUN e
00 NUM 00
et CCONJ et
E NOUN e
000 DET 000
quatre NUM quatre
K NOUN k
- PUNCT -
espaces NOUN espace
vectoriels NOUN vectoriel
de ADP de
dimensions NOUN dimension
finies ADJ fini
, PUNCT ,
f NUM f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
g NOUN gramme
L NOUN l
( PUNCT (
E NOUN e
0 NUM 0
, PUNCT ,
E NOUN e
00 NUM 00
) PUNCT )
1.11.10 NUM 1.11.10
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
f NUM f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
GL NOUN gl
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
Démontrer VERB démontrer inf
que SCONJ que
c' PRON ce
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
en PRON en
calculer VERB calculer inf
sa DET son
dimension NOUN dimension
. PUNCT .
Factorisation NOUN factorisation
des ADP de
applications NOUN application
linéaires ADJ linéaire
Si SCONJ si
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
, PUNCT ,
alors ADV alors
la DET le
restriction NOUN restriction
d' ADP de
une DET un
application NOUN application
linéaire ADJ linéaire
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
notée VERB noter par_pas
fF PROPN fF
et CCONJ et
définie VERB définir par_pas
par ADP par
: PUNCT :
est VERB être ind_pre
une DET un
application NOUN application
linéaire ADJ linéaire
de ADP de
F NOUN f
dans ADP dans
E NOUN e
0 NUM 0
. PUNCT .
De ADP de
plus ADV plus
, PUNCT ,
est VERB être ind_pre
une DET un
application NOUN application
linéaire ADJ linéaire
Démonstration NOUN démonstration
Si SCONJ si
f PUNCT f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
F NOUN f
0 NUM 0
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
0 NUM 0
tel ADJ tel
que SCONJ que
de ADP de
f PRON f
, PUNCT ,
notée VERB noter par_pas
f CCONJ f
, PUNCT ,
alors ADV alors
la DET le
co-restriction NOUN co-restriction
et CCONJ et
définie VERB définir par_pas
par ADP par
: PUNCT :
est VERB être ind_pre
une DET un
application NOUN application
linéaire ADJ linéaire
de ADP de
E PROPN E
dans ADP dans
F NOUN f
0 NUM 0
. PUNCT .
De ADP de
plus ADV plus
, PUNCT ,
est VERB être ind_pre
une DET un
application NOUN application
linéaire ADJ linéaire
Démonstration NOUN démonstration
Notation NOUN notation
1.1 NOUN 1.1
Par ADP par
abus NOUN abus
de ADP de
notation NOUN notation
, PUNCT ,
si SCONJ si
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
, PUNCT ,
F NOUN f
0 NUM 0
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
0 NUM 0
et CCONJ et
f DET f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
tels ADJ tel
que SCONJ que
, PUNCT ,
nous PRON nous
noterons VERB noter fut_sim
: PUNCT :
Soit VERB être sub_pre
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
et CCONJ et
E NOUN e
00 PRON 00
des ADP de
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
. PUNCT .
Si SCONJ si
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
si SCONJ si
f PRON f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
g NOUN gramme
L NOUN l
( PUNCT (
E NOUN e
0 NUM 0
, PUNCT ,
E NOUN e
00 NUM 00
) PUNCT )
alors ADV alors
: PUNCT :
De ADP de
même ADV même
, PUNCT ,
si SCONJ si
F NOUN f
00 NUM 00
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
00 NUM 00
contenant VERB contenir par_pre
g(E NOUN g(e
0 NUM 0
) PUNCT )
, PUNCT ,
alors ADV alors
: PUNCT :
Si SCONJ si
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
et CCONJ et
f DET f
une DET un
application NOUN application
linéaire ADJ linéaire
de ADP de
E NOUN e
dans ADP dans
E NOUN e
0 NUM 0
, PUNCT ,
Ker PROPN Ker
fF PROPN fF
F NOUN f
Ker(f VERB ker(f
) PUNCT )
Démonstration NOUN démonstration
Soit VERB être sub_pre
x ADP x
Ker NOUN ker
fF PROPN fF
. PUNCT .
Alors ADV alors
x NOUN x
F NOUN f
( PUNCT (
car CCONJ car
l' DET le
ensemble NOUN ensemble
de ADP de
départ NOUN départ
de ADP de
fF PROPN fF
est VERB être ind_pre
F VERB f
) PUNCT )
donc ADV donc
f ADP f
( PUNCT (
x NOUN x
) PUNCT )
fF PROPN fF
( PUNCT (
x NOUN x
) PUNCT )
0E NOUN 0e
0 NUM 0
donc ADV donc
Par ADP par
double ADJ double
inclusion NOUN inclusion
, PUNCT ,
Ker PROPN Ker
fF PROPN fF
F NOUN f
Ker(f VERB ker(f
) PUNCT )
. PUNCT .
Notation NOUN notation
1.2 NUM 1.2
Inclusion NOUN inclusion
canonique ADJ canonique
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
F NOUN f
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
définir VERB définir inf
l' DET le
inclusion NOUN inclusion
canonique ADJ canonique
de ADP de
F NOUN f
dans ADP dans
E NOUN e
par ADP par
: PUNCT :
On PRON on
a VERB avoir ind_pre
donc ADV donc
: PUNCT :
iF X iF
E X E
( PUNCT (
idE PRON ide
) PUNCT )
F NOUN f
Si SCONJ si
G NOUN gramme
est VERB être ind_pre
un DET un
supplémentaire ADJ supplémentaire
de ADP de
F NOUN f
dans ADP dans
E NOUN e
( PUNCT (
E NOUN e
F NOUN f
G NOUN gramme
) PUNCT )
, PUNCT ,
on PRON on
a VERB avoir ind_pre
: PUNCT :
iF X iF
E X E
idF ADV idf
Ce PRON ce
ne ADV ne
sont VERB être ind_pre
pas ADV pas
des DET un
réciproques NOUN réciproque
! PUNCT !
Pour ADP pour
connaître VERB connaître inf
une DET un
application NOUN application
linéaire ADJ linéaire
définie VERB définir par_pas
sur ADP sur
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel VERB vectoriel
dont PRON dont
on PRON on
connaît VERB connaître ind_pre
une DET un
décomposition NOUN décomposition
en ADP en
somme NOUN somme
directe ADJ direct
, PUNCT ,
il PRON il
faut VERB falloir ind_pre
et CCONJ et
il PRON il
suffit VERB suffire ind_pre
d' ADP de
en PRON en
connaître VERB connaître inf
ses DET son
restrictions NOUN restriction
à ADP à
chaque DET chaque
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
composant VERB composer par_pre
la DET le
décomposition NOUN décomposition
. PUNCT .
Démonstration NOUN démonstration
Supposons VERB supposer ind_pre
que ADV que
: PUNCT :
1 NUM 1
. PUNCT .
Supposons VERB supposer ind_pre
connue VERB connaître par_pas
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
il PRON il
est VERB être ind_pre
alors ADV alors
facile ADJ facile
de ADP de
connaître VERB connaître inf
: PUNCT :
2 NUM 2
. PUNCT .
Réciproquement ADV réciproquement
, PUNCT ,
si SCONJ si
on PRON on
connaît VERB connaître ind_pre
: PUNCT :
alors ADV alors
on PRON on
connaît VERB connaître ind_pre
f CCONJ f
car CCONJ car
si SCONJ si
x NOUN x
E NOUN e
, PUNCT ,
il PRON il
existe VERB exister ind_pre
un DET un
entier ADJ entier
n NOUN n
, PUNCT ,
des DET un
indices NOUN indice
2 NUM 2
à ADP à
2 NUM 2
distincts ADJ distinct
( PUNCT (
i1 NOUN i1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
in X in
) PUNCT )
de ADP de
I ADJ i
et CCONJ et
des ADP de
vecteurs NOUN vecteur
xik AUX xik
Eik PROPN Eik
, PUNCT ,
quelque ADV quelque
soit VERB être sub_pre
k DET k
1 NUM 1
, PUNCT ,
n AUX n
tels ADJ tel
que SCONJ que
: PUNCT :
On PRON on
a VERB avoir ind_pre
alors ADV alors
: PUNCT :
Une DET un
autre ADJ autre
façon NOUN façon
de ADP de
dire VERB dire inf
est VERB être ind_pre
que ADV que
: PUNCT :
Ei NOUN ei
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
est VERB être ind_pre
isomorphe NOUN isomorphe
à ADP à
grâce NOUN grâce
à ADP à
l' DET le
application NOUN application
( PUNCT (
clairement ADV clairement
linéaire ADJ linéaire
) PUNCT )
: PUNCT :
Soit VERB être sub_pre
E NOUN e
F NOUN f
G NOUN gramme
, PUNCT ,
alors ADV alors
il PRON il
existe VERB exister ind_pre
un DET un
endomorphisme NOUN endomorphisme
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
tel ADJ tel
que SCONJ que
On PRON on
construit VERB construire ind_pre
a VERB avoir ind_pre
: PUNCT :
a. VERB avoir ind_pre
Remarquons VERB remarquer imper
que SCONJ que
l' PRON l'
on PRON on
obtient VERB obtenir ind_pre
bien ADV bien
sûr ADJ sûr
la DET le
projection NOUN projection
sur ADP sur
G NOUN gramme
parallèlement ADV parallèlement
à ADP à
F NOUN f
. PUNCT .
Théorème NOUN théorème
1.5 NUM 1.5
Factorisation NOUN factorisation
des ADP de
applications NOUN application
linéaires ADJ linéaire
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
f NUM f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
F NOUN f
un DET un
supplémentaire ADJ supplémentaire
de ADP de
Ker(f PROPN Ker(f
) PUNCT )
dans ADP dans
E NOUN e
( PUNCT (
E NOUN e
Ker(f PROPN Ker(f
) PUNCT )
F NOUN f
) PUNCT )
, PUNCT ,
alors ADV alors
est VERB être ind_pre
un DET un
isomorphisme NOUN isomorphisme
entre ADP entre
F NOUN f
et CCONJ et
Im(f PROPN Im(f
) PUNCT )
Démonstration NOUN démonstration
Posons VERB poser ind_pre
fe X fe
f NUM f
F NOUN f
1 NUM 1
. PUNCT .
fe PRON fe
est VERB être ind_pre
injective VERB injective
. PUNCT .
En ADP en
effet NOUN effet
, PUNCT ,
2 NUM 2
. PUNCT .
fe PRON fe
est VERB être ind_pre
surjective ADJ surjectif
. PUNCT .
En ADP en
effet NOUN effet
, PUNCT ,
soit VERB être sub_pre
x0 NUM x0
Im(f PROPN Im(f
) PUNCT )
, PUNCT ,
on PRON on
sait VERB savoir ind_pre
alors ADV alors
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
x NUM x
E NOUN e
, PUNCT ,
tel ADJ tel
que SCONJ que
f PRON f
( PUNCT (
x NOUN x
) PUNCT )
x0 NUM x0
. PUNCT .
Mais CCONJ mais
, PUNCT ,
par ADP par
décomposition NOUN décomposition
en ADP en
somme NOUN somme
directe ADJ direct
, PUNCT ,
on PRON on
a VERB avoir ind_pre
: PUNCT :
En ADP en
appliquant VERB appliquer par_pre
f NOUN f
, PUNCT ,
il PRON il
vient VERB venir ind_pre
: PUNCT :
Dans ADP dans
le DET le
cas NOUN cas
de ADP de
la DET le
dimension NOUN dimension
finie ADJ fini
( PUNCT (
dim NOUN dim
E NOUN e
) PUNCT )
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
que SCONJ que
Im(f NOUN im(f
) PUNCT )
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
que SCONJ que
dim DET dim
Im(f PROPN Im(f
) PUNCT )
dim ADP dim
F NOUN f
Or CCONJ or
, PUNCT ,
la DET le
formule NOUN formule
de ADP de
Grasmann PROPN Grasmann
( PUNCT (
proposition NOUN proposition
1.3 NUM 1.3
, PUNCT ,
page NOUN page
44 NUM 44
) PUNCT )
nous PRON nous
donne VERB donner ind_pre
que SCONJ que
dim ADP dim
F NOUN f
dim ADP dim
E NOUN e
dim ADP dim
Ker(f PROPN Ker(f
) PUNCT )
soit VERB être sub_pre
, PUNCT ,
le DET le
théorème NOUN théorème
du ADP de
rang NOUN rang
! PUNCT !
( PUNCT (
théorème NOUN théorème
1.4 NUM 1.4
, PUNCT ,
page NOUN page
57 NUM 57
) PUNCT )
Pourquoi ADV pourquoi
appelle VERB appeler ind_pre
-t PRON -t
-on PRON on
ce DET ce
résultat NOUN résultat
théorème NOUN théorème
de ADP de
factorisation NOUN factorisation
des ADP de
applications NOUN application
linéaires ADJ linéaire
? PUNCT ?
Si SCONJ si
on PRON on
regarde VERB regarder ind_pre
le DET le
diagramme NOUN diagramme
1.3 NUM 1.3
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
page NOUN page
. PUNCT .
On PRON on
a VERB avoir
donc ADV donc
obtenu VERB obtenir pas_cop
une DET un
factorisation NOUN factorisation
de ADP de
f PRON f
à ADP à
l' DET le
aide NOUN aide
d' ADP de
applications NOUN application
linéaires ADJ linéaire
simples ADJ simple
et CCONJ et
d' ADP de
un DET un
isomorphisme NOUN isomorphisme
: PUNCT :
f DET f
iIm(f VERB iim(f
) PUNCT )
E0 DET e0
fe X fe
pF NOUN pf
kKer(f NOUN kker(f
) PUNCT )
Figure VERB figurer ind_pre
1.3 NUM 1.3
Factorisation NOUN factorisation
d' ADP de
une DET un
application NOUN application
linéaire ADJ linéaire
À ADP à
quoi PRON quoi
cela PRON cela
sert VERB servir ind_pre
-il PRON il
? PUNCT ?
À ADP à
faire VERB faire inf
apparaître VERB apparaître inf
un DET un
isomorphisme NOUN isomorphisme
, PUNCT ,
ce PRON ce
qui PRON qui
permet VERB permettre ind_pre
d' ADP de
utiliser VERB utiliser inf
sa DET son
réciproque NOUN réciproque
! PUNCT !
Ainsi ADV ainsi
, PUNCT ,
sur ADP sur
le DET le
schéma NOUN schéma
précédent ADJ précédent
, PUNCT ,
il PRON il
apparaît VERB apparaître ind_pre
une DET un
application NOUN application
linéaire ADJ linéaire
naturelle ADJ naturel
permettant VERB permettre par_pre
d' ADP de
aller VERB aller inf
de ADP de
E NOUN e
0 NUM 0
dans ADP dans
E NOUN e
( PUNCT (
sans ADP sans
pour ADP pour
autant ADV autant
que SCONJ que
f PRON f
soit VERB être sub_pre
inversible ADJ inversible
) PUNCT )
, PUNCT ,
en ADP en
introduisant VERB introduire par_pre
un DET un
supplémentaire ADJ supplémentaire
F NOUN f
0 NUM 0
de ADP de
Im(f NOUN im(f
) PUNCT )
dans ADP dans
E NOUN e
0 NUM 0
. PUNCT .
Voir VERB voir inf
le DET le
diagramme NOUN diagramme
1.4 NUM 1.4
, PUNCT ,
page NOUN page
suivante ADJ suivant
. PUNCT .
Notons VERB noter ind_pre
cette DET ce
application NOUN application
: PUNCT :
regardons VERB regarder ind_pre
ce PRON ce
que PRON que
deviennent VERB devenir ind_pre sub_pre
g NOUN gramme
f PUNCT f
et CCONJ et
f CCONJ f
g. NOUN g.
Soit VERB être sub_pre
un DET un
élément NOUN élément
x NOUN x
E NOUN e
, PUNCT ,
que SCONJ que
l' PRON l'
on PRON on
décompose VERB décomposer ind_pre sub_pre
suivant VERB suivre par_pre
la DET le
somme NOUN somme
directe ADJ direct
F NOUN f
Ker(f VERB ker(f
) PUNCT )
, PUNCT ,
alors ADV alors
iF X iF
E NOUN e
fe1 ADJ fe1
pIm(f PROPN pIm(f
) PUNCT )
kF CCONJ kf
0 NUM 0
fe(xF VERB fe(xf
) PUNCT )
iF X iF
E NOUN e
fe1 ADJ fe1
fe(xF PUNCT fe(xf
) PUNCT )
De ADP de
même ADV même
, PUNCT ,
si SCONJ si
x0 NOUN x0
E NOUN e
0 NUM 0
que SCONJ que
l' PRON l'
on PRON on
décompose VERB décomposer ind_pre sub_pre
sous ADP sous
la DET le
forme NOUN forme
x0 NOUN x0
xF VERB xf
0 NUM 0
f NOUN f
( PUNCT (
x NOUN x
) PUNCT )
xF VERB xf
0 NUM 0
fe(xF DET fe(xf
) PUNCT )
, PUNCT ,
alors ADV alors
: PUNCT :
Finalement ADV finalement
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
: PUNCT :
Figure VERB figurer ind_pre
1.4 NUM 1.4
Utilisation NOUN utilisation
de ADP de
la DET le
factorisation NOUN factorisation
g NOUN gramme
dépend VERB dépendre ind_pre
du ADP de
choix NOUN choix
de ADP de
F NOUN f
0 NUM 0
( PUNCT (
et CCONJ et
bien ADV bien
sûr ADJ sûr
de ADP de
F NOUN f
) PUNCT )
. PUNCT .
Notons VERB noter imper
de ADP de
plus ADV plus
, PUNCT ,
que SCONJ que
si SCONJ si
f PRON f
est VERB être ind_pre
un DET un
isomorphisme NOUN isomorphisme
, PUNCT ,
alors ADV alors
fe DET fe
f PRON f
et CCONJ et
g NOUN gramme
f NOUN f
1 NUM 1
. PUNCT .
Notons VERB noter imper
que SCONJ que
l' PRON l'
on PRON on
a VERB avoir ind_pre
toujours ADV toujours
les DET le
résultats NOUN résultat
suivants ADJ suivant
: PUNCT :
fF PROPN fF
est VERB être ind_pre
injective VERB injective
, PUNCT ,
et CCONJ et
f ADV f
est VERB être ind_pre
surjective NOUN surjective
On PRON on
obtient VERB obtenir ind_pre
donc ADV donc
, PUNCT ,
à ADP à
l' DET le
aide NOUN aide
de ADP de
ce DET ce
théorème NOUN théorème
, PUNCT ,
deux NUM deux
méthodes NOUN méthode
de ADP de
démonstrations NOUN démonstration
: PUNCT :
1 NUM 1
. PUNCT .
Quand SCONJ quand
on PRON on
aura VERB avoir fut_sim
besoin NOUN besoin
de ADP de
construire VERB construire inf
une DET un
application NOUN application
linéaire ADJ linéaire
allant VERB aller par_pre
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
à ADP à
un DET un
K NOUN k
- PROPN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
0 NUM 0
, PUNCT ,
on PRON on
pourra VERB pouvoir fut_sim
essayer VERB essayer inf
d' ADP de
utiliser VERB utiliser inf
des DET un
chemins NOUN chemin
naturels ADJ naturel
allant VERB aller par_pre
de ADP de
E NOUN e
à ADP à
E NOUN e
0 NUM 0
. PUNCT .
2 NUM 2
. PUNCT .
Quand SCONJ quand
le DET le
problème NOUN problème
est VERB être ind_pre
simple ADJ simple
lorsqu' SCONJ lorsque
une DET un
application NOUN application
linéaire ADJ linéaire
est VERB être ind_pre
bijective ADJ bijectif
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
toujours ADV toujours
essayer VERB essayer inf
de ADP de
se PRON se
ramener VERB ramener inf
à ADP à
cette DET ce
situation NOUN situation
avec ADP avec
le DET le
théorème NOUN théorème
de ADP de
factorisation NOUN factorisation
. PUNCT .
Théorème NOUN théorème
1.6 NUM 1.6
Relèvement NOUN relèvement
linéaire ADJ linéaire
Démonstration NOUN démonstration
( PUNCT (
) PUNCT )
Évident PROPN Évident
. PUNCT .
Si SCONJ si
x00 VERB x00
Im(w PROPN Im(w
) PUNCT )
, PUNCT ,
alors ADV alors
il PRON il
existe VERB exister ind_pre
un DET un
x NOUN x
E NOUN e
, PUNCT ,
tel ADJ tel
que SCONJ que
x00 PROPN x00
w(x PROPN w(x
) PUNCT )
v NOUN v
u(x PROPN u(x
) PUNCT )
Im(v NOUN im(v
) PUNCT )
. PUNCT .
( PUNCT (
) PUNCT )
Nous PRON nous
allons VERB aller
essayer VERB essayer fut_pro
les DET le
deux NUM deux
méthodes NOUN méthode
: PUNCT :
1 NUM 1
. PUNCT .
( PUNCT (
Chemins NOUN chemin
naturels ADJ naturel
) PUNCT )
On PRON on
a VERB avoir ind_pre
le DET le
diagramme NOUN diagramme
1.5 NUM 1.5
, PUNCT ,
page NOUN page
suivante ADJ suivant
. PUNCT .
( PUNCT (
Analyse NOUN analyse else
) PUNCT )
En ADP en
utilisant VERB utiliser par_pre
le DET le
théorème NOUN théorème
de ADP de
factorisation NOUN factorisation
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
construire VERB construire inf
un DET un
chemin NOUN chemin
naturel ADJ naturel
allant VERB aller par_pre
de ADP de
E NOUN e
à ADP à
E NOUN e
0 NUM 0
( PUNCT (
en ADP en
passant VERB passer par_pre
par ADP par
E NOUN e
00 NUM 00
) PUNCT )
. PUNCT .
Voir VERB voir inf
le DET le
diagramme NOUN diagramme
1.6 NUM 1.6
, PUNCT ,
page NOUN page
suivante ADJ suivant
. PUNCT .
On PRON on
obtient VERB obtenir ind_pre
un DET un
candidat NOUN candidat
au ADP à
rôle NOUN rôle
de ADP de
u. VERB u.
Il PRON il
s' PRON se
écrit VERB écrire par_pas ind_pre
: PUNCT :
( PUNCT (
Synthèse PROPN Synthèse
) PUNCT )
Il PRON il
suffit VERB suffire ind_pre
alors ADV alors
de ADP de
vérifier VERB vérifier inf
qu' SCONJ que
il PRON il
convient VERB convenir ind_pre
a VERB avoir ind_pre
, PUNCT ,
si SCONJ si
x ADP x
E NOUN e
, PUNCT ,
alors ADV alors
: PUNCT :
or CCONJ or
w(x PROPN w(x
) PUNCT )
Im(v NOUN im(v
) PUNCT )
par ADP par
hypothèse NOUN hypothèse
2 NUM 2
. PUNCT .
( PUNCT (
Et CCONJ et
si SCONJ si
v NOUN v
était VERB être impar
inversible ADJ inversible
. PUNCT .
) PUNCT )
Si SCONJ si
v NOUN v
est VERB être ind_pre
inversible ADJ inversible
, PUNCT ,
alors ADV alors
u NOUN u
v NOUN v
1 NUM 1
w. NOUN w.
Dans ADP dans
le DET le
cas NOUN cas
contraire ADJ contraire
, PUNCT ,
nous PRON nous
allons VERB aller
essayer VERB essayer fut_pro
de ADP de
nous PRON nous
y PRON y
ramener VERB ramener inf
: PUNCT :
( PUNCT (
Analyse NOUN analyse else
) PUNCT )
Si SCONJ si
u PROPN u
existe VERB exister ind_pre
, PUNCT ,
alors ADV alors
b NOUN b
w NOUN w
v NOUN v
u NOUN u
donc ADV donc
w X w
Pour ADP pour
pouvoir VERB pouvoir inf
restreindre VERB restreindre inf
v NOUN v
à ADP à
F NOUN f
0 NUM 0
( PUNCT (
supplémentaire ADJ supplémentaire
de ADP de
Ker(v NOUN ker(v
) PUNCT )
) PUNCT )
, PUNCT ,
nous PRON nous
allons VERB aller
imposer VERB imposer fut_pro
une DET un
condition NOUN condition
supplémentaire ADJ supplémentaire
à ADP à
u AUX u
permettant VERB permettre par_pre
la DET le
co-restriction NOUN co-restriction
à ADP à
F NOUN f
0 NUM 0
de ADP de
u PROPN u
: PUNCT :
e X e
inversible ADJ inversible
! PUNCT !
donc ADV donc
, PUNCT ,
dans ADP dans
ce DET ce
cas NOUN cas
, PUNCT ,
on PRON on
a VERB avoir ind_pre
la DET le
condition NOUN condition
nécessaire ADJ nécessaire
: PUNCT :
( PUNCT (
Synthèse PROPN Synthèse
) PUNCT )
Soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
défini VERB définir par_pas
par ADP par
: PUNCT :
ou CCONJ ou
, PUNCT ,
si SCONJ si
l' PRON l'
on PRON on
préfère VERB préférer ind_pre
: PUNCT :
Alors ADV alors
, PUNCT ,
si SCONJ si
x ADP x
E NOUN e
, PUNCT ,
on PRON on
a VERB avoir ind_pre
Le DET le
candidat NOUN candidat
ne ADV ne
est VERB être ind_pre
parfois ADV parfois
pas ADV pas
celui PRON celui
dont PRON dont
on PRON on
a VERB avoir ind_pre
besoin NOUN besoin
! PUNCT !
La DET le
vérification NOUN vérification
est VERB être ind_pre
indispensable ADJ indispensable
! PUNCT !
b. PRON b.
La DET le
co-restriction NOUN co-restriction
est VERB être ind_pre
possible ADJ possible
d' ADP de
après ADP après
l' DET le
hypothèse NOUN hypothèse
. PUNCT .
Figure NOUN figure else
1.5 NUM 1.5
Relèvement NOUN relèvement
linéaire ADJ linéaire
: PUNCT :
position NOUN position
du ADP de
problème NOUN problème
Figure NOUN figure else
1.6 NUM 1.6
Relèvement NOUN relèvement
linéaire ADJ linéaire
: PUNCT :
construction NOUN construction
des ADP de
chemins NOUN chemin
Théorème NOUN théorème
1.7 NUM 1.7
Extension NOUN extension
linéaire ADJ linéaire
Soit VERB être sub_pre
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
et CCONJ et
E NOUN e
00 NOUN 00
trois NUM trois
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
w NOUN w
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
00 NUM 00
) PUNCT )
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
alors ADV alors
Démonstration NOUN démonstration
Laissé VERB laisser par_pas
en ADP en
exercice NOUN exercice
. PUNCT .
Cette DET ce
démonstration NOUN démonstration
est VERB être ind_pre
très ADV très
proche ADJ proche
de ADP de
celle PRON celui
du ADP de
relèvement NOUN relèvement
linéaire ADJ linéaire
. PUNCT .
Proposition NOUN proposition
1.9 NUM 1.9
Surjectivité PROPN Surjectivité
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
v NOUN v
L NOUN l
( PUNCT (
E NOUN e
0 NUM 0
, PUNCT ,
E NOUN e
) PUNCT )
, PUNCT ,
alors ADV alors
: PUNCT :
u DET u
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
idE VERB ide
v PRON v
u X u
v NOUN v
surjective NOUN surjective
Démonstration NOUN démonstration
Prendre PROPN Prendre
w NOUN w
idE PRON ide
dans ADP dans
le DET le
théorème NOUN théorème
de ADP de
relèvement NOUN relèvement
. PUNCT .
Proposition NOUN proposition
1.10 NUM 1.10
Injectivité PROPN Injectivité
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
u DET u
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
alors ADV alors
: PUNCT :
Démonstration NOUN démonstration
Prendre PROPN Prendre
w NOUN w
idE PRON ide
dans ADP dans
le DET le
théorème NOUN théorème
d' ADP de
extension NOUN extension
. PUNCT .
1.12.1 NOUN 1.12.1
Démontrer VERB démontrer inf
le DET le
théorème NOUN théorème
d' ADP de
extension NOUN extension
linéaire ADJ linéaire
. PUNCT .
1.12.2 PRON 1.12.2
Soit VERB être sub_pre
E0 ADJ e0
, PUNCT ,
E1 NOUN e1
et CCONJ et
E2 ADJ e2
trois NUM trois
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
tels ADJ tel
que SCONJ que
: PUNCT :
démontrer VERB démontrer inf
que SCONJ que
E1 PROPN E1
et CCONJ et
E2 NOUN e2
sont VERB être ind_pre
isomorphes ADJ isomorphe
. PUNCT .
1.12.3 NOUN 1.12.3
Soit VERB être sub_pre
E1 NOUN e1
, PUNCT ,
E2 NOUN e2
, PUNCT ,
E3 X E3
et CCONJ et
E4 NOUN e4
quatre NUM quatre
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
tels ADJ tel
que SCONJ que
: PUNCT :
démontrer VERB démontrer inf
que SCONJ que
E3 PRON e3
et CCONJ et
E4 PROPN E4
sont VERB être ind_pre
isomorphes VERB isomorpher
. PUNCT .
1.12.4 ADP 1.12.4
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
soit VERB être sub_pre
( PUNCT (
u NOUN u
, PUNCT ,
v X v
, PUNCT ,
w PROPN w
) PUNCT )
L NOUN l
( PUNCT (
E)3 NOUN e)3
. PUNCT .
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
( PUNCT (
b NOUN b
) PUNCT )
Donner ADP donner
une DET un
CNS PROPN CNS
pour ADP pour
que SCONJ que
: PUNCT :
( PUNCT (
c NOUN c
) PUNCT )
Donner ADP donner
une DET un
CNS PROPN CNS
pour ADP pour
que SCONJ que
: PUNCT :
1.12.5 PROPN 1.12.5
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
soit VERB être sub_pre
f NUM f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
Étude NOUN étude
du ADP de
dual PROPN dual
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
dual ADJ dual
de ADP de
E NOUN e
et CCONJ et
on PRON on
note VERB noter ind_pre
: PUNCT :
Les DET le
éléments NOUN élément
de ADP de
E NOUN e
? PUNCT ?
s' PRON se
appellent VERB appeler ind_pre
des DET un
formes NOUN forme
linéaires ADJ linéaire
a VERB avoir ind_pre
. PUNCT .
a. VERB avoir ind_pre
Le DET le
mot NOUN mot
forme NOUN forme
, PUNCT ,
désigne VERB désigner ind_pre
en ADP en
général NOUN général
une DET un
application NOUN application
à ADP à
valeurs NOUN valeur
dans ADP dans
le DET le
corps NOUN corps
de ADP de
base NOUN base
. PUNCT .
On PRON on
aura VERB avoir fut_sim
des DET un
formes NOUN forme
linéaires ADJ linéaire
, PUNCT ,
des ADP de
formes NOUN forme
bilinéaires ADJ bilinéaire
, PUNCT ,
etc. ADV etc.
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Alors ADV alors
E NOUN e
? PUNCT ?
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Démonstration NOUN démonstration
C' PRON ce
est VERB être ind_pre
un DET un
cas NOUN cas
particulier ADJ particulier
de ADP de
la DET le
propriété NOUN propriété
1.23 NUM 1.23
, PUNCT ,
page NOUN page
47 NUM 47
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
alors ADV alors
E NOUN e
? PUNCT ?
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
dim ADP dim
E NOUN e
dim ADP dim
E NOUN e
? PUNCT ?
En ADP en
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
les DET le
deux NUM deux
espaces NOUN espace
sont VERB être ind_pre
donc ADV donc
isomorphes NOUN isomorphe
. PUNCT .
C' PRON ce
est VERB être ind_pre
faux ADJ faux
en ADP en
dimension NOUN dimension
infinie ADJ infini
. PUNCT .
Démonstration NOUN démonstration
Si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
c' PRON ce
est VERB être ind_pre
un DET un
cas NOUN cas
particulier ADJ particulier
de ADP de
la DET le
proposition NOUN proposition
1.8 NUM 1.8
, PUNCT ,
page NOUN page
58 NUM 58
: PUNCT :
Si SCONJ si
E NOUN e
ne ADV ne
est VERB être ind_pre
pas ADV pas
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
voir VERB voir inf
l' DET le
exemple NOUN exemple
ci-dessous ADV ci-dessous
. PUNCT .
E NOUN e
Vect(x ADJ vect(x
7 NUM 7
xn VERB xn
, PUNCT ,
n NUM ne
N ADJ n
) PUNCT )
, PUNCT ,
sous-espace ADV sous-espace
vectoriel NOUN vectoriel
du ADP de
Q NOUN q
- PROPN -
espace PROPN espace
vectoriel NOUN vectoriel
F NOUN f
( PUNCT (
Q NOUN q
, PUNCT ,
Q NOUN q
) PUNCT )
On PRON on
a VERB avoir ind_pre
alors ADV alors
: PUNCT :
E NOUN e
est VERB être ind_pre
dénombrable ADJ dénombrable
car CCONJ car
: PUNCT :
en ADP en
bijection NOUN bijection
avec ADP avec
Qn1 VERB qn1
donc ADV donc
Q NOUN q
, PUNCT ,
et CCONJ et
une DET un
réunion NOUN réunion
dénombrable ADJ dénombrable
d' ADP de
ensembles NOUN ensemble
dénombrables ADJ dénombrable
est VERB être ind_pre
dénombrable ADJ dénombrable
. PUNCT .
E NOUN e
? PUNCT ?
ne ADV ne
est VERB être ind_pre
pas ADV pas
dénombrable ADJ dénombrable
car CCONJ car
: PUNCT :
E NOUN e
? PUNCT ?
isomorphe NOUN isomorphe
à ADP à
( PUNCT (
donc ADV donc
en ADP en
bijection NOUN bijection
avec ADP avec
) PUNCT )
QN NOUN qn
par ADP par
l' DET le
isomorphisme NOUN isomorphisme
usuel ADJ usuel
: PUNCT :
Or CCONJ or
, PUNCT ,
QN PROPN QN
ne ADV ne
est VERB être ind_pre
pas ADV pas
dénombrable ADJ dénombrable
( PUNCT (
voir VERB voir inf
le DET le
procédé NOUN procédé
diagonal ADJ diagonal
de ADP de
Cantor PROPN Cantor
) PUNCT )
a VERB avoir ind_pre
. PUNCT .
Remarquons VERB remarquer imper
que SCONJ que
le DET le
dual PRON dual
est VERB être ind_pre
toujours ADV toujours
plus ADV plus
gros ADJ gros
que SCONJ que
l' DET le
espace NOUN espace
de ADP de
départ NOUN départ
! PUNCT !
C' PRON ce
est VERB être ind_pre
donc ADV donc
un DET un
isomorphisme NOUN isomorphisme
non-géométrique ADJ non-géométriqu
. PUNCT .
a. VERB avoir ind_pre
Ceci PRON ceci
est VERB être ind_pre
aussi ADV aussi
un DET un
exemple NOUN exemple
où PRON où
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
ne ADV ne
est VERB être ind_pre
pas ADV pas
isomorphe NOUN isomorphe
à ADP à
L NOUN l
( PUNCT (
E NOUN e
0 NUM 0
, PUNCT ,
E NOUN e
) PUNCT )
Si SCONJ si
( PUNCT (
ei NOUN ei
) PUNCT )
iI PRON ii
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
définir VERB définir inf
la DET le
famille NOUN famille
duale ADJ dual
associée VERB associer par_pas
( PUNCT (
e?i NOUN e?i
) PUNCT )
iI PRON ii
( PUNCT (
E NOUN e
? PUNCT ?
) PUNCT )
I NOUN i
par ADP par
: PUNCT :
Cette DET ce
notation NOUN notation
est VERB être ind_pre
très ADV très
dangereuse ADJ dangereux
! PUNCT !
En ADP en
effet NOUN effet
, PUNCT ,
si SCONJ si
l' PRON l'
on PRON on
change VERB changer ind_pre
un PRON un
des ADP de
vecteurs NOUN vecteur
ei PRON ei
, PUNCT ,
alors ADV alors
on PRON on
change VERB changer ind_pre
tous ADJ tout
les DET le
vecteurs NOUN vecteur
e?i CCONJ e?i
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
soit VERB être sub_pre
( PUNCT (
ei X ei
) PUNCT )
iI PRON ii
une DET un
base NOUN base
de ADP de
E. PROPN E.
La DET le
famille NOUN famille
duale ADJ dual
associée VERB associer par_pas
est VERB être ind_pre
une DET un
partie NOUN partie
libre ADJ libre
Démonstration NOUN démonstration
Soit VERB être sub_pre
( PUNCT (
i1 NOUN i1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ip X ip
) PUNCT )
une DET un
sous-famille NOUN sous-famille
quelconque ADJ quelconque
finie VERB finir par_pas
de ADP de
I ADJ i
d' ADP de
éléments NOUN élément
distincts ADJ distinct
deux-à-deux ADJ deux-à-deux
et CCONJ et
soit VERB être sub_pre
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
p NOUN p
) PUNCT )
Kp NOUN kp
Soit VERB être sub_pre
j PRON j
1 NUM 1
, PUNCT ,
p. NOUN p.
Par ADP par
définition NOUN définition
de ADP de
la DET le
famille NOUN famille
duale ADJ dual
, PUNCT ,
on PRON on
a VERB avoir ind_pre
donc ADV donc
1 NUM 1
p NOUN p
0 NUM 0
, PUNCT ,
ce PRON ce
qui PRON qui
montre VERB montrer ind_pre
que SCONJ que
la DET le
famille NOUN famille
duale ADJ dual
( PUNCT (
e?i CCONJ e?i
) PUNCT )
iI PRON ii
est VERB être ind_pre
libre ADJ libre
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
si SCONJ si
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en ADP en
) PUNCT )
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
la DET le
famille NOUN famille
duale ADJ dual
associée VERB associer par_pas
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
? PUNCT ?
( PUNCT (
dite VERB dire par_pas
base NOUN base
duale ADJ dual
) PUNCT )
. PUNCT .
Démonstration NOUN démonstration
D' ADP de
après ADP après
la DET le
propriété NOUN propriété
précédente ADJ précédent
, PUNCT ,
c' PRON ce
est VERB être ind_pre
une DET un
famille NOUN famille
libre ADJ libre
à ADP à
n AUX n
éléments NOUN élément
. PUNCT .
Or CCONJ or
dim ADP dim
E PROPN E
? PUNCT ?
dim ADP dim
E NOUN e
n NOUN n
( PUNCT (
propriété NOUN propriété
1.39 NUM 1.39
, PUNCT ,
page NOUN page
ci PRON ci
- NOUN -
contre NOUN contre
) PUNCT )
donc ADV donc
c' PRON ce
est VERB être ind_pre
bien ADV bien
une DET un
base NOUN base
de ADP de
E NOUN e
? PUNCT ?
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
soit VERB être sub_pre
( PUNCT (
ei X ei
) PUNCT )
iI PRON ii
une DET un
base NOUN base
de ADP de
E. PROPN E.
Si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
infinie ADJ infini
, PUNCT ,
alors ADV alors
la DET le
famille NOUN famille
duale ADJ dual
associée VERB associer par_pas
ne ADV ne
est VERB être ind_pre
jamais ADV jamais
génératrice NOUN génératrice
. PUNCT .
Démonstration NOUN démonstration
Considérons VERB considérer imper
la DET le
forme NOUN forme
linéaire ADJ linéaire
f NUM f
E NOUN e
? PUNCT ?
définie VERB définir par_pas
par ADP par
f PRON f
( PUNCT (
ei NUM ei
) PUNCT )
1 PRON 1
pour ADP pour
tout DET tout
i VERB i
I. NOUN i.
Si SCONJ si
la DET le
famille NOUN famille
duale ADJ dual
associée VERB associer par_pas
à ADP à
( PUNCT (
ei NUM ei
) PUNCT )
iI PRON ii
était VERB être impar
génératrice NOUN génératrice
, PUNCT ,
il PRON il
existerait VERB exister con_pre
une DET un
sous-famille NOUN sous-famille
( PUNCT (
i1 NOUN i1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ip NOUN ip
) PUNCT )
finie VERB finir par_pas
de ADP de
I ADJ i
tel ADJ tel
que SCONJ que
f CCONJ f
Vect(fi1 PROPN Vect(fi1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
fip PROPN fip
) PUNCT )
. PUNCT .
En ADP en
considérant VERB considérer par_pre
j PRON j
I ADJ i
tel ADJ tel
que SCONJ que
j NOUN j
i1 NOUN i1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ip PROPN ip
( PUNCT (
possible ADJ possible
car CCONJ car
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
infinie ADJ infini
donc ADV donc
I ADJ i
est VERB être ind_pre
infini ADV infini
) PUNCT )
, PUNCT ,
on PRON on
a VERB avoir ind_pre
Proposition NOUN proposition
1.11 NUM 1.11
Base NOUN base else
ante ADJ ant
- ADJ -
duale ADJ dual
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n NOUN n
, PUNCT ,
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
n NOUN n
) PUNCT )
une DET un
base NOUN base
de ADP de
E NOUN e
? PUNCT ?
, PUNCT ,
alors ADV alors
il PRON il
existe VERB exister ind_pre
une DET un
unique ADJ unique
Cette DET ce
base NOUN base
est VERB être ind_pre
appelée VERB appeler par_pas
base NOUN base
ante ADJ ant
- PROPN -
duale ADJ dual
de ADP de
la DET le
base NOUN base
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
n NOUN n
) PUNCT )
. PUNCT .
Démonstration NOUN démonstration
Soit VERB être sub_pre
l' DET le
application NOUN application
définie VERB définir par_pas
par ADP par
: PUNCT :
Cette DET ce
application NOUN application
a VERB avoir ind_pre
les DET le
propriétés NOUN propriété
suivantes ADJ suivant
: PUNCT :
est VERB être ind_pre
linéaire ADJ linéaire
. PUNCT .
est VERB être ind_pre
injective NOUN injective
. PUNCT .
Donc ADV donc
, PUNCT ,
comme ADP comme
E NOUN e
et CCONJ et
Kn PROPN Kn
ont VERB avoir ind_pre
même ADV même
dimension NOUN dimension
n ADJ n
, PUNCT ,
est VERB être ind_pre
un DET un
isomorphisme NOUN isomorphisme
. PUNCT .
Considérons VERB considérer imper
( PUNCT (
b1 PROPN b1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
bn PROPN bn
) PUNCT )
la DET le
base NOUN base
canonique ADJ canonique
de ADP de
Kn PROPN Kn
. PUNCT .
Comme ADP comme
un DET un
isomorphisme NOUN isomorphisme
envoie VERB envoyer ind_pre
une DET un
base NOUN base
sur ADP sur
une DET un
base NOUN base
, PUNCT ,
si SCONJ si
l' PRON l'
on PRON on
pose VERB poser ind_pre
: PUNCT :
la DET le
famille NOUN famille
obtenue VERB obtenir par_pas
convient VERB convenir ind_pre
, PUNCT ,
et CCONJ et
c' PRON ce
est VERB être ind_pre
clairement ADV clairement
la DET le
seule ADJ seul
. PUNCT .
Comment ADV comment
démontrer VERB démontrer inf
qu' SCONJ que
une DET un
famille NOUN famille
de ADP de
formes NOUN forme
linéaires ADJ linéaire
est VERB être ind_pre
une DET un
base NOUN base
? PUNCT ?
En ADP en
utilisant VERB utiliser par_pre
la DET le
base NOUN base
ante ADJ ant
- PROPN -
duale ADJ dual
( PUNCT (
si SCONJ si
l' PRON l'
on PRON on
est VERB être ind_pre
capable ADJ capable
de ADP de
la PRON le
trouver VERB trouver inf
) PUNCT )
. PUNCT .
On PRON on
veut VERB vouloir ind_pre
étudier VERB étudier inf
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
n NOUN n
) PUNCT )
une DET un
famille NOUN famille
de ADP de
formes NOUN forme
linéaires ADJ linéaire
de ADP de
E NOUN e
? PUNCT ?
. PUNCT .
Si SCONJ si
on PRON on
considère VERB considérer ind_pre
la DET le
base NOUN base
ante ADJ ant
- ADJ -
duale ADJ dual
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en ADP en
) PUNCT )
, PUNCT ,
( PUNCT (
ou CCONJ ou
la DET le
famille NOUN famille
que SCONJ que
l' PRON l'
on PRON on
imagine VERB imaginer ind_pre sub_pre
être VERB être inf
la DET le
base NOUN base
ante ADJ ant
- ADJ -
duale ADJ dual
) PUNCT )
, PUNCT ,
c' PRON ce
est VERB être ind_pre
alors ADV alors
facile ADJ facile
: PUNCT :
soit VERB être sub_pre
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
n NOUN n
) PUNCT )
Kn PROPN Kn
des ADP de
scalaires NOUN scalaire
tels ADJ tel
que SCONJ que
: PUNCT :
( PUNCT (
b NOUN b
) PUNCT )
Calculer VERB calculer inf
sa DET son
base NOUN base
ante ADJ ant
- ADJ -
duale ADJ dual
. PUNCT .
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Calculer VERB calculer inf
dim ADP dim
E. PROPN E.
i. PUNCT i.
À ADP à
quelle DET quel
CNS PROPN CNS
la DET le
famille NOUN famille
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
4 NUM 4
) PUNCT )
est-elle ADP est-elle
une DET un
base NOUN base
de ADP de
E NOUN e
? PUNCT ?
? PUNCT ?
ii CCONJ ii
. PUNCT .
Lorsque SCONJ lorsque
cette DET ce
condition NOUN condition
ne ADV ne
est VERB être ind_pre
pas ADV pas
vérifiée VERB vérifier par_pas
, PUNCT ,
exprimer VERB exprimer inf
4 NUM 4
en ADP en
fonction NOUN fonction
des ADP de
trois NUM trois
autres ADJ autre
. PUNCT .
iii CCONJ iii
. PUNCT .
En ADP en
déduire VERB déduire inf
une DET un
méthode NOUN méthode
de ADP de
calcul NOUN calcul
approché VERB approcher par_pas
d' ADP de
une DET un
intégrale ADJ intégral
. PUNCT .
iv X iv
. PUNCT .
Lorsque SCONJ lorsque
la DET le
fonction NOUN fonction
f PUNCT f
C NOUN c
( PUNCT (
a VERB avoir ind_pre
, PUNCT ,
b NOUN b
, PUNCT ,
R NOUN r
) PUNCT )
, PUNCT ,
évaluer VERB évaluer inf
l' DET le
erreur NOUN erreur
de ADP de
méthode NOUN méthode
. PUNCT .
1.13.3 X 1.13.3
Trouver VERB trouver inf
les DET le
formes NOUN forme
linéaires ADJ linéaire
définies VERB définir par_pas
sur ADP sur
E NOUN e
C NOUN c
0 NUM 0
( PUNCT (
R NOUN r
, PUNCT ,
R NOUN r
) PUNCT )
telles ADJ tel
que SCONJ que
: PUNCT :
1.13.4 X 1.13.4
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
soit VERB être sub_pre
E1 ADJ e1
, PUNCT ,
E2 NOUN e2
, PUNCT ,
... PUNCT ...
, PUNCT ,
Ep NOUN ep
des ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
donner VERB donner inf
une DET un
CNS PROPN CNS
pour ADP pour
que SCONJ que
: PUNCT :
Hyperplans PROPN Hyperplans
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
hyperplan NOUN hyperplan
de ADP de
E NOUN e
, PUNCT ,
tout ADV tout
sous-espace ADV sous-espace
vectoriel NOUN vectoriel
H NOUN heure
tel ADJ tel
que SCONJ que
: PUNCT :
L' DET le
écriture NOUN écriture
: PUNCT :
s' PRON se
appelle VERB appeler ind_pre
équation NOUN équation
de ADP de
l' DET le
hyperplan NOUN hyperplan
H. PROPN H.
Il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
pas ADV pas
unicité ADJ unicité
de ADP de
l' DET le
équation NOUN équation
, PUNCT ,
car CCONJ car
, PUNCT ,
si SCONJ si
convient NOUN convient
, PUNCT ,
alors ADV alors
, PUNCT ,
quelque ADV quelque
soit VERB être sub_pre
K NOUN k
, PUNCT ,
. PUNCT .
convient ADV convient
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
F NOUN f
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
on PRON on
dit VERB dire ind_pre
que SCONJ que
F NOUN f
est VERB être ind_pre
de ADP de
codimension NOUN codimension
finie ADJ fini
, PUNCT ,
si SCONJ si
F NOUN f
possède VERB posséder ind_pre
un DET un
supplémentaire ADJ supplémentaire
de ADP de
dimension NOUN dimension
finie ADJ fini
. PUNCT .
La DET le
dimension NOUN dimension
commune ADJ commun
de ADP de
tous ADJ tout
les DET le
supplémentaires NOUN supplémentaire
de ADP de
F NOUN f
est VERB être ind_pre
appelée VERB appeler par_pas
codimension NOUN codimension
de ADP de
F NOUN f
et CCONJ et
notée VERB noter par_pas
( PUNCT (
si SCONJ si
E NOUN e
F NOUN f
G NOUN gramme
) PUNCT )
: PUNCT :
codim ADJ codim
F AUX f
dim ADP dim
G NOUN gramme
Si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
tous ADJ tout
les DET le
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
sont VERB être ind_pre
de ADP de
codimension NOUN codimension
finie ADJ fini
et CCONJ et
si SCONJ si
F NOUN f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
: PUNCT :
codim ADJ codim
F AUX f
dim ADP dim
E NOUN e
dim ADP dim
F NOUN f
Cette DET ce
notion NOUN notion
ne ADV ne
est VERB être ind_pre
donc ADV donc
pas ADV pas
intéressante ADJ intéressant
en ADP en
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
elle PRON lui
nous PRON nous
sera VERB être fut_sim
surtout ADV surtout
utile ADJ utile
en ADP en
dimension NOUN dimension
1 NUM 1
. PUNCT .
Dans ADP dans
K3 NOUN k3
, PUNCT ,
tout ADJ tout
plan NOUN plan
est VERB être ind_pre
un DET un
hyperplan NOUN hyperplan
, PUNCT ,
dans ADP dans
K2 NOUN k2
, PUNCT ,
ce PRON ce
sont VERB être ind_pre
les DET le
droites NOUN droite
( PUNCT (
ces DET ce
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
sont VERB être ind_pre
usuellement ADV usuellement
décrits VERB décrire par_pas
par ADP par
une DET un
équation NOUN équation
) PUNCT )
. PUNCT .
2 NUM 2
. PUNCT .
Dans ADP dans
E NOUN e
C NOUN c
0 NUM 0
( PUNCT (
R NOUN r
, PUNCT ,
R NOUN r
) PUNCT )
, PUNCT ,
si SCONJ si
a VERB avoir ind_pre
R NOUN r
, PUNCT ,
le DET le
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
défini VERB définir par_pas
par ADP par
: PUNCT :
est VERB être ind_pre
un DET un
hyperplan NOUN hyperplan
d' ADP de
équation NOUN équation
: PUNCT :
f NOUN f
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
0 NUM 0
. PUNCT .
Fa CCONJ fa
est VERB être ind_pre
de ADP de
plus ADV plus
de ADP de
codimension NOUN codimension
1 NUM 1
, PUNCT ,
car CCONJ car
: PUNCT :
de ADP de
dimension NOUN dimension
1 NUM 1
en ADP en
effet NOUN effet
: PUNCT :
et CCONJ et
cette DET ce
écriture NOUN écriture
est VERB être ind_pre
clairement ADV clairement
unique ADJ unique
. PUNCT .
Proposition NOUN proposition
1.12 NUM 1.12
Caractérisation NOUN caractérisation
des ADP de
hyperplans NOUN hyperplan
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
H NOUN heure
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
: PUNCT :
H NOUN heure
hyperplan NOUN hyperplan
de ADP de
E NOUN e
codim NOUN codim
H NOUN heure
1 NUM 1
Démonstration NOUN démonstration
( PUNCT (
) PUNCT )
Soit VERB être sub_pre
( PUNCT (
x NOUN x
) PUNCT )
0 NUM 0
une DET un
équation NOUN équation
de ADP de
H NOUN heure
, PUNCT ,
comme SCONJ comme
est VERB être ind_pre
non ADV non
nulle ADJ nul
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
trouver VERB trouver inf
un DET un
vecteur NOUN vecteur
a VERB avoir ind_pre
E PROPN E
, PUNCT ,
tel ADJ tel
( PUNCT (
) PUNCT )
Si SCONJ si
E NOUN e
H NOUN heure
K.a PROPN K.a
, PUNCT ,
a VERB avoir ind_pre
E NOUN e
0E NUM 0E
, PUNCT ,
alors ADV alors
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
prendre VERB prendre inf
comme ADP comme
forme NOUN forme
linéaire ADJ linéaire
associée VERB associer par_pas
à ADP à
H NOUN heure
: PUNCT :
Si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
les DET le
hyperplans NOUN hyperplan
de ADP de
E NOUN e
sont VERB être ind_pre
les DET le
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
dimension NOUN dimension
dim ADP dim
E1 PROPN E1
. PUNCT .
1 NUM 1
. PUNCT .
Dans ADP dans
R2 PROPN R2
, PUNCT ,
une DET un
équation NOUN équation
de ADP de
la DET le
droite NOUN droite
( PUNCT (
hyperplan NOUN hyperplan
) PUNCT )
engendrée VERB engendrer par_pas
par ADP par
( PUNCT (
1 NUM 1
, PUNCT ,
2 NUM 2
) PUNCT )
est VERB être ind_pre
, PUNCT ,
par ADP par
exemple NOUN exemple
: PUNCT :
2 NUM 2
. PUNCT .
Dans ADP dans
R3 PROPN R3
, PUNCT ,
une DET un
équation NOUN équation
du ADP de
plan NOUN plan
( PUNCT (
hyperplan NOUN hyperplan
) PUNCT )
engendré VERB engendrer par_pas
par ADP par
( PUNCT (
1 NUM 1
, PUNCT ,
1 NUM 1
, PUNCT ,
0 NUM 0
) PUNCT )
et CCONJ et
( PUNCT (
1 NUM 1
, PUNCT ,
0 NUM 0
, PUNCT ,
2 NUM 2
) PUNCT )
est VERB être ind_pre
, PUNCT ,
par ADP par
exemple NOUN exemple
: PUNCT :
3 NUM 3
. PUNCT .
Dans ADP dans
C NOUN c
0 NUM 0
( PUNCT (
R NOUN r
, PUNCT ,
R NOUN r
) PUNCT )
, PUNCT ,
un DET un
supplémentaire ADJ supplémentaire
de ADP de
la DET le
droite NOUN droite
engendrée VERB engendrer par_pas
par ADP par
x ADP x
7 NUM 7
x NOUN x
, PUNCT ,
pourrait VERB pouvoir con_pre
être VERB être inf
donné VERB donner par_pas
par ADP par
une DET un
équation NOUN équation
du ADP de
type NOUN type
: PUNCT :
Théorème NOUN théorème
1.8 NUM 1.8
Faisceaux NOUN faisceau
d' ADP de
hyperplans NOUN hyperplan
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
soit VERB être sub_pre
n NUM ne
N ADJ n
, PUNCT ,
soit VERB être sub_pre
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
n NOUN n
) PUNCT )
E NOUN e
? PUNCT ?
n NOUN n
, PUNCT ,
alors ADV alors
Démonstration NOUN démonstration
( PUNCT (
) PUNCT )
Immédiat PROPN Immédiat
. PUNCT .
( PUNCT (
) PUNCT )
Par ADP par
récurrence NOUN récurrence
sur ADP sur
n. NOUN n.
( PUNCT (
Initialisation NOUN initialisation
) PUNCT )
: PUNCT :
si SCONJ si
n AUX n
1 NUM 1
et CCONJ et
Ker PROPN Ker
( PUNCT (
) PUNCT )
Ker PROPN Ker
( PUNCT (
) PUNCT )
, PUNCT ,
si SCONJ si
est VERB être ind_pre
nulle ADJ nul
, PUNCT ,
l' PRON l'
est VERB être ind_pre
aussi ADV aussi
. PUNCT .
Si SCONJ si
est VERB être ind_pre
non ADV non
nulle ADJ nul
, PUNCT ,
alors ADV alors
, PUNCT ,
il PRON il
existe VERB exister ind_pre
un DET un
vecteur NOUN vecteur
a VERB avoir ind_pre
E PROPN E
, PUNCT ,
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
6 NUM 6
0 NUM 0
. PUNCT .
Alors ADV alors
: PUNCT :
Il PRON il
suffit VERB suffire ind_pre
de ADP de
le PRON le
vérifier VERB vérifier inf
pour ADP pour
x ADP x
h NOUN heure
.a NOUN .a
, PUNCT ,
où PRON où
h NOUN heure
Ker PROPN Ker
( PUNCT (
) PUNCT )
et CCONJ et
K. PROPN K.
( PUNCT (
Hérédité NOUN hérédité
) PUNCT )
: PUNCT :
supposons VERB supposer ind_pre
le DET le
résultat NOUN résultat
vrai ADJ vrai
au ADP à
rang NOUN rang
p NOUN p
1 NUM 1
, PUNCT ,
soit VERB être sub_pre
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
p1 NOUN p1
) PUNCT )
des ADP de
formes NOUN forme
linéaires ADJ linéaire
de ADP de
E NOUN e
et CCONJ et
E NOUN e
? PUNCT ?
telle ADJ tel
que SCONJ que
: PUNCT :
Si SCONJ si
p1 NOUN p1
est VERB être ind_pre
nulle ADJ nul
, PUNCT ,
c' PRON ce
est VERB être ind_pre
terminé VERB terminer par_pas
. PUNCT .
Supposons VERB supposer ind_pre
donc ADV donc
p1 NOUN p1
non ADV non
nulle ADJ nul
et CCONJ et
posons VERB poser ind_pre
H X H
Ker(p1 PROPN Ker(p1
) PUNCT )
. PUNCT .
On PRON on
a VERB avoir ind_pre
on PRON on
peut VERB pouvoir ind_pre
donc ADV donc
appliquer VERB appliquer inf
l' DET le
hypothèse NOUN hypothèse
de ADP de
récurrence NOUN récurrence
qui PRON qui
nous PRON nous
donne VERB donner ind_pre
: PUNCT :
On PRON on
a VERB avoir ind_pre
alors ADV alors
: PUNCT :
donc ADV donc
, PUNCT ,
d' ADP de
après ADP après
l' DET le
initialisation NOUN initialisation
: PUNCT :
Dans ADP dans
R3 NOUN r3
, PUNCT ,
les DET le
hyperplans NOUN hyperplan
sont VERB être ind_pre
des DET un
plans NOUN plan
et CCONJ et
on PRON on
a VERB avoir ind_pre
la DET le
situation NOUN situation
géométrique ADJ géométrique
de ADP de
la DET le
figure NOUN figure
1.7 NUM 1.7
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
page NOUN page
. PUNCT .
Notons VERB noter imper
H1 NOUN h1
Ker(1 PROPN Ker(1
) PUNCT )
, PUNCT ,
H2 NOUN h2
Ker(2 PROPN Ker(2
) PUNCT )
, PUNCT ,
si SCONJ si
1 NUM 1
et CCONJ et
2 NUM 2
sont VERB être ind_pre
indépendantes VERB indépendanter
, PUNCT ,
les DET le
deux NUM deux
plans NOUN plan
se PRON se
coupent VERB couper ind_pre
suivant VERB suivre par_pre
la DET le
droite NOUN droite
D. NOUN d.
Soit VERB être sub_pre
K NOUN k
un DET un
plan NOUN plan
contenant VERB contenir par_pre
D NOUN d
( PUNCT (
comme ADP comme
sur ADP sur
le DET le
dessin NOUN dessin
) PUNCT )
, PUNCT ,
où PRON où
K X K
Ker PROPN Ker
( PUNCT (
) PUNCT )
, PUNCT ,
le DET le
théorème NOUN théorème
nous PRON nous
assure VERB assurer ind_pre
alors ADV alors
Le DET le
plan NOUN plan
K NOUN k
a VERB avoir ind_pre
donc ADV donc
pour ADP pour
équation NOUN équation
: PUNCT :
Cette DET ce
équation NOUN équation
est VERB être ind_pre
définie VERB définir par_pas
à ADP à
un DET un
coefficient NOUN coefficient
de ADP de
proportionnalité NOUN proportionnalité
près ADV près
, PUNCT ,
donc ADV donc
Figure NOUN figure else
1.7 NUM 1.7
Hyperplans PROPN Hyperplans
de ADP de
R3 NOUN r3
Le DET le
résultat NOUN résultat
de ADP de
cette DET ce
proposition NOUN proposition
est VERB être ind_pre
particulièrement ADV particulièrement
intéressant ADJ intéressant
en ADP en
géométrie NOUN géométrie
affine ADP affine
. PUNCT .
Ainsi ADV ainsi
si SCONJ si
H1 NOUN h1
, PUNCT ,
... PUNCT ...
, PUNCT ,
Hp PROPN Hp
sont VERB être ind_pre
des DET un
hyperplans NOUN hyperplan
affines ADJ affine
( PUNCT (
espaces NOUN espace
affines ADJ affine
ayant VERB avoir par_pre
pour ADP pour
directions NOUN direction
des ADP de
hyperplans NOUN hyperplan
vectoriels NOUN vectoriel
) PUNCT )
d' ADP de
intersection NOUN intersection
non ADV non
vide ADJ vide
( PUNCT (
soit VERB être sub_pre
A ADP à
un DET un
point NOUN point
de ADP de
l' DET le
intersection NOUN intersection
) PUNCT )
, PUNCT ,
d' ADP de
équations NOUN équation
: PUNCT :
alors ADV alors
, PUNCT ,
pour ADP pour
tout DET tout
hyperplan NOUN hyperplan
H NOUN heure
d' ADP de
équation NOUN équation
( PUNCT (
AM NOUN am
) PUNCT )
0 NUM 0
, PUNCT ,
contenant VERB contenir par_pre
cette DET ce
intersection NOUN intersection
, PUNCT ,
Soit VERB être sub_pre
V ADJ v
R3 PROPN R3
, PUNCT ,
l' DET le
espace NOUN espace
usuel ADJ usuel
muni NOUN muni
de ADP de
sa DET son
structure NOUN structure
affine ADP affine
euclidienne NOUN euclidienne
usuelle ADJ usuel
. PUNCT .
Soit VERB être sub_pre
D NOUN d
une DET un
droite NOUN droite
affine ADP affine
et CCONJ et
A ADP à
un DET un
point NOUN point
, PUNCT ,
cherchons VERB chercher ind_pre
les DET le
plans NOUN plan
tangents NOUN tangent
à ADP à
la DET le
sphère NOUN sphère
de ADP de
centre NOUN centre
A NOUN a
de ADP de
rayon NOUN rayon
1 NUM 1
, PUNCT ,
contenant VERB contenir par_pre
D. NOUN d.
Par ADP par
exemple NOUN exemple
: PUNCT :
Soit VERB être sub_pre
D NOUN d
la DET le
droite NOUN droite
définie VERB définir par_pas
par ADP par
: PUNCT :
4 NUM 4
x ADP x
y PRON y
z X z
0 NUM 0
, PUNCT ,
2 NUM 2
x NOUN x
5 NUM 5
y NOUN y
3 NUM 3
z NOUN z
4 NUM 4
0 NUM 0
. PUNCT .
Cherchons VERB chercher ind_pre
le DET le
plan NOUN plan
P NOUN p
contenant VERB contenir par_pre
D NOUN d
tel ADJ tel
que SCONJ que
P NOUN p
soit VERB être sub_pre
à ADP à
une DET un
distance NOUN distance
1 NUM 1
du ADP de
point NOUN point
( PUNCT (
1 NUM 1
, PUNCT ,
1 NUM 1
, PUNCT ,
1 NUM 1
) PUNCT )
. PUNCT .
On PRON on
va VERB aller
chercher VERB chercher fut_pro
le DET le
plan NOUN plan
demandé VERB demander par_pas
sous ADP sous
la DET le
forme NOUN forme
: PUNCT :
Pour ADP pour
trouver VERB trouver inf
, PUNCT ,
il PRON il
suffit VERB suffire ind_pre
d' ADP de
écrire VERB écrire inf
d((1 ADJ d((1
, PUNCT ,
1 NUM 1
, PUNCT ,
1 NUM 1
) PUNCT )
, PUNCT ,
P NOUN p
) PUNCT )
1 PRON 1
. PUNCT .
Théorème NOUN théorème
1.9 NUM 1.9
Mise NOUN mise else
en ADP en
équation NOUN équation
des ADP de
sous-espaces NOUN sous-espace
de ADP de
codimensions NOUN codimension
finies ADJ fini
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
soit VERB être sub_pre
E1 ADV e1
un DET un
sous-espace NOUN sous-espace
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
, PUNCT ,
pour ADP pour
p NOUN p
N ADJ n
, PUNCT ,
on PRON on
a VERB avoir ind_pre
Démonstration NOUN démonstration
( PUNCT (
) PUNCT )
Si SCONJ si
codim(E1 NOUN codim(e1
) PUNCT )
p NOUN p
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
, PUNCT ,
par ADP par
définition NOUN définition
trouver VERB trouver inf
un DET un
supplémentaire ADJ supplémentaire
F NOUN f
de ADP de
dimension NOUN dimension
p NOUN p
, PUNCT ,
et CCONJ et
une DET un
base NOUN base
de ADP de
F NOUN f
: PUNCT :
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
. PUNCT .
Construisons VERB construire ind_pre
alors ADV alors
, PUNCT ,
pour ADP pour
k PROPN k
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
la DET le
forme NOUN forme
linéaire ADJ linéaire
Alors ADV alors
, PUNCT ,
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
p NOUN p
) PUNCT )
sont VERB être ind_pre
indépendantes ADJ indépendant
et CCONJ et
( PUNCT (
) PUNCT )
Par ADP par
récurrence NOUN récurrence
sur ADP sur
p. NOUN p.
( PUNCT (
Initialisation NOUN initialisation
) PUNCT )
C' PRON ce
est VERB être ind_pre
la DET le
proposition NOUN proposition
caractérisant VERB caractériser par_pre
les DET le
hyperplans NOUN hyperplan
comme ADP comme
les DET le
espaces NOUN espace
de ADP de
codimension NOUN codimension
1 NUM 1
. PUNCT .
( PUNCT (
Hérédité NOUN hérédité
) PUNCT )
Supposons VERB supposer ind_pre
le DET le
résultat NOUN résultat
vrai ADJ vrai
au ADP à
rang NOUN rang
p NOUN p
et CCONJ et
prenons VERB prendre ind_pre
p DET p
1 NUM 1
formes NOUN forme
linéaires ADJ linéaire
indépendantes ADJ indépendant
, PUNCT ,
D' ADP de
après ADP après
l' DET le
hypothèse NOUN hypothèse
de ADP de
récurrence NOUN récurrence
, PUNCT ,
nous PRON nous
savons VERB savoir ind_pre
que SCONJ que
E2 PRON e2
est VERB être ind_pre
de ADP de
codimension NOUN codimension
p. ADV p.
Soit VERB être sub_pre
F NOUN f
un DET un
supplémentaire ADJ supplémentaire
de ADP de
E2 PROPN E2
dans ADP dans
E NOUN e
de ADP de
dimension NOUN dimension
p. VERB p.
On PRON on
peut VERB pouvoir ind_pre
donc ADV donc
trouver VERB trouver inf
un DET un
vecteur NOUN vecteur
a VERB avoir ind_pre
E2 PROPN E2
E1 PROPN E1
. PUNCT .
Il PRON il
reste VERB rester ind_pre
à ADP à
montrer VERB montrer inf
que SCONJ que
: PUNCT :
de ADP de
dimension NOUN dimension
p1 NOUN p1
donc ADV donc
, PUNCT ,
en ADP en
utilisant VERB utiliser par_pre
la DET le
première ADJ premier
question NOUN question
de ADP de
l' DET le
exercice NOUN exercice
1.4.2 NUM 1.4.2
, PUNCT ,
page NOUN page
32 NUM 32
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
, PUNCT ,
puisque SCONJ puisque
a VERB avoir ind_pre
E2 PROPN E2
C' PRON ce
est VERB être ind_pre
ainsi ADV ainsi
que SCONJ que
l' PRON l'
on PRON on
retrouve VERB retrouver ind_pre sub_pre
que SCONJ que
dans ADP dans
l' DET le
espace NOUN espace
, PUNCT ,
les DET le
droites NOUN droite
sont VERB être ind_pre
définies VERB définir par_pas
par ADP par
2 NUM 2
équations NOUN équation
. PUNCT .
Que PRON que
se PRON se
passe VERB passer ind_pre
-t PRON -t
-il PRON il
lorsque SCONJ lorsque
les DET le
formes NOUN forme
linéaires ADJ linéaire
( PUNCT (
et CCONJ et
donc ADV donc
les DET le
équations NOUN équation
) PUNCT )
ne ADV ne
sont VERB être ind_pre
pas ADV pas
indépendantes ADJ indépendant
? PUNCT ?
Il PRON il
est VERB être ind_pre
immédiat ADJ immédiat
que SCONJ que
: PUNCT :
En ADP en
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
cela PRON cela
permet VERB permettre ind_pre
de ADP de
calculer VERB calculer inf
des DET un
dimensions NOUN dimension
. PUNCT .
On PRON on
dit VERB dire ind_pre
souvent ADV souvent
que SCONJ que
: PUNCT :
la DET le
dimension NOUN dimension
de ADP de
l' DET le
espace NOUN espace
est VERB être ind_pre
le DET le
nombre NOUN nombre
de ADP de
degrés NOUN degré
de ADP de
liberté NOUN liberté
le DET le
nombre NOUN nombre
d' ADP de
équations NOUN équation
indépendantes ADJ indépendant
est VERB être ind_pre
le DET le
nombre NOUN nombre
de ADP de
contraintes NOUN contrainte
la DET le
dimension NOUN dimension
du ADP de
sous-espace NOUN sous-espace
vectoriel ADJ vectoriel
est VERB être ind_pre
donc ADV donc
égale ADJ égal
à ADP à
nombre NOUN nombre
de ADP de
degré NOUN degré
de ADP de
liberté NOUN liberté
nombre NOUN nombre
de ADP de
contraintes NOUN contrainte
. PUNCT .
Cette DET ce
relation NOUN relation
ne ADV ne
est VERB être ind_pre
valable ADJ valable
qu' ADV qu'
avec ADP avec
des DET un
contraintes NOUN contrainte
linéaires ADJ linéaire
! PUNCT !
Le DET le
théorème NOUN théorème
se PRON se
généralise VERB généraliser ind_pre
facilement ADV facilement
à ADP à
la DET le
situation NOUN situation
affine ADP affine
. PUNCT .
Cependant ADV cependant
, PUNCT ,
l' DET le
intersection NOUN intersection
d' ADP de
hyperplans NOUN hyperplan
affines ADJ affine
peut-être ADV peut-être
vide ADJ vide
, PUNCT ,
aussi ADV aussi
faut VERB falloir ind_pre
-il PRON il
, PUNCT ,
avant ADP avant
toutes DET tout
choses NOUN chose
, PUNCT ,
s' PRON se
assurer VERB assurer inf
qu' SCONJ que
elle PRON lui
ne ADV ne
l' PRON l'
est VERB être ind_pre
pas ADV pas
! PUNCT !
Puis ADV puis
, PUNCT ,
en ADP en
s' PRON se
appuyant VERB appuyer par_pre
sur ADP sur
un DET un
point NOUN point
trouvé VERB trouver par_pas
de ADP de
l' DET le
intersection NOUN intersection
, PUNCT ,
on PRON on
est VERB être ind_pre
ramené VERB ramener par_pas pas_cop
au ADP à
cas NOUN cas
vectoriel ADJ vectoriel
. PUNCT .
Proposition NOUN proposition
1.13 NUM 1.13
Soit VERB être sub_pre
V ADJ v
un DET un
espace NOUN espace
affine ADJ affine
de ADP de
direction NOUN direction
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E. PROPN E.
Si SCONJ si
( PUNCT (
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
p NOUN p
) PUNCT )
sont VERB être ind_pre
des DET un
formes NOUN forme
linéaires ADJ linéaire
de ADP de
E NOUN e
indépendantes ADJ indépendant
, PUNCT ,
et CCONJ et
si SCONJ si
Hk PROPN Hk
est VERB être ind_pre
un DET un
hyperplan NOUN hyperplan
affine ADP affine
de DET de
direction NOUN direction
Ker PROPN Ker
k VERB k
pour ADP pour
tout ADV tout
k NOUN k
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
p NOUN p
, PUNCT ,
alors ADV alors
: PUNCT :
Démonstration NOUN démonstration
Laissé VERB laisser par_pas
en ADP en
exercice NOUN exercice
. PUNCT .
1.14.1 X 1.14.1
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
soit VERB être sub_pre
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xp NOUN xp
) PUNCT )
des ADP de
vecteurs NOUN vecteur
de ADP de
E. PROPN E.
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
( PUNCT (
b NOUN b
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
C NOUN c
0 NUM 0
( PUNCT (
R NOUN r
, PUNCT ,
R NOUN r
) PUNCT )
est VERB être ind_pre
isomorphe NOUN isomorphe
à ADP à
un DET un
hyperplan NOUN hyperplan
de ADP de
C NOUN c
1 NUM 1
( PUNCT (
R NOUN r
, PUNCT ,
R NOUN r
) PUNCT )
. PUNCT .
1.14.3 ADJ 1.14.3
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
soit VERB être sub_pre
V ADJ v
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
? PUNCT ?
. PUNCT .
On PRON on
dit VERB dire ind_pre
que SCONJ que
V ADJ v
sépare VERB séparer ind_pre
les DET le
vecteurs NOUN vecteur
, PUNCT ,
si SCONJ si
Démontrer VERB démontrer inf
que SCONJ que
V NOUN v
sépare VERB séparer ind_pre
les DET le
vecteurs NOUN vecteur
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
V NOUN v
E NOUN e
? PUNCT ?
. PUNCT .
1.14.4 NUM 1.14.4
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
. PUNCT .
Pour ADP pour
A VERB avoir ind_pre
P(E NOUN p(e
) PUNCT )
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
orthogonal ADJ orthogonal
( PUNCT (
direct ADJ direct
) PUNCT )
de ADP de
A NOUN a
et CCONJ et
on PRON on
note VERB noter ind_pre
: PUNCT :
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
( PUNCT (
a X avoir
) PUNCT )
A VERB avoir ind_pre
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
? PUNCT ?
. PUNCT .
Dans ADP dans
la DET le
suite NOUN suite
A NOUN a
et CCONJ et
B NOUN b
sont VERB être ind_pre
des ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E. PROPN E.
( PUNCT (
e NOUN e
) PUNCT )
Si SCONJ si
E NOUN e
A NOUN a
B NOUN b
, PUNCT ,
alors ADV alors
A NOUN a
est VERB être ind_pre
isomorphe NOUN isomorphe
à ADP à
B NOUN b
? PUNCT ?
. PUNCT .
( PUNCT (
f NOUN f
) PUNCT )
Si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
alors ADV alors
dim ADP dim
A ADP à
codim NOUN codim
A. PROPN A.
1.14.5 ADP 1.14.5
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
et CCONJ et
B NOUN b
P(E PRON p(e
? PUNCT ?
) PUNCT )
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
orthogonal ADJ orthogonal
( PUNCT (
indirect NOUN indirect
) PUNCT )
de ADP de
B NOUN b
et CCONJ et
on PRON on
note VERB noter ind_pre
: PUNCT :
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
B NOUN b
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E. PROPN E.
Dans ADP dans
la DET le
suite NOUN suite
, PUNCT ,
A X A
et CCONJ et
B NOUN b
sont VERB être ind_pre
des ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
E NOUN e
? PUNCT ?
. PUNCT .
( PUNCT (
e NOUN e
) PUNCT )
Si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
alors ADV alors
dim ADP dim
B NOUN b
codim ADJ codim
B NOUN b
( PUNCT (
f NOUN f
) PUNCT )
En ADP en
déduire VERB déduire inf
que SCONJ que
l' DET le
inclusion NOUN inclusion
de ADP de
la DET le
question NOUN question
( PUNCT (
d NOUN d
) PUNCT )
est VERB être ind_pre
une DET un
inégalité NOUN inégalité
en ADP en
dimension NOUN dimension
finie VERB finir par_pas
. PUNCT .
( PUNCT (
g NOUN gramme
) PUNCT )
Donner ADP donner
un DET un
contre-exemple NOUN contre-exemple
à ADP à
l' DET le
égalité NOUN égalité
dans ADP dans
la DET le
question NOUN question
( PUNCT (
d NOUN d
) PUNCT )
lorsque SCONJ lorsque
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
infinie ADJ infini
. PUNCT .
( PUNCT (
h NOUN heure
) PUNCT )
Si SCONJ si
A VERB avoir ind_pre
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
, PUNCT ,
comparer VERB comparer inf
: PUNCT :
( PUNCT (
i NOUN i
) PUNCT )
Si SCONJ si
B NOUN b
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
? PUNCT ?
, PUNCT ,
comparer VERB comparer inf
: PUNCT :
1.14.6 NOUN 1.14.6
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
. PUNCT .
On PRON on
définit VERB définir ind_pre
l' DET le
application NOUN application
transposée VERB transposer par_pas
de ADP de
u X u
et CCONJ et
on PRON on
note VERB noter ind_pre
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
t PROPN t
( PUNCT (
u X u
v NOUN v
) PUNCT )
t X t
u X u
t X t
v. NOUN v.
( PUNCT (
b NOUN b
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
( PUNCT (
c NOUN c
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
Applications NOUN application
Systèmes NOUN système
linéaires ADJ linéaire
Ce DET ce
paragraphe NOUN paragraphe
, PUNCT ,
très ADV très
simple ADJ simple
, PUNCT ,
est VERB être ind_pre
fondamental ADJ fondamental
! PUNCT !
Nous PRON nous
nous PRON nous
en PRON en
servirons VERB servir fut_sim
très ADV très
souvent ADV souvent
! PUNCT !
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
u DET u
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
e0 NOUN e0
E NOUN e
0 NUM 0
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
système NOUN système
linéaire ADJ linéaire
l' DET le
équation NOUN équation
d' ADP de
inconnue NOUN inconnue
x ADP x
E NOUN e
: PUNCT :
L' DET le
ensemble NOUN ensemble
: PUNCT :
est VERB être ind_pre
appelé VERB appeler par_pas
ensemble NOUN ensemble
des DET un
solutions NOUN solution
de ADP de
( PUNCT (
S NOUN s
) PUNCT )
. PUNCT .
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
u DET u
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
e0 NOUN e0
E NOUN e
0 NUM 0
. PUNCT .
Une DET un
condition NOUN condition
nécessaire ADJ nécessaire
et CCONJ et
suffisante ADJ suffisant
pour ADP pour
que SCONJ que
Sol(S PROPN Sol(S
) PUNCT )
6 NUM 6
, PUNCT ,
appelée VERB appeler par_pas
condition NOUN condition
de ADP de
compatibilité NOUN compatibilité
de ADP de
( PUNCT (
S NOUN s
) PUNCT )
est VERB être ind_pre
: PUNCT :
Démonstration NOUN démonstration
Si SCONJ si
Sol(S PROPN Sol(S
) PUNCT )
6 NUM 6
, PUNCT ,
il PRON il
existe VERB exister ind_pre
x NUM x
E NOUN e
tel ADJ tel
que SCONJ que
u(x PROPN u(x
) PUNCT )
e0 PROPN e0
, PUNCT ,
en ADP en
particulier ADJ particulier
e0 NOUN e0
Im X Im
u. X u.
Si SCONJ si
e0 NOUN e0
Im X Im
u NOUN u
, PUNCT ,
il PRON il
existe VERB exister ind_pre
x NUM x
E NOUN e
tel ADJ tel
que SCONJ que
e0 NOUN e0
u(x PRON u(x
) PUNCT )
, PUNCT ,
donc ADV donc
Sol(S PROPN Sol(S
) PUNCT )
6 NUM 6
. PUNCT .
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
u DET u
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
e0 NOUN e0
E NOUN e
0 NUM 0
. PUNCT .
Si SCONJ si
e0 NOUN e0
0E0 NUM 0E0
, PUNCT ,
le DET le
système NOUN système
est VERB être ind_pre
dit VERB dire par_pas ind_pre
homogène ADJ homogène
. PUNCT .
Dans ADP dans
ce DET ce
cas NOUN cas
, PUNCT ,
Sol(S PROPN Sol(S
) PUNCT )
Ker(u PROPN Ker(u
) PUNCT )
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
En ADP en
particulier ADJ particulier
, PUNCT ,
Sol(S PROPN Sol(S
) PUNCT )
6 NUM 6
. PUNCT .
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
u DET u
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
e0 NOUN e0
E NOUN e
0 NUM 0
. PUNCT .
Si SCONJ si
e0 NOUN e0
6 NUM 6
0E0 NUM 0E0
, PUNCT ,
le DET le
système NOUN système
: PUNCT :
est VERB être ind_pre
dit VERB dire par_pas ind_pre
système NOUN système
homogène ADJ homogène
associé VERB associer par_pas
de ADP de
( PUNCT (
S NOUN s
) PUNCT )
. PUNCT .
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
u DET u
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
e0 NOUN e0
E NOUN e
0 NUM 0
. PUNCT .
Si SCONJ si
x0 NOUN x0
Sol(S PROPN Sol(S
) PUNCT )
existe VERB exister ind_pre
alors ADV alors
: PUNCT :
Sol(S PROPN Sol(S
) PUNCT )
est VERB être ind_pre
un DET un
espace NOUN espace
affine ADJ affine
de ADP de
direction NOUN direction
Ker(u PROPN Ker(u
) PUNCT )
. PUNCT .
Démonstration NOUN démonstration
Soit VERB être sub_pre
x0 NOUN x0
Sol(S PROPN Sol(S
) PUNCT )
. PUNCT .
Par ADP par
double ADJ double
inclusion NOUN inclusion
, PUNCT ,
Sol(S PROPN Sol(S
) PUNCT )
x0 NOUN x0
Ker(u PROPN Ker(u
) PUNCT )
. PUNCT .
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
u DET u
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
e0 NOUN e0
E NOUN e
0 NUM 0
. PUNCT .
Si SCONJ si
e0 NOUN e0
s' PRON se
écrit VERB écrire par_pas ind_pre
comme ADP comme
une DET un
somme NOUN somme
: PUNCT :
Si SCONJ si
pour ADP pour
tout ADJ tout
k NOUN k
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
xk PRON xk
est VERB être ind_pre
une DET un
solution NOUN solution
du ADP de
système NOUN système
linéaire ADJ linéaire
: PUNCT :
alors ADV alors
une DET un
solution NOUN solution
de ADP de
( PUNCT (
S NOUN s
) PUNCT )
est VERB être ind_pre
Démonstration NOUN démonstration
C' PRON ce
est VERB être ind_pre
immédiat VERB immédiat
par ADP par
linéarité PRON linéarité
de ADP de
u PROPN u
: PUNCT :
donc ADV donc
x ADP x
Sol(S PROPN Sol(S
) PUNCT )
. PUNCT .
1 NUM 1
. PUNCT .
Les DET le
systèmes NOUN système
de ADP de
n AUX n
équations NOUN équation
à ADP à
p NOUN p
inconnues ADJ inconnu
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xp NOUN xp
) PUNCT )
Kp NOUN kp
: PUNCT :
où PRON où
les PRON le
ai PROPN avoir
, PUNCT ,
j PROPN j
et CCONJ et
les DET le
bi PRON bi
sont VERB être ind_pre
des DET un
scalaires ADJ scalaire
2 NUM 2
. PUNCT .
Les DET le
équations NOUN équation
différentielles ADJ différentiel
linéaires ADJ linéaire
du ADP de
premier ADJ premier
ordre NOUN ordre
: PUNCT :
y PRON y
0 NUM 0
a(x NOUN a(
) PUNCT )
y PRON y
b(x PROPN b(x
) PUNCT )
, PUNCT ,
où PRON où
a VERB avoir ind_pre
et CCONJ et
b NOUN b
sont VERB être ind_pre
continues VERB continuer ind_pre
sur ADP sur
I NOUN i
3 NUM 3
. PUNCT .
Les DET le
équations NOUN équation
différentielles ADJ différentiel
linéaires ADJ linéaire
du ADP de
second ADJ second
ordre NOUN ordre
à ADP à
coefficients NOUN coefficient
constants ADJ constant
: PUNCT :
y PRON y
00 PRON 00
a VERB avoir ind_pre
y PRON y
0 NUM 0
b NOUN b
y ADV y
c(x PROPN c(x
) PUNCT )
, PUNCT ,
où PRON où
a VERB avoir ind_pre
et CCONJ et
b NOUN b
sont VERB être ind_pre
des DET un
scalaires NOUN scalaire
et CCONJ et
c PRON c
est VERB être ind_pre
continue VERB continuer ind_pre
sur ADP sur
I NOUN i
4 NUM 4
. PUNCT .
Les DET le
équations NOUN équation
récurrentes ADJ récurrent
: PUNCT :
un1 NUM un1
an NOUN an
un DET un
bn PROPN bn
, PUNCT ,
où PRON où
( PUNCT (
an NOUN an
) PUNCT )
nN NOUN nn
et CCONJ et
( PUNCT (
bn PRON bn
) PUNCT )
nN NOUN nn
sont VERB être ind_pre
dans ADP dans
KN PROPN KN
1.15.1 NUM 1.15.1
Soit VERB être sub_pre
l' DET le
équation NOUN équation
récurrente ADJ récurrent
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
c' PRON ce
est VERB être ind_pre
bien ADV bien
un DET un
système NOUN système
linéaire ADJ linéaire
en ADP en
précisant VERB préciser par_pre
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
et CCONJ et
u. VERB u.
( PUNCT (
b NOUN b
) PUNCT )
Justifier VERB justifier inf
l' DET le
existence NOUN existence
de ADP de
solutions NOUN solution
. PUNCT .
( PUNCT (
c NOUN c
) PUNCT )
Écrire VERB écrire inf
le DET le
système NOUN système
homogène ADJ homogène
associé VERB associer par_pas
et CCONJ et
le DET le
résoudre VERB résoudre inf
. PUNCT .
( PUNCT (
d NOUN d
) PUNCT )
En ADP en
utilisant VERB utiliser par_pre
une DET un
méthode NOUN méthode
de ADP de
variation NOUN variation
de ADP de
la DET le
constante NOUN constante
, PUNCT ,
trouver VERB trouver inf
toutes ADJ tout
les DET le
solutions NOUN solution
de ADP de
( PUNCT (
S NOUN s
) PUNCT )
. PUNCT .
1.15.2 PROPN 1.15.2
Soit VERB être sub_pre
l' DET le
équation NOUN équation
différentielle ADJ différentiel
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
c' PRON ce
est VERB être ind_pre
bien ADV bien
un DET un
système NOUN système
linéaire ADJ linéaire
en ADP en
précisant VERB préciser par_pre
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
et CCONJ et
u. VERB u.
( PUNCT (
b NOUN b
) PUNCT )
Justifier VERB justifier inf
l' DET le
existence NOUN existence
de ADP de
solutions NOUN solution
. PUNCT .
( PUNCT (
c NOUN c
) PUNCT )
Écrire VERB écrire inf
le DET le
système NOUN système
homogène ADJ homogène
associé VERB associer par_pas
et CCONJ et
le DET le
résoudre VERB résoudre inf
. PUNCT .
( PUNCT (
d NOUN d
) PUNCT )
Trouver VERB trouver inf
toutes ADJ tout
les DET le
solutions NOUN solution
de ADP de
( PUNCT (
S NOUN s
) PUNCT )
. PUNCT .
( PUNCT (
e NOUN e
) PUNCT )
Comparer VERB comparer inf
aux ADP à
solutions NOUN solution
du ADP de
système NOUN système
récurrent ADJ récurrent
obtenu VERB obtenir par_pas
par ADP par
discrétisation NOUN discrétisation
: PUNCT :
Interpolation NOUN interpolation
Proposition NOUN proposition
1.14 NUM 1.14
Interpolation NOUN interpolation
de ADP de
Lagrange PROPN Lagrange
Soit VERB être sub_pre
f ADP f
: PUNCT :
I NOUN i
K NOUN k
, PUNCT ,
où PRON où
I ADJ i
est VERB être ind_pre
un DET un
intervalle NOUN intervalle
de ADP de
R. NOUN r.
Soit VERB être sub_pre
x1 ADJ x1
xn VERB xn
des DET un
réels NOUN réel
dans ADP dans
I NOUN i
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
fonction NOUN fonction
polynomiale ADJ polynomial
d' ADP de
interpolation NOUN interpolation
de ADP de
Lagrange PROPN Lagrange
l' DET le
unique ADJ unique
fonction NOUN fonction
polynomiale ADJ polynomial
P NOUN p
de ADP de
degré NOUN degré
n NOUN n
, PUNCT ,
telle ADJ tel
que SCONJ que
Elle PRON lui
est VERB être ind_pre
égale ADJ égal
à ADP à
: PUNCT :
Démonstration NOUN démonstration
E NOUN e
f NUM f
polynomiale ADJ polynomial
de ADP de
degré NOUN degré
n NOUN n
Cet DET ce
espace NOUN espace
vectoriel VERB vectoriel
est VERB être ind_pre
clairement ADV clairement
de ADP de
dimension NOUN dimension
n ADJ n
, PUNCT ,
de ADP de
base NOUN base
La DET le
famille NOUN famille
de ADP de
E PROPN E
? PUNCT ?
définie VERB définir par_pas
par ADP par
: PUNCT :
étant VERB être par_pre
une DET un
base NOUN base
de ADP de
E NOUN e
? PUNCT ?
, PUNCT ,
on PRON on
sait VERB savoir ind_pre
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
une DET un
base NOUN base
ante ADJ ant
- ADJ -
duale ADJ dual
( PUNCT (
Pk PROPN Pk
) PUNCT )
k1,n PUNCT k1,n
qui PRON qui
vérifie VERB vérifier ind_pre
: PUNCT :
Un DET un
calcul NOUN calcul
simple ADJ simple
nous PRON nous
démontre VERB démontrer ind_pre
que SCONJ que
: PUNCT :
On PRON on
cherche VERB chercher ind_pre
ensuite ADV ensuite
une DET un
solution NOUN solution
sous ADP sous
la DET le
forme NOUN forme
: PUNCT :
en ADP en
évaluant NOUN évaluant
sur ADP sur
les DET le
xj NOUN xj
, PUNCT ,
on PRON on
trouve VERB trouver ind_pre
l' DET le
unique ADJ unique
solution NOUN solution
de ADP de
l' DET le
énoncé NOUN énoncé
. PUNCT .
Soit VERB être sub_pre
la DET le
fonction NOUN fonction
sin NOUN sin
sur ADP sur
l' DET le
intervalle NOUN intervalle
0 NUM 0
, PUNCT ,
2 NUM 2
, PUNCT ,
pour ADP pour
un DET un
p NOUN p
N ADJ n
, PUNCT ,
prenons VERB prendre ind_pre
et CCONJ et
regardons VERB regarder ind_pre
les DET le
interpolations NOUN interpolation
pour ADP pour
différentes DET différents
valeurs NOUN valeur
de ADP de
p. NOUN p.
Voir VERB voir inf
la DET le
session NOUN session
Wxmaxima PROPN Wxmaxima
1.3 NUM 1.3
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
1.16.1 VERB 1.16.1
Redémontrer NOUN redémontrer
l' DET le
existence NOUN existence
et CCONJ et
l' DET le
unicité NOUN unicité
des ADP de
fonctions NOUN fonction
polynomiales ADJ polynomial
d' ADP de
interpolation NOUN interpolation
de ADP de
Lagrange NOUN lagrange
en ADP en
utilisant VERB utiliser par_pre
un DET un
raisonnement NOUN raisonnement
sur ADP sur
les DET le
systèmes NOUN système
linéaires ADJ linéaire
. PUNCT .
1.16.2 PROPN 1.16.2
Soit VERB être sub_pre
f ADP f
: PUNCT :
I NOUN i
K NOUN k
de ADP de
classe NOUN classe
C NOUN c
1 NUM 1
, PUNCT ,
soit VERB être sub_pre
x1 ADJ x1
xn VERB xn
des DET un
points NOUN point
de ADP de
I. NOUN i.
Démontrer VERB démontrer inf
l' DET le
existence NOUN existence
et CCONJ et
l' DET le
unicité NOUN unicité
d' ADP de
une DET un
fonction NOUN fonction
polynomiale ADJ polynomial
P NOUN p
de ADP de
degré NOUN degré
2 NUM 2
n NOUN n
, PUNCT ,
telle ADJ tel
que SCONJ que
: PUNCT :
1.16.3 VERB 1.16.3
Soit VERB être sub_pre
f NOUN f
: PUNCT :
a VERB avoir ind_pre
, PUNCT ,
b NOUN b
K NOUN k
, PUNCT ,
de ADP de
classe NOUN classe
C NOUN c
. PUNCT .
Pour ADP pour
p NOUN p
N ADJ n
, PUNCT ,
on PRON on
pose VERB poser ind_pre
Lp NOUN lp
( PUNCT (
f NOUN f
) PUNCT )
la DET le
fonction NOUN fonction
polynomiale ADJ polynomial
d' ADP de
interpolation NOUN interpolation
de ADP de
Lagrange PROPN Lagrange
de ADP de
f PRON f
pour ADP pour
les DET le
points NOUN point
: PUNCT :
On PRON on
suppose VERB supposer ind_pre
que SCONJ que
: PUNCT :
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
1.16.4 NUM 1.16.4
Soit VERB être sub_pre
f NOUN f
: PUNCT :
x ADP x
7 NUM 7
x NOUN x
, PUNCT ,
définie VERB définir par_pas
sur ADP sur
1 PRON 1
, PUNCT ,
1 NUM 1
. PUNCT .
Pour ADP pour
p NOUN p
N ADJ n
, PUNCT ,
p NOUN p
2 NUM 2
, PUNCT ,
on PRON on
pose VERB poser ind_pre
Lp NOUN lp
( PUNCT (
f NOUN f
) PUNCT )
la DET le
fonction NOUN fonction
polynomiale ADJ polynomial
d' ADP de
interpolation NOUN interpolation
de ADP de
Lagrange PROPN Lagrange
de ADP de
f PRON f
pour ADP pour
les DET le
points NOUN point
: PUNCT :
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
Fonctions NOUN fonction
spline NOUN spline
L' DET le
interpolation NOUN interpolation
par ADP par
les DET le
polynômes NOUN polynôme
de ADP de
Lagrange PROPN Lagrange
ne ADV ne
est VERB être ind_pre
pas ADV pas
toujours ADV toujours
efficace ADJ efficace
pour ADP pour
être VERB être inf
proche ADJ proche
de ADP de
la DET le
fonction NOUN fonction
de ADP de
base NOUN base
. PUNCT .
Voir VERB voir inf
la DET le
session NOUN session
Wxmaxima PROPN Wxmaxima
1.4 NUM 1.4
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
page NOUN page
. PUNCT .
C' PRON ce
est VERB être ind_pre
pourquoi ADV pourquoi
, PUNCT ,
il PRON il
a VERB avoir
fallu VERB falloir pas_cop
faire VERB faire inf
appel NOUN appel
à ADP à
d' DET d'
autres ADJ autre
classes NOUN classe
de ADP de
fonctions NOUN fonction
telles ADJ tel
que SCONJ que
: PUNCT :
elles PRON lui
soient VERB être sub_pre
faciles ADJ facile
à ADP à
calculer VERB calculer inf
elles PRON lui
approximent VERB approximer ind_pre sub_pre
bien ADV bien
la DET le
fonction NOUN fonction
initiale ADJ initial
elles PRON lui
soient VERB être sub_pre
insensibles ADJ insensible
à ADP à
ce DET ce
phénomène NOUN phénomène
de ADP de
divergence NOUN divergence
. PUNCT .
On PRON on
appelle VERB appeler ind_pre
fonctions NOUN fonction
spline NOUN spline
, PUNCT ,
des DET un
fonctions NOUN fonction
qui PRON qui
ont VERB avoir ind_pre
une DET un
classe NOUN classe
fixée VERB fixer par_pas
( PUNCT (
par ADP par
exemple NOUN exemple
C NOUN c
2 NUM 2
) PUNCT )
et CCONJ et
qui PRON qui
sont VERB être ind_pre
polynomiales ADJ polynomial
par ADP par
morceaux NOUN morceau
. PUNCT .
Voici VERB voici
ce PRON ce
que PRON que
donne VERB donner ind_pre sub_pre
l' DET le
approximation NOUN approximation
avec ADP avec
30 NUM 30
points NOUN point
( PUNCT (
pour ADP pour
Lagrange PROPN Lagrange
, PUNCT ,
cela PRON cela
diverge VERB diverger ind_pre
) PUNCT )
. PUNCT .
Voir VERB voir inf
la DET le
session NOUN session
Wxmaxima ADJ wxmaxima
1.5 NUM 1.5
, PUNCT ,
page NOUN page
suivante ADJ suivant
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
une DET un
base NOUN base
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
: PUNCT :
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
en ADP en
utilisant VERB utiliser par_pre
la DET le
dualité NOUN dualité
, PUNCT ,
pour ADP pour
tout ADV tout
k NOUN k
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
xk NUM xk
e?k VERB e?k
( PUNCT (
x NOUN x
) PUNCT )
. PUNCT .
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
espaces NOUN espace
vectoriels NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
et CCONJ et
E NOUN e
0 NUM 0
( PUNCT (
e01 PROPN e01
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
e0n ADJ e0n
) PUNCT )
des DET un
bases NOUN base
de ADP de
E NOUN e
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
en ADP en
utilisant VERB utiliser par_pre
la DET le
dualité NOUN dualité
, PUNCT ,
pour ADP pour
tout ADV tout
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
1 NUM 1
, PUNCT ,
n NUM ne
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
ai PROPN avoir
, PUNCT ,
j PRON j
( PUNCT (
e0i NOUN e0i
) PUNCT )
? PUNCT ?
( PUNCT (
u(ej NOUN u(ej
) PUNCT )
) PUNCT )
. PUNCT .
Pour ADP pour
tout ADV tout
x NOUN x
E NOUN e
, PUNCT ,
on PRON on
a VERB avoir ind_pre
donc ADV donc
: PUNCT :
ai PROPN avoir
, PUNCT ,
j PRON j
xj VERB xj
.e0i PUNCT .e0i
On PRON on
appelle VERB appeler ind_pre
matrice NOUN matrice
à ADP à
n NUM ne
lignes NOUN ligne
et CCONJ et
p NOUN p
colonnes ADJ colonne
( PUNCT (
n NOUN n
, PUNCT ,
p NOUN p
) PUNCT )
( PUNCT (
N NOUN n
) PUNCT )
2 NUM 2
, PUNCT ,
toute DET tout
famille NOUN famille
( PUNCT (
ai PROPN avoir
, PUNCT ,
j PROPN j
) PUNCT )
( PUNCT (
i NOUN i
, PUNCT ,
j)1,n1,p PROPN j)1,n1,p
d' ADP de
éléments NOUN élément
d' ADP de
un DET un
ensemble NOUN ensemble
A ADP à
représentée VERB représenter par_pas
sous ADP sous
la DET le
forme NOUN forme
d' ADP de
un DET un
tableau NOUN tableau
à ADP à
n AUX n
lignes NOUN ligne
et CCONJ et
p AUX p
colonnes ADJ colonne
entouré VERB entourer par_pas
par ADP par
des DET un
crochets NOUN crochet
a VERB avoir ind_pre
: PUNCT :
Les DET le
éléments NOUN élément
ai PRON ai
, PUNCT ,
j PRON j
de ADP de
la DET le
matrice NOUN matrice
s' PRON se
appellent VERB appeler ind_pre
coefficients NOUN coefficient
de ADP de
la DET le
matrice NOUN matrice
. PUNCT .
On PRON on
dit VERB dire ind_pre
aussi ADV aussi
que SCONJ que
la DET le
matrice NOUN matrice
M NOUN m
est VERB être ind_pre
n NUM ne
p. NOUN p.
L' DET le
ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
à ADP à
n NUM ne
lignes NOUN ligne
et CCONJ et
p NOUN p
colonnes ADJ colonne
à ADP à
coefficients NOUN coefficient
dans ADP dans
A VERB avoir ind_pre
se PRON se
note VERB noter ind_pre
: PUNCT :
Lorsque SCONJ lorsque
n NOUN n
p NOUN p
, PUNCT ,
on PRON on
dit VERB dire ind_pre
que SCONJ que
la DET le
matrice NOUN matrice
M NOUN m
est VERB être ind_pre
une DET un
matrice NOUN matrice
carrée ADJ carré
. PUNCT .
L' DET le
ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
carrées ADJ carré
n AUX n
n NOUN n
à ADP à
coefficients NOUN coefficient
dans ADP dans
A VERB avoir ind_pre
se PRON se
note VERB noter ind_pre
: PUNCT :
a. VERB avoir ind_pre
On PRON on
trouve VERB trouver ind_pre
aussi ADV aussi
souvent ADV souvent
des ADP de
parenthèses NOUN parenthèse
( PUNCT (
) PUNCT )
, PUNCT ,
mais CCONJ mais
nous PRON nous
utiliserons VERB utiliser fut_sim
les DET le
crochets NOUN crochet
pour ADP pour
différencier VERB différencier inf
familles NOUN famille
et CCONJ et
matrices NOUN matrice
. PUNCT .
1 NUM 1
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
p NOUN p
, PUNCT ,
si SCONJ si
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
et CCONJ et
si SCONJ si
x NOUN x
est VERB être ind_pre
un DET un
vecteur NOUN vecteur
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
on PRON on
appelle VERB appeler ind_pre
matrice NOUN matrice
de ADP de
x ADP x
dans ADP dans
la DET le
base NOUN base
E NOUN e
et CCONJ et
on PRON on
note VERB noter ind_pre
: PUNCT :
On PRON on
dit VERB dire ind_pre
que SCONJ que
M NOUN m
est VERB être ind_pre
une DET un
matrice NOUN matrice
colonne NOUN colonne
. PUNCT .
2 NUM 2
. PUNCT .
Si SCONJ si
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
sont VERB être ind_pre
deux NUM deux
K NOUN k
- ADJ -
espaces NOUN espace
vectoriels NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
si SCONJ si
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
, PUNCT ,
si SCONJ si
E NOUN e
0 NUM 0
( PUNCT (
e01 PROPN e01
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
e0n ADJ e0n
) PUNCT )
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
0 NUM 0
, PUNCT ,
alors ADV alors
on PRON on
appelle VERB appeler ind_pre
matrice NOUN matrice
de ADP de
f PRON f
dans ADP dans
les DET le
bases NOUN base
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
et CCONJ et
on PRON on
note VERB noter ind_pre
: PUNCT :
Noter VERB noter inf
que SCONJ que
n NOUN n
le DET le
nombre NOUN nombre
de ADP de
lignes NOUN ligne
est VERB être ind_pre
la DET le
dimension NOUN dimension
de ADP de
l' DET le
espace NOUN espace
d' ADP de
arrivée NOUN arrivée
et CCONJ et
p NOUN p
le DET le
nombre NOUN nombre
de ADP de
colonnes NOUN colonne
est VERB être ind_pre
la DET le
dimension NOUN dimension
de ADP de
l' DET le
espace NOUN espace
de ADP de
départ NOUN départ
! PUNCT !
3 NUM 3
. PUNCT .
Réciproquement ADV réciproquement
, PUNCT ,
si SCONJ si
A VERB avoir ind_pre
ai NOUN ai
, PUNCT ,
j PROPN j
( PUNCT (
i X i
, PUNCT ,
j)1,n1,p PROPN j)1,n1,p
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
lui PRON lui
associer VERB associer inf
canoniquement ADV canoniquement
l' DET le
application NOUN application
linéaire ADJ linéaire
f PUNCT f
définie VERB définir par_pas
sur ADP sur
Kp NOUN kp
( PUNCT (
de ADP de
base NOUN base
canonique ADJ canonique
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
) PUNCT )
à ADP à
valeurs NOUN valeur
dans ADP dans
Kn PROPN Kn
( PUNCT (
de ADP de
base NOUN base
canonique ADJ canonique
4 NUM 4
. PUNCT .
Dans ADP dans
le DET le
cas NOUN cas
particulier ADJ particulier
d' ADP de
un DET un
endomorphisme NOUN endomorphisme
( PUNCT (
E NOUN e
E NOUN e
, PUNCT ,
E NOUN e
E NOUN e
0 NUM 0
et CCONJ et
f DET f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
) PUNCT )
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
matrice NOUN matrice
de ADP de
f ADP f
dans ADP dans
la DET le
base NOUN base
E NOUN e
et CCONJ et
on PRON on
note VERB noter ind_pre
: PUNCT :
La DET le
matrice NOUN matrice
MatE PROPN MatE else
( PUNCT (
f NOUN f
) PUNCT )
est VERB être ind_pre
une DET un
matrice NOUN matrice
carrée ADJ carré
( PUNCT (
nombre NOUN nombre
de ADP de
lignesnombre NOUN lignesnombre
de ADP de
colonnes NOUN colonne
) PUNCT )
. PUNCT .
Si SCONJ si
E NOUN e
R2 PROPN R2
et CCONJ et
f PRON f
est VERB être ind_pre
la DET le
symétrie NOUN symétrie
par ADP par
rapport NOUN rapport
à ADP à
y PRON y
x NOUN x
, PUNCT ,
parallèlement ADV parallèlement
à ADP à
y PRON y
x ADJ x
et CCONJ et
si SCONJ si
E NOUN e
( PUNCT (
1 NUM 1
, PUNCT ,
0 NUM 0
) PUNCT )
, PUNCT ,
( PUNCT (
0 NUM 0
, PUNCT ,
1 NUM 1
) PUNCT )
, PUNCT ,
On PRON on
définit VERB définir ind_pre
les DET le
deux NUM deux
opérations NOUN opération
suivantes ADJ suivant
sur ADP sur
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
: PUNCT :
L' DET le
addition NOUN addition
a VERB avoir ind_pre
: PUNCT :
si SCONJ si
A VERB avoir ind_pre
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
et CCONJ et
si SCONJ si
B NOUN b
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
on PRON on
définit VERB définir ind_pre
A ADP à
B NOUN b
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
par ADP par
an NOUN an
, PUNCT ,
p NOUN p
bn PROPN bn
, PUNCT ,
p NOUN p
La DET le
multiplication NOUN multiplication
externe PROPN externe
: PUNCT :
si SCONJ si
K NOUN k
et CCONJ et
si SCONJ si
A VERB avoir ind_pre
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
on PRON on
définit VERB définir ind_pre
.A ADP .a
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
par ADP par
Il PRON il
faut VERB falloir ind_pre
que SCONJ que
les DET le
dimensions NOUN dimension
des ADP de
matrices NOUN matrice
A NOUN a
et CCONJ et
B NOUN b
soient VERB être sub_pre
les DET le
mêmes ADJ même
! PUNCT !
L' DET le
élément NOUN élément
neutre ADJ neutre
pour ADP pour
l' DET le
addition NOUN addition
de ADP de
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
est VERB être ind_pre
appelée VERB appeler par_pas
la DET le
matrice NOUN matrice
nulle ADJ nul
, PUNCT ,
notée VERB noter par_pas
0n X 0n
, PUNCT ,
p NOUN p
et CCONJ et
définie VERB définir par_pas
par ADP par
Cette DET ce
matrice NOUN matrice
correspond VERB correspondre ind_pre
à ADP à
l' DET le
application NOUN application
linéaire ADJ linéaire
nulle ADJ nul
0L PROPN 0L
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
. PUNCT .
Lorsque SCONJ lorsque
n NOUN n
p NOUN p
, PUNCT ,
on PRON on
note NOUN note
Proposition NOUN proposition
2.1 NUM 2.1
L' DET le
ensemble NOUN ensemble
Mn PRON mn
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
muni VERB munir par_pas
des ADP de
deux NUM deux
opérations NOUN opération
ci ADV ci
- ADV -
dessus ADJ dessu
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel VERB vectoriel
isomorphe NOUN isomorphe
à ADP à
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
pour ADP pour
tous DET tout
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
, PUNCT ,
toute DET tout
base NOUN base
E NOUN e
de ADP de
E NOUN e
et CCONJ et
toute DET tout
base NOUN base
E NOUN e
0 NUM 0
de ADP de
E NOUN e
0 NUM 0
, PUNCT ,
via ADP via
l' DET le
isomorphisme NOUN isomorphisme
En ADP en
particulier ADJ particulier
: PUNCT :
dim ADJ dim
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
n NOUN n
p NOUN p
Démonstration NOUN démonstration
Il PRON il
est VERB être ind_pre
immédiat VERB immédiat
que SCONJ que
Mn ADJ mn
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
: PUNCT :
c' PRON ce
est VERB être ind_pre
le DET le
même ADJ même
espace NOUN espace
que SCONJ que
Kn PROPN Kn
Kp NOUN kp
muni VERB munir par_pas
des ADP de
opérations NOUN opération
usuelles ADJ usuel
( PUNCT (
il PRON il
est VERB être ind_pre
donc ADV donc
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n NOUN n
p NOUN p
) PUNCT )
. PUNCT .
La DET le
linéarité NOUN linéarité
de ADP de
est VERB être ind_pre
immédiate ADJ immédiat
. PUNCT .
Démontrons VERB démontrer ind_pre
que SCONJ que
est VERB être ind_pre
injective VERB injective
. PUNCT .
Soit VERB être sub_pre
f NUM f
Ker PROPN Ker
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
MatE PROPN MatE else
, PUNCT ,
E NOUN e
0 NUM 0
( PUNCT (
f NOUN f
) PUNCT )
0n PROPN 0n
, PUNCT ,
p NOUN p
. PUNCT .
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
pour ADP pour
tout ADV tout
i VERB i
1 NUM 1
, PUNCT ,
n ADJ n
et CCONJ et
en ADP en
notant VERB noter par_pre
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
, PUNCT ,
les DET le
coefficients NOUN coefficient
de ADP de
u(ei PROPN u(ei
) PUNCT )
dans ADP dans
la DET le
base NOUN base
E NOUN e
0 NUM 0
sont VERB être ind_pre
tous ADJ tout
nuls ADJ nul
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
u X u
0L NUM 0L
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
on PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
Ker PROPN Ker
0L NUM 0L
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
donc ADV donc
est VERB être ind_pre
injective VERB injective
. PUNCT .
est VERB être ind_pre
linéaire ADJ linéaire
et CCONJ et
injective NOUN injective
entre ADP entre
deux NUM deux
espaces NOUN espace
de ADP de
même ADJ même
dimension NOUN dimension
, PUNCT ,
elle PRON lui
est VERB être ind_pre
bijective ADJ bijectif
. PUNCT .
C' PRON ce
est VERB être ind_pre
donc ADV donc
un DET un
isomorphisme ADJ isomorphism
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
on PRON on
retrouve VERB retrouver ind_pre
le DET le
fait NOUN fait
que SCONJ que
et CCONJ et
la DET le
propriété NOUN propriété
de ADP de
linéarité DET linéarité
En ADP en
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
connaître VERB connaître inf
une DET un
application NOUN application
linéaire ADJ linéaire
revient VERB revenir ind_pre
à ADP à
connaître VERB connaître inf
sa DET son
matrice NOUN matrice
dans ADP dans
des DET un
bases NOUN base
données NOUN donnée
. PUNCT .
Ainsi ADV ainsi
, PUNCT ,
pour ADP pour
résoudre VERB résoudre inf
un DET un
problème NOUN problème
d' ADP de
algèbre NOUN algèbre
linéaire ADJ linéaire
en ADP en
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
travailler VERB travailler inf
géométriquement ADV géométriquement
avec ADP avec
les DET le
applications NOUN application
linéaires ADJ linéaire
, PUNCT ,
ou CCONJ ou
bien ADV bien
algébriquement ADV algébriquement
avec ADP avec
des DET un
matrices NOUN matrice
, PUNCT ,
en ADP en
fonction NOUN fonction
de ADP de
ce PRON ce
qui PRON qui
est VERB être ind_pre
le DET le
plus ADV plus
pertinent ADJ pertinent
. PUNCT .
Il PRON il
existe VERB exister ind_pre
une DET un
base NOUN base
naturelle ADJ naturel
de ADP de
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
appelée VERB appeler par_pas
base NOUN base
canonique ADJ canonique
, PUNCT ,
donnée VERB donner par_pas
par ADP par
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
le DET le
coefficient NOUN coefficient
en ADP en
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
de ADP de
Ek NOUN ek
, PUNCT ,
est VERB être ind_pre
nul ADJ nul
, PUNCT ,
sauf ADP sauf
pour ADP pour
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
( PUNCT (
k NOUN k
, PUNCT ,
) PUNCT )
en ADP en
lequel PRON lequel
il PRON il
vaut VERB valoir ind_pre
1 NUM 1
. PUNCT .
Soit VERB être sub_pre
A ADP à
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
et CCONJ et
B NOUN b
Mp PROPN Mp
, PUNCT ,
q NOUN q
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
on PRON on
définit VERB définir ind_pre
le DET le
produit NOUN produit
de ADP de
A NOUN a
par ADP par
B NOUN b
comme ADP comme
la DET le
matrice NOUN matrice
A NOUN a
B NOUN b
Mn NOUN minute
, PUNCT ,
q ADJ q
( PUNCT (
K NOUN k
) PUNCT )
définie VERB définir par_pas
par ADP par
Voir VERB voir inf
la DET le
figure NOUN figure
2.1 NUM 2.1
, PUNCT ,
page NOUN page
ci PRON ci
- NOUN -
contre ADP contre
a VERB avoir ind_pre
. PUNCT .
a. VERB avoir
Tiré VERB tirer pas_cop
de ADP de
http NOUN http
: PUNCT :
www.texample.nettikzexamplesmatrix PROPN www.texample.nettikzexamplesmatrix
- PUNCT -
multiplication NOUN multiplication
Il PRON il
faut VERB falloir ind_pre
bien ADV bien
faire VERB faire inf
attention NOUN attention
à ADP à
ce PRON ce
que SCONJ que
les DET le
dimensions NOUN dimension
des ADP de
matrices NOUN matrice
soient VERB être sub_pre
compatibles ADJ compatible
: PUNCT :
lorsque SCONJ lorsque
l' PRON l'
on PRON on
veut VERB vouloir ind_pre
faire VERB faire inf
le DET le
produit NOUN produit
A NOUN a
B NOUN b
, PUNCT ,
le DET le
nombre NOUN nombre
de ADP de
colonnes NOUN colonne
de ADP de
A VERB avoir ind_pre
doit VERB devoir ind_pre
être VERB être inf
égal ADJ égal
au ADP à
nombre NOUN nombre
de ADP de
lignes NOUN ligne
de ADP de
B. PROPN B.
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- ADJ -
espaces NOUN espace
vectoriels NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
( PUNCT (
avec ADP avec
p NOUN p
dim ADP dim
E NOUN e
et CCONJ et
n AUX n
dim ADP dim
E NOUN e
0 NUM 0
) PUNCT )
, PUNCT ,
soit VERB être sub_pre
E NOUN e
une DET un
base NOUN base
de ADP de
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
une DET un
base NOUN base
de ADP de
E NOUN e
0 NUM 0
, PUNCT ,
soit VERB être sub_pre
f NUM f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
soit VERB être sub_pre
x ADP x
E. PROPN E.
Alors ADV alors
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
le DET le
produit NOUN produit
matriciel NOUN matriciel
MatE PROPN MatE else
, PUNCT ,
E NOUN e
0 NUM 0
( PUNCT (
f NOUN f
) PUNCT )
MatE PROPN MatE else
( PUNCT (
x NOUN x
) PUNCT )
traduit VERB traduire par_pas ind_pre
le DET le
calcul NOUN calcul
de ADP de
f PRON f
( PUNCT (
x NOUN x
) PUNCT )
. PUNCT .
Figure NOUN figure else
2.1 NUM 2.1
Produit NOUN produit
matriciel NOUN matriciel
B NOUN b
: PUNCT :
p NOUN p
lignes NOUN ligne
q ADJ q
colonnes NOUN colonne
A NOUN a
: PUNCT :
n NOUN n
lignes NOUN ligne
p NOUN p
colonnes ADJ colonne
C NOUN c
A.B NOUN a.b
: PUNCT :
n NOUN n
lignes NOUN ligne
q ADJ q
colonnes NOUN colonne
Démonstration NOUN démonstration
On PRON on
reprend VERB reprendre ind_pre
les DET le
notations NOUN notation
des ADP de
points NOUN point
1 NUM 1
et CCONJ et
2 NUM 2
de ADP de
la DET le
définition NOUN définition
2.2 NUM 2.2
, PUNCT ,
page NOUN page
90 NUM 90
. PUNCT .
On PRON on
a VERB avoir ind_pre
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
ai PROPN avoir
, PUNCT ,
j PRON j
xj X xj
.e0i PUNCT .e0i
j1 PROPN j1
ai VERB avoir ind_pre
, PUNCT ,
j PRON j
xj PRON xj
est VERB être ind_pre
le DET le
i ADV i
- NUM -
ième ADJ ième
coefficient NOUN coefficient
de ADP de
f PRON f
( PUNCT (
x NOUN x
) PUNCT )
dans ADP dans
la DET le
base NOUN base
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
qui PRON qui
est VERB être ind_pre
par ADP par
définition NOUN définition
du ADP de
produit NOUN produit
matriciel NOUN matriciel
le DET le
i NOUN i
- NUM -
ième ADJ ième
coefficient NOUN coefficient
de ADP de
la DET le
matrice NOUN matrice
colonne NOUN colonne
MatE PROPN MatE else
, PUNCT ,
E NOUN e
0 NUM 0
( PUNCT (
f NOUN f
) PUNCT )
MatE PROPN MatE else
( PUNCT (
x NOUN x
) PUNCT )
, PUNCT ,
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
. PUNCT .
Proposition NOUN proposition
2.2 NUM 2.2
Correspondance NOUN correspondance
entre ADP entre
composition NOUN composition
et CCONJ et
produit NOUN produit
matriciel NOUN matriciel
Soit VERB être sub_pre
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
et CCONJ et
E NOUN e
00 PRON 00
des ADP de
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
( PUNCT (
p NOUN p
dim ADP dim
E NOUN e
, PUNCT ,
n NOUN n
dim ADP dim
E NOUN e
0 NUM 0
et CCONJ et
q DET q
dim ADP dim
E NOUN e
00 NUM 00
) PUNCT )
, PUNCT ,
soit VERB être sub_pre
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
le DET le
produit NOUN produit
matriciel NOUN matriciel
MatE PROPN MatE else
0 NUM 0
, PUNCT ,
E NOUN e
00 NUM 00
( PUNCT (
g NOUN gramme
) PUNCT )
MatE PROPN MatE else
, PUNCT ,
E NOUN e
0 NUM 0
( PUNCT (
f NOUN f
) PUNCT )
traduit VERB traduire par_pas ind_pre
le DET le
calcul NOUN calcul
de ADP de
g NOUN gramme
f PRON f
. PUNCT .
Démonstration NOUN démonstration
Notons VERB noter imper
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
. PUNCT .
Soit VERB être sub_pre
j PRON j
1 NUM 1
, PUNCT ,
p. NOUN p.
La DET le
j NOUN j
- NOUN -
ième ADJ ième
colonne NOUN colonne
de ADP de
MatE PROPN MatE else
, PUNCT ,
E NOUN e
00 NUM 00
( PUNCT (
g NOUN gramme
f PRON f
) PUNCT )
est VERB être ind_pre
donnée VERB donner par_pas
par ADP par
en ADP en
remarquant VERB remarquer par_pre
que SCONJ que
MatE PROPN MatE else
( PUNCT (
ej NOUN ej
) PUNCT )
Mp,1 PROPN Mp,1
( PUNCT (
K NOUN k
) PUNCT )
a VERB avoir ind_pre
des DET un
zéros NOUN zéro
partout ADV partout
sauf ADP sauf
en ADP en
position NOUN position
j PROPN j
et CCONJ et
en ADP en
utilisant VERB utiliser par_pre
plusieurs DET plusieurs
fois NOUN fois
la DET le
propriété NOUN propriété
2.1 NUM 2.1
, PUNCT ,
page NOUN page
98 NUM 98
. PUNCT .
Finalement ADV finalement
, PUNCT ,
les DET le
colonnes NOUN colonne
de ADP de
MatE PROPN MatE else
, PUNCT ,
E NOUN e
00 NUM 00
( PUNCT (
g NOUN gramme
f VERB f
) PUNCT )
et CCONJ et
de ADP de
MatE PROPN MatE else
0 NUM 0
, PUNCT ,
E NOUN e
00 NUM 00
( PUNCT (
g NOUN gramme
) PUNCT )
MatE PROPN MatE else
, PUNCT ,
E NOUN e
0 NUM 0
( PUNCT (
f NOUN f
) PUNCT )
sont VERB être ind_pre
les DET le
mêmes ADJ même
, PUNCT ,
ces DET ce
deux NUM deux
matrices NOUN matrice
sont VERB être ind_pre
donc ADV donc
égales ADJ égal
. PUNCT .
Lorsque SCONJ lorsque
p NOUN p
n NOUN n
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
matrice NOUN matrice
identité NOUN identité
d' ADP de
ordre NOUN ordre
p NOUN p
et CCONJ et
on PRON on
note VERB noter ind_pre
: PUNCT :
La DET le
matrice NOUN matrice
identité NOUN identité
Ip PROPN Ip
correspond VERB correspondre ind_pre
l' DET le
endomorphisme NOUN endomorphisme
idE PROPN idE
, PUNCT ,
l' DET le
application NOUN application
identité NOUN identité
de ADP de
E NOUN e
( PUNCT (
avec ADP avec
p NOUN p
dim ADP dim
E NOUN e
) PUNCT )
, PUNCT ,
dans ADP dans
ne ADV ne
importe VERB importer ind_pre
quelle DET quel
base NOUN base
de ADP de
E. PROPN E.
Il PRON il
est VERB être ind_pre
important ADJ important
de ADP de
savoir VERB savoir inf
calculer VERB calculer inf
les DET le
produits NOUN produit
de ADP de
matrices NOUN matrice
et CCONJ et
de ADP de
savoir VERB savoir inf
prouver VERB prouver inf
que SCONJ que
le DET le
résultat NOUN résultat
est VERB être ind_pre
correct ADJ correct
! PUNCT !
Ainsi ADV ainsi
, PUNCT ,
si SCONJ si
Ek AUX ek
, PUNCT ,
est VERB être ind_pre
de ADP de
taille NOUN taille
n ADV n
p NOUN p
, PUNCT ,
et CCONJ et
Er PROPN Er
, PUNCT ,
s X s
est VERB être ind_pre
de ADP de
taille NOUN taille
p NOUN p
q ADV q
, PUNCT ,
alors ADV alors
: PUNCT :
En ADP en
effet NOUN effet
: PUNCT :
Les DET le
dimensions NOUN dimension
sont VERB être ind_pre
compatibles ADJ compatible
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
effectuer VERB effectuer inf
le DET le
produit NOUN produit
et CCONJ et
: PUNCT :
Le DET le
produit NOUN produit
est VERB être ind_pre
associatif ADJ associatif
: PUNCT :
Le DET le
produit NOUN produit
est VERB être ind_pre
distributif VERB distributif
à ADP à
gauche NOUN gauche
et CCONJ et
à ADP à
droite NOUN droite
: PUNCT :
Existence NOUN existence
d' ADP de
éléments NOUN élément
neutres ADJ neutre
( PUNCT (
à ADP à
gauche NOUN gauche
et CCONJ et
à ADP à
droite NOUN droite
) PUNCT )
pour ADP pour
la DET le
multiplication NOUN multiplication
: PUNCT :
Existence NOUN existence
d' ADP de
éléments NOUN élément
absorbants ADJ absorbant
pour ADP pour
la DET le
multiplication NOUN multiplication
: PUNCT :
Démonstration NOUN démonstration
Deux NUM Deux
méthodes NOUN méthode
: PUNCT :
on PRON on
peut VERB pouvoir ind_pre
vérifier VERB vérifier inf
ces DET ce
égalités NOUN égalité
en ADP en
calculant VERB calculer par_pre
tous ADJ tout
ces DET ce
produits NOUN produit
en ADP en
utilisant VERB utiliser par_pre
la DET le
définition NOUN définition
du ADP de
produit NOUN produit
( PUNCT (
définition NOUN définition
2.4 NUM 2.4
, PUNCT ,
page NOUN page
98 NUM 98
) PUNCT )
on PRON on
peut VERB pouvoir ind_pre
également ADV également
utiliser VERB utiliser inf
l' DET le
isomorphisme NOUN isomorphisme
de ADP de
la DET le
proposition NOUN proposition
2.1 NUM 2.1
, PUNCT ,
page NOUN page
96 NUM 96
, PUNCT ,
les DET le
égalités NOUN égalité
ci PRON ci
- PRON -
dessus PRON dessus
découlent VERB découler ind_pre
alors ADV alors
des DET un
propriétés NOUN propriété
de ADP de
la DET le
composition NOUN composition
des ADP de
applications NOUN application
linéaires ADJ linéaire
( PUNCT (
la DET le
démonstration NOUN démonstration
est VERB être ind_pre
laissée VERB laisser par_pas
en ADP en
exercice NOUN exercice
) PUNCT )
. PUNCT .
Pour ADP pour
toute DET tout
matrice NOUN matrice
carrée ADJ carré
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
on PRON on
pose VERB poser ind_pre
Si SCONJ si
A NOUN a
et CCONJ et
B NOUN b
sont VERB être ind_pre
deux NUM deux
matrices NOUN matrice
carrées VERB carrer par_pas
qui PRON qui
commutent VERB commuter ind_pre
( PUNCT (
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire ADV dire
A.B NOUN a.b
B NOUN b
.A NOUN .a
) PUNCT )
, PUNCT ,
alors ADV alors
on PRON on
a VERB avoir ind_pre
la DET le
formule NOUN formule
du ADP de
binôme NOUN binôme
: PUNCT :
A0 DET a0
In X In
et CCONJ et
pour ADP pour
tout ADV tout
k NUM k
N ADJ n
, PUNCT ,
Ak1 NOUN ak1
Ak PROPN Ak
A NOUN a
L' DET le
hypothèse NOUN hypothèse
A VERB avoir ind_pre
B NOUN b
B NOUN b
A NOUN a
est VERB être ind_pre
indispensable ADJ indispensable
. PUNCT .
En ADP en
général NOUN général
, PUNCT ,
2.1.1 NOUN 2.1.1
Calculer VERB calculer inf
pour ADP pour
M NOUN m
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
les DET le
matrices NOUN matrice
M.Ek PROPN M.Ek
, PUNCT ,
et CCONJ et
Ek PRON ek
, PUNCT ,
.M VERB .m
pour ADP pour
les DET le
valeurs NOUN valeur
de ADP de
k NOUN k
et CCONJ et
( PUNCT (
à ADP à
préciser VERB préciser inf
) PUNCT )
. PUNCT .
Calculer VERB calculer inf
A2 PROPN A2
. PUNCT .
2.1.3 NOUN 2.1.3
Résoudre VERB résoudre inf
l' DET le
équation NOUN équation
M NOUN m
2 NUM 2
02 NOUN 02
d' ADP de
inconnue NOUN inconnue
M NOUN m
M2 NOUN m2
( PUNCT (
R NOUN r
) PUNCT )
. PUNCT .
2.1.4 NUM 2.1.4
Soit VERB être sub_pre
( PUNCT (
a VERB avoir ind_pre
, PUNCT ,
b NOUN b
) PUNCT )
R2 PROPN R2
et CCONJ et
soit VERB être sub_pre
A ADP à
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
définie VERB définir par_pas
par ADP par
: PUNCT :
ai PROPN avoir
, PUNCT ,
j PRON j
a VERB avoir ind_pre
si SCONJ si
i ADJ i
j NOUN j
Trouver VERB trouver inf
toutes ADJ tout
les DET le
matrices NOUN matrice
qui PRON qui
commutent VERB commuter ind_pre
avec ADP avec
A NOUN a
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
déterminer VERB déterminer inf
l' DET le
ensemble NOUN ensemble
2.1.5 PROPN 2.1.5
On PRON on
suppose VERB supposer ind_pre
que PRON que
a VERB avoir ind_pre
, PUNCT ,
b NOUN b
et CCONJ et
c PRON c
sont VERB être ind_pre
trois NUM trois
nombrs VERB nombrs
complexes ADJ complexe
tels ADJ tel
que SCONJ que
a2 PROPN a2
b2 PROPN b2
c2 PROPN c2
1 PRON 1
. PUNCT .
On PRON on
pose VERB poser ind_pre
: PUNCT :
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
2.1.6 NUM 2.1.6
Soit VERB être sub_pre
A NOUN a
, PUNCT ,
B NOUN b
et CCONJ et
C NOUN c
trois NUM trois
matrices NOUN matrice
de ADP de
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
telles ADJ tel
que SCONJ que
: PUNCT :
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
Transposition NOUN transposition
Soit VERB être sub_pre
A ADP à
un DET un
ensemble NOUN ensemble
, PUNCT ,
( PUNCT (
n NOUN n
, PUNCT ,
p NOUN p
) PUNCT )
N NOUN n
2 NUM 2
, PUNCT ,
alors ADV alors
l' DET le
application NOUN application
définie VERB définir par_pas
par ADP par
: PUNCT :
est VERB être ind_pre
appelée VERB appeler par_pas
transposition NOUN transposition
. PUNCT .
La DET le
matrice NOUN matrice
t NOUN t
M NOUN m
est VERB être ind_pre
appelée VERB appeler par_pas
la DET le
transposée VERB transposer par_pas
a VERB avoir ind_pre
de ADP de
M NOUN m
. PUNCT .
a. VERB avoir ind_pre
On PRON on
rencontre VERB rencontrer ind_pre
également ADV également
la DET le
notation NOUN notation
M NOUN m
pour ADP pour
la DET le
transposée NOUN transposée
de ADP de
M NOUN m
. PUNCT .
La DET le
transposition NOUN transposition
est VERB être ind_pre
une DET un
application NOUN application
linéaire ADJ linéaire
: PUNCT :
La DET le
transposition NOUN transposition
est VERB être ind_pre
involutive ADJ involutif
: PUNCT :
La DET le
transposition NOUN transposition
est VERB être ind_pre
contravariante VERB contravarier
: PUNCT :
Démonstration NOUN démonstration
Les DET le
deux NUM deux
premiers ADJ premier
points NOUN point
sont VERB être ind_pre
immédiats ADJ immédiat
par ADP par
définition NOUN définition
. PUNCT .
En ADP en
notant VERB noter par_pre
Xi VERB xi
, PUNCT ,
j NOUN j
le DET le
coefficient NOUN coefficient
en ADP en
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
d' ADP de
une DET un
matrice NOUN matrice
Bk NOUN bk
, PUNCT ,
i ADJ i
Aj PROPN Aj
, PUNCT ,
k X k
Aj PROPN Aj
, PUNCT ,
k NOUN k
Bk NOUN bk
, PUNCT ,
i X i
d' ADP de
où PRON où
le DET le
troisième ADJ troisième
point NOUN point
. PUNCT .
1 NUM 1
. PUNCT .
Il PRON il
y PRON y
deux NUM deux
manières NOUN manière
de ADP de
considérer VERB considérer inf
les DET le
formes NOUN forme
linéaires ADJ linéaire
d' ADP de
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
de ADP de
dimension NOUN dimension
finie ADJ fini
: PUNCT :
comme ADP comme
des DET un
applications NOUN application
linéaires ADJ linéaire
de ADP de
E NOUN e
dans ADP dans
K NOUN k
elles PRON lui
sont VERB être ind_pre
alors ADV alors
représentées VERB représenter par_pas
par ADP par
des DET un
matrices NOUN matrice
de ADP de
M1,p PROPN M1,p
( PUNCT (
K NOUN k
) PUNCT )
en ADP en
fixant VERB fixer par_pre
une DET un
base NOUN base
de ADP de
E NOUN e
( PUNCT (
avec ADP avec
p NOUN p
dim ADP dim
E NOUN e
) PUNCT )
comme ADP comme
des DET un
vecteurs NOUN vecteur
de ADP de
E NOUN e
? PUNCT ?
elles PRON lui
sont VERB être ind_pre
alors ADV alors
représentées VERB représenter par_pas
dans ADP dans
une DET un
base NOUN base
de ADP de
E NOUN e
? PUNCT ?
par ADP par
des DET un
matrices NOUN matrice
de ADP de
Y PRON y
a VERB avoir ind_pre
-t PRON -t
-il PRON il
un DET un
lien NOUN lien
entre ADP entre
ces DET ce
deux NUM deux
représentations NOUN représentation
? PUNCT ?
Soit VERB être sub_pre
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
une DET un
base NOUN base
de ADP de
E NOUN e
et CCONJ et
E NOUN e
? PUNCT ?
, PUNCT ,
en ADP en
prenant VERB prendre par_pre
( PUNCT (
1 NUM 1
) PUNCT )
comme ADP comme
base NOUN base
de ADP de
K NOUN k
, PUNCT ,
on PRON on
a VERB avoir ind_pre
: PUNCT :
On PRON on
a VERB avoir ind_pre
donc ADV donc
, PUNCT ,
pour ADP pour
tout ADV tout
x NOUN x
E NOUN e
: PUNCT :
Notation NOUN notation
2.1 NUM 2.1
Dans ADP dans
la DET le
suite NOUN suite
de ADP de
ce DET ce
cours NOUN cours
, PUNCT ,
on PRON on
conviendra VERB convenir fut_sim
que SCONJ que
les DET le
matrices NOUN matrice
à ADP à
1 NUM 1
ligne NOUN ligne
et CCONJ et
1 NUM 1
colonne NOUN colonne
seront VERB être fut_sim
notées VERB noter par_pas
comme ADP comme
des DET un
scalaires ADJ scalaire
. PUNCT .
Soit VERB être sub_pre
: PUNCT :
On PRON on
a VERB avoir ind_pre
donc ADV donc
, PUNCT ,
avec ADP avec
cet DET ce
abus NOUN abus
de ADP de
notation NOUN notation
, PUNCT ,
Soit VERB être sub_pre
E NOUN e
? PUNCT ?
la DET le
base NOUN base
duale ADJ dual
de ADP de
E NOUN e
, PUNCT ,
notons NOUN noton
: PUNCT :
de ADP de
sorte NOUN sorte
que SCONJ que
: PUNCT :
Finalement ADV finalement
: PUNCT :
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
2 NUM 2
. PUNCT .
En ADP en
Wxmaxima PROPN Wxmaxima
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
: PUNCT :
Soit VERB être sub_pre
M NOUN m
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
On PRON on
dit VERB dire ind_pre
que SCONJ que
M NOUN m
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
est VERB être ind_pre
symétrique ADJ symétrique
a VERB avoir ind_pre
si SCONJ si
elle PRON lui
vérifie VERB vérifier ind_pre
t NOUN t
M NOUN m
M NOUN m
. PUNCT .
L' DET le
ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
symétriques ADJ symétrique
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
est VERB être ind_pre
noté VERB noter par_pas
On PRON on
dit VERB dire ind_pre
que SCONJ que
M NOUN m
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
est VERB être ind_pre
antisymétrique ADJ antisymétrique
si SCONJ si
elle PRON lui
vérifie VERB vérifier ind_pre
t NOUN t
M NOUN m
M NOUN m
. PUNCT .
L' DET le
ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
antisymétriques ADJ antisymétrique
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
est VERB être ind_pre
noté VERB noter par_pas
a. VERB avoir ind_pre
Les DET le
matrices NOUN matrice
M NOUN m
vérifiant VERB vérifier par_pre
t X t
M NOUN m
M NOUN m
sont VERB être ind_pre
nécessairement ADV nécessairement
carrées VERB carrer par_pas
! PUNCT !
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
Sp PROPN Sp
( PUNCT (
K NOUN k
) PUNCT )
et CCONJ et
Ap PROPN Ap
( PUNCT (
K NOUN k
) PUNCT )
sont VERB être ind_pre
des DET un
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
( PUNCT (
c NOUN c
) PUNCT )
Déterminer VERB déterminer inf
la DET le
dimension NOUN dimension
de ADP de
Sp PROPN Sp
( PUNCT (
K NOUN k
) PUNCT )
et CCONJ et
la DET le
dimension NOUN dimension
de ADP de
Ap PROPN Ap
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
Matrices NOUN matrice
diagonales ADJ diagonal
, PUNCT ,
matrices NOUN matrice
triangulaires ADJ triangulaire
On PRON on
dit VERB dire ind_pre
que SCONJ que
A NOUN a
est VERB être ind_pre
diagonale ADJ diagonal
si SCONJ si
tous ADJ tout
ses DET son
coefficients NOUN coefficient
non-diagonaux ADJ non-diagonal
sont VERB être ind_pre
nuls ADV nuls
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
: PUNCT :
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
: PUNCT :
On PRON on
note VERB noter ind_pre
Dp ADV dp
( PUNCT (
K NOUN k
) PUNCT )
l' DET le
ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
diagonales ADJ diagonal
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
On PRON on
dit VERB dire ind_pre
que SCONJ que
A NOUN a
est VERB être ind_pre
triangulaire ADJ triangulaire
supérieure ADJ supérieur
si SCONJ si
tous ADJ tout
ses DET son
coefficients NOUN coefficient
au ADP à
- PUNCT -
dessous NOUN dessous
de ADP de
sa DET son
diagonale NOUN diagonale
sont VERB être ind_pre
nuls ADJ nul
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
: PUNCT :
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
: PUNCT :
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
l' DET le
ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
triangulaires ADJ triangulaire
supérieures ADJ supérieur
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
On PRON on
dit VERB dire ind_pre
que SCONJ que
A NOUN a
est VERB être ind_pre
triangulaire ADJ triangulaire
inférieur ADJ inférieur
si SCONJ si
tous ADJ tout
ses DET son
coefficients NOUN coefficient
au-dessus ADV au-dessus
de ADP de
sa DET son
diagonale NOUN diagonale
sont VERB être ind_pre
nuls ADJ nul
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
: PUNCT :
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
: PUNCT :
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
l' DET le
ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
triangulaires ADJ triangulaire
inférieures ADJ inférieur
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
Il PRON il
est VERB être ind_pre
indispensable ADJ indispensable
que SCONJ que
A NOUN a
soit VERB être sub_pre
une DET un
matrice NOUN matrice
carrée ADJ carré
! PUNCT !
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
Dp PROPN Dp
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
T NOUN t
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
et CCONJ et
Tp PROPN Tp
( PUNCT (
K NOUN k
) PUNCT )
sont VERB être ind_pre
des DET un
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
Quelles ADJ quelle
sont VERB être ind_pre
leurs DET leur
dimension NOUN dimension
respectives ADJ respectif
? PUNCT ?
( PUNCT (
b NOUN b
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
ces DET ce
trois NUM trois
espaces NOUN espace
sont VERB être ind_pre
stables ADJ stable
par ADP par
produit NOUN produit
et CCONJ et
exprimer VERB exprimer inf
simplement ADV simplement
les DET le
coefficients NOUN coefficient
diagonaux ADJ diagonal
du ADP de
produit NOUN produit
. PUNCT .
Trace NOUN trace else
d' ADP de
une DET un
matrice NOUN matrice
Soit VERB être sub_pre
a VERB avoir ind_pre
A X A
ai NOUN ai
, PUNCT ,
j PROPN j
( PUNCT (
i NOUN i
, PUNCT ,
j)1,n NOUN j)1,n
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
On PRON on
définit VERB définir ind_pre
la DET le
trace NOUN trace
de ADP de
A NOUN a
, PUNCT ,
notée VERB noter par_pas
trace(A PROPN trace(A
) PUNCT )
, PUNCT ,
comme ADP comme
la DET le
somme NOUN somme
des ADP de
éléments NOUN élément
diagonaux ADJ diagonal
de ADP de
A PROPN A
: PUNCT :
Il PRON il
est VERB être ind_pre
indispensable ADJ indispensable
que SCONJ que
A NOUN a
soit VERB être sub_pre
une DET un
matrice NOUN matrice
carrée ADJ carré
! PUNCT !
1 NUM 1
. PUNCT .
A NOUN a
7 NUM 7
trace(A NOUN trace(a
) PUNCT )
est VERB être ind_pre
une DET un
forme NOUN forme
linéaire ADJ linéaire
sur ADP sur
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
2 NUM 2
. PUNCT .
La DET le
trace NOUN trace
est VERB être ind_pre
invariante NOUN invariante
par ADP par
transposition NOUN transposition
: PUNCT :
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
trace(t X trace(t
A NOUN a
) PUNCT )
trace(A NOUN trace(a
) PUNCT )
3 NUM 3
. PUNCT .
La DET le
trace NOUN trace
est VERB être ind_pre
invariante NOUN invariante
par ADP par
commutation NOUN commutation
de ADP de
deux NUM deux
matrices NOUN matrice
a VERB avoir ind_pre
: PUNCT :
Mais CCONJ mais
il PRON il
est VERB être ind_pre
faux ADJ faux
de ADP de
penser VERB penser inf
que SCONJ que
trace(A ADJ trace(a
B NOUN b
C NOUN c
) PUNCT )
trace(A PROPN trace(A
C NOUN c
B NOUN b
) PUNCT )
On PRON on
peut VERB pouvoir ind_pre
commuter VERB commuter inf
deux NUM deux
matrices NOUN matrice
, PUNCT ,
mais CCONJ mais
on PRON on
ne ADV ne
peux VERB pouvoir ind_pre
pas ADV pas
changer VERB changer inf
ne ADV ne
importe VERB importer ind_pre
quel DET quel
ordre NOUN ordre
! PUNCT !
Démonstration NOUN démonstration
En ADP en
exercice NOUN exercice
. PUNCT .
Matrices NOUN matrice
inversibles ADJ inversible
Soit VERB être sub_pre
a VERB avoir ind_pre
A ADP à
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
On PRON on
dit VERB dire ind_pre
que SCONJ que
A NOUN a
est VERB être ind_pre
inversible ADJ inversible
si SCONJ si
: PUNCT :
On PRON on
dit VERB dire ind_pre
alors ADV alors
que SCONJ que
B NOUN b
est VERB être ind_pre
l' DET le
inverse NOUN inverse
de ADP de
A NOUN a
et CCONJ et
on PRON on
note NOUN note
GLp PROPN GLp
( PUNCT (
K NOUN k
) PUNCT )
l' DET le
ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
inversibles ADJ inversible
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
Il PRON il
est VERB être ind_pre
indispensable ADJ indispensable
que SCONJ que
A NOUN a
soit VERB être sub_pre
une DET un
matrice NOUN matrice
carrée ADJ carré
! PUNCT !
Si SCONJ si
il PRON il
existe VERB exister ind_pre
, PUNCT ,
l' DET le
inverse NOUN inverse
est VERB être ind_pre
unique ADJ unique
. PUNCT .
En ADP en
effet NOUN effet
, PUNCT ,
si SCONJ si
B NOUN b
et CCONJ et
B NOUN b
0 NUM 0
sont VERB être ind_pre
deux NUM deux
inverses NOUN inverse
de ADP de
A NOUN a
, PUNCT ,
on PRON on
a VERB avoir ind_pre
: PUNCT :
Soit VERB être sub_pre
A ADP à
Dp PROPN Dp
( PUNCT (
K NOUN k
) PUNCT )
une DET un
matrice NOUN matrice
diagonale ADJ diagonal
: PUNCT :
Alors ADV alors
A NOUN a
est VERB être ind_pre
inversible ADJ inversible
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
pour ADP pour
tout ADV tout
k NOUN k
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
k NOUN k
6 NUM 6
0 NOUN 0
. PUNCT .
Si SCONJ si
c' PRON ce
est VERB être ind_pre
le DET le
cas NOUN cas
, PUNCT ,
on PRON on
a VERB avoir ind_pre
Proposition NOUN proposition
2.3 NUM 2.3
Lien NOUN lien
entre ADP entre
automorphismes NOUN automorphisme
et CCONJ et
matrices NOUN matrice
inversibles ADJ inversible
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
soit VERB être sub_pre
E NOUN e
une DET un
base NOUN base
de ADP de
E NOUN e
et CCONJ et
soit VERB être sub_pre
f NUM f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Alors ADV alors
f NOUN f
est VERB être ind_pre
inversible ADJ inversible
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
la DET le
matrice NOUN matrice
MatE PROPN MatE else
( PUNCT (
f NOUN f
) PUNCT )
est VERB être ind_pre
inversible ADJ inversible
. PUNCT .
Si SCONJ si
c' PRON ce
est VERB être ind_pre
le DET le
cas NOUN cas
: PUNCT :
Démonstration NOUN démonstration
Supposons VERB supposer ind_pre
f NOUN f
inversible ADJ inversible
. PUNCT .
On PRON on
a VERB avoir ind_pre
ce PRON ce
qui PRON qui
démontre VERB démontrer ind_pre
que SCONJ que
MatE PROPN MatE else
( PUNCT (
f NOUN f
) PUNCT )
est VERB être ind_pre
inversible ADJ inversible
et CCONJ et
MatE PROPN MatE else
( PUNCT (
f NOUN f
1 NUM 1
) PUNCT )
MatE PROPN MatE else
( PUNCT (
f NOUN f
) PUNCT )
1 NUM 1
. PUNCT .
Supposons VERB supposer ind_pre
MatE PROPN MatE else
( PUNCT (
f NOUN f
) PUNCT )
inversible ADJ inversible
. PUNCT .
D' ADP de
après ADP après
la DET le
proposition NOUN proposition
2.1 NUM 2.1
, PUNCT ,
page NOUN page
96 NUM 96
, PUNCT ,
il PRON il
existe VERB exister ind_pre
un DET un
unique ADJ unique
g NOUN gramme
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
tel ADJ tel
MatE PROPN MatE else
( PUNCT (
f NOUN f
) PUNCT )
MatE PROPN MatE else
( PUNCT (
g NOUN gramme
) PUNCT )
MatE PROPN MatE else
( PUNCT (
g NOUN gramme
) PUNCT )
MatE PROPN MatE else
( PUNCT (
f NOUN f
) PUNCT )
Ip X Ip
ce PRON ce
qui PRON qui
démontre VERB démontrer ind_pre
que SCONJ que
f PRON f
est VERB être ind_pre
inversible ADJ inversible
. PUNCT .
Ainsi ADV ainsi
, PUNCT ,
les DET le
matrices NOUN matrice
inversibles ADJ inversible
représentent VERB représenter ind_pre
les DET le
automorphismes NOUN automorphisme
. PUNCT .
À ADP à
noter VERB noter inf
qu' SCONJ que
il PRON il
suffit VERB suffire ind_pre
de ADP de
vérifier VERB vérifier inf
l' DET le
inversibilité NOUN inversibilité
matriciel NOUN matriciel
dans ADP dans
une DET un
seule ADJ seul
base NOUN base
. PUNCT .
Soit VERB être sub_pre
A ADP à
GLp PROPN GLp
( PUNCT (
K NOUN k
) PUNCT )
et CCONJ et
B NOUN b
GLp PROPN GLp
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
Alors ADV alors
: PUNCT :
Démonstration NOUN démonstration
La DET le
relation NOUN relation
A ADP à
A1 NOUN a1
A1 NOUN a1
A NOUN a
démontre VERB démontrer ind_pre
que SCONJ que
A1 NOUN a1
est VERB être ind_pre
inversible ADJ inversible
et CCONJ et
que SCONJ que
son DET son
inverse NOUN inverse
est VERB être ind_pre
A. PROPN A.
et CCONJ et
de ADP de
même ADV même
( PUNCT (
B NOUN b
1 NUM 1
A1 NOUN a1
) PUNCT )
( PUNCT (
A NOUN a
B NOUN b
) PUNCT )
Ip NOUN ip
, PUNCT ,
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
. PUNCT .
Par ADP par
récurrence NOUN récurrence
sur ADP sur
k NOUN k
en ADP en
utilisant VERB utiliser par_pre
le DET le
point NOUN point
2 NUM 2
. PUNCT .
et CCONJ et
de ADP de
même ADV même
t NOUN t
( PUNCT (
A1 NOUN a1
) PUNCT )
p NOUN p
, PUNCT ,
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
. PUNCT .
Si SCONJ si
A NOUN a
et CCONJ et
B NOUN b
sont VERB être ind_pre
inversibles ADJ inversible
, PUNCT ,
il PRON il
est VERB être ind_pre
faux ADJ faux
en ADP en
général NOUN général
que SCONJ que
A ADP à
B NOUN b
est VERB être ind_pre
inversible ADJ inversible
. PUNCT .
Par ADP par
exemple NOUN exemple
A NOUN a
A NOUN a
0p PROPN 0p
ne ADV ne
est VERB être ind_pre
jamais ADV jamais
inversible ADJ inversible
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
GLp PROPN GLp
( PUNCT (
K NOUN k
) PUNCT )
ne ADV ne
est VERB être ind_pre
pas ADV pas
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
Il PRON il
est VERB être ind_pre
cependant ADV cependant
stable ADJ stable
par ADP par
Changement NOUN changement
de ADP de
bases NOUN base
K(matrice NOUN k(matrice
de ADP de
passage NOUN passage
) PUNCT )
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
une DET un
base NOUN base
de ADP de
E NOUN e
( PUNCT (
avec ADP avec
p NOUN p
dim ADP dim
E NOUN e
) PUNCT )
. PUNCT .
Soit VERB être sub_pre
X NOUN x
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xr PROPN xr
) PUNCT )
une DET un
famille NOUN famille
de ADP de
r ADP r
vecteurs NOUN vecteur
de ADP de
E. PROPN E.
On PRON on
appelle VERB appeler ind_pre
matrice NOUN matrice
de ADP de
la DET le
famille NOUN famille
X NOUN x
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xr PROPN xr
) PUNCT )
dans ADP dans
la DET le
base NOUN base
E NOUN e
et CCONJ et
on PRON on
note VERB noter ind_pre
: PUNCT :
MatE PROPN MatE else
( PUNCT (
X NOUN x
) PUNCT )
MatE PROPN MatE else
où PRON où
ai VERB avoir ind_pre
, PUNCT ,
j PRON j
est VERB être ind_pre
le DET le
i NOUN i
- NUM -
ième ADJ ième
coefficient NOUN coefficient
de ADP de
xj NOUN xj
dans ADP dans
la DET le
base NOUN base
E NOUN e
: PUNCT :
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
par ADP par
dualité NOUN dualité
, PUNCT ,
pour ADP pour
tout ADV tout
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
1 NUM 1
, PUNCT ,
n NUM ne
1 NUM 1
, PUNCT ,
r X r
, PUNCT ,
ai PROPN avoir
, PUNCT ,
j PRON j
e?i VERB e?i
( PUNCT (
xj NOUN xj
) PUNCT )
. PUNCT .
1 NUM 1
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
E NOUN e
une DET un
base NOUN base
de ADP de
E NOUN e
et CCONJ et
x ADP x
E NOUN e
, PUNCT ,
alors ADV alors
: PUNCT :
MatE PROPN MatE else
( PUNCT (
x NOUN x
) PUNCT )
MatE PROPN MatE else
( PUNCT (
x NOUN x
) PUNCT )
2 NUM 2
. PUNCT .
Si SCONJ si
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
sont VERB être ind_pre
des DET un
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
une DET un
base NOUN base
de ADP de
E NOUN e
( PUNCT (
avec ADP avec
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
et CCONJ et
B NOUN b
( PUNCT (
b1 PROPN b1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
bp PROPN bp
) PUNCT )
deux NUM deux
bases NOUN base
de ADP de
E NOUN e
( PUNCT (
avec ADP avec
p NOUN p
dim ADP dim
E NOUN e
) PUNCT )
. PUNCT .
On PRON on
appelle VERB appeler ind_pre
matrice NOUN matrice
de ADP de
passage NOUN passage
de ADP de
E NOUN e
à ADP à
B NOUN b
et CCONJ et
on PRON on
note VERB noter ind_pre
: PUNCT :
C' PRON ce
est VERB être ind_pre
donc ADV donc
la DET le
matrice NOUN matrice
de ADP de
la DET le
nouvelle ADJ nouveau
base NOUN base
B NOUN b
exprimée VERB exprimer par_pas
dans ADP dans
l' DET le
ancienne ADJ ancien
base NOUN base
E NOUN e
. PUNCT .
On PRON on
a VERB avoir ind_pre
( PUNCT (
attention NOUN attention
à ADP à
l' DET le
ordre NOUN ordre
des ADP de
bases NOUN base
! PUNCT !
) PUNCT )
: PUNCT :
PE PROPN PE
MatB PROPN MatB
, PUNCT ,
E NOUN e
( PUNCT (
idE PROPN idE
) PUNCT )
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
E NOUN e
et CCONJ et
B NOUN b
deux NUM deux
bases NOUN base
de ADP de
E. PROPN E.
Alors ADV alors
la DET le
matrice NOUN matrice
de ADP de
passage NOUN passage
PE PROPN PE
est VERB être ind_pre
inversible ADJ inversible
et CCONJ et
Démonstration NOUN démonstration
PB ADJ pb
MatB PROPN MatB
, PUNCT ,
E NOUN e
( PUNCT (
idE PROPN idE
) PUNCT )
MatE PROPN MatE else
, PUNCT ,
B NOUN b
( PUNCT (
idE PROPN idE
) PUNCT )
MatB PROPN MatB
, PUNCT ,
B NOUN b
( PUNCT (
idE VERB ide
idE PRON ide
) PUNCT )
MatB PROPN MatB
, PUNCT ,
B NOUN b
( PUNCT (
idE PRON ide
) PUNCT )
Ip X Ip
et CCONJ et
de ADP de
même ADJ même
PB NOUN problème
PE PROPN PE
Ip PROPN Ip
, PUNCT ,
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
E NOUN e
, PUNCT ,
B NOUN b
et CCONJ et
C NOUN c
trois NUM trois
bases NOUN base
de ADP de
E. PROPN E.
Alors ADV alors
: PUNCT :
Démonstration NOUN démonstration
Analogue PROPN Analogue
à ADP à
la DET le
démonstration NOUN démonstration
de ADP de
la DET le
propriété NOUN propriété
2.6 NUM 2.6
, PUNCT ,
page NOUN page
ci PRON ci
- NOUN -
contre ADP contre
( PUNCT (
en ADP en
exercice NOUN exercice
) PUNCT )
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
avec ADP avec
p NOUN p
dim ADP dim
E NOUN e
, PUNCT ,
si SCONJ si
E NOUN e
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
une DET un
famille NOUN famille
X NOUN x
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xp NOUN xp
) PUNCT )
de ADP de
p NOUN p
vecteurs NOUN vecteur
de ADP de
E NOUN e
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
MatE PROPN MatE else
( PUNCT (
X NOUN x
) PUNCT )
est VERB être ind_pre
inversible ADJ inversible
. PUNCT .
Si SCONJ si
c' PRON ce
est VERB être ind_pre
le DET le
cas NOUN cas
, PUNCT ,
MatE PROPN MatE else
( PUNCT (
X NOUN x
) PUNCT )
PE PROPN PE
. PUNCT .
Proposition NOUN proposition
2.4 NUM 2.4
Changement NOUN changement
de ADP de
base NOUN base
pour ADP pour
les DET le
vecteurs NOUN vecteur
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
E NOUN e
et CCONJ et
B NOUN b
deux NUM deux
bases NOUN base
de ADP de
E NOUN e
, PUNCT ,
x ADP x
E. PROPN E.
Alors ADV alors
: PUNCT :
MatE PROPN MatE else
( PUNCT (
x NOUN x
) PUNCT )
PE PROPN PE
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
en ADP en
multipliant VERB multiplier par_pre
à ADP à
gauche NOUN gauche
par ADP par
PE PROPN PE
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
les DET le
anciennes ADJ ancien
coordonnées NOUN coordonnée
en ADP en
fonction NOUN fonction
des ADP de
nouvelles ADJ nouveau
coordonnées NOUN coordonnée
. PUNCT .
Démonstration NOUN démonstration
idE PROPN idE
( PUNCT (
x NOUN x
) PUNCT )
MatE PROPN MatE else
( PUNCT (
x NOUN x
) PUNCT )
MatB PROPN MatB
( PUNCT (
x NOUN x
) PUNCT )
MatB PROPN MatB
, PUNCT ,
E NOUN e
( PUNCT (
idE PROPN idE
) PUNCT )
MatB PROPN MatB
( PUNCT (
x NOUN x
) PUNCT )
MatE PROPN MatE else
Proposition NOUN proposition
2.5 NUM 2.5
Changement NOUN changement
de ADP de
base NOUN base
pour ADP pour
les DET le
applications NOUN application
linéaires ADJ linéaire
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
des ADP de
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
E NOUN e
et CCONJ et
B NOUN b
deux NUM deux
base NOUN base
de ADP de
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
et CCONJ et
B NOUN b
0 NUM 0
deux NUM deux
bases NOUN base
de ADP de
E NOUN e
0 NUM 0
, PUNCT ,
f NUM f
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
. PUNCT .
Alors ADV alors
( PUNCT (
voir VERB voir inf
la DET le
figure NOUN figure
2.2 NUM 2.2
, PUNCT ,
page NOUN page
suivante ADJ suivant
) PUNCT )
: PUNCT :
Dans ADP dans
le DET le
cas NOUN cas
particulier ADJ particulier
où PRON où
f PRON f
est VERB être ind_pre
un DET un
endomorphisme NOUN endomorphisme
de ADP de
E NOUN e
( PUNCT (
E NOUN e
0 NUM 0
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
E NOUN e
, PUNCT ,
B NOUN b
0 NUM 0
B NOUN b
et CCONJ et
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
) PUNCT )
, PUNCT ,
on PRON on
a VERB avoir ind_pre
MatB PROPN MatB
( PUNCT (
f NOUN f
) PUNCT )
PE PROPN PE
Démonstration NOUN démonstration
L' DET le
égalité NOUN égalité
f NOUN f
idE DET ide
idE PRON ide
0 NUM 0
f NOUN f
donne VERB donner ind_pre
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire ADV dire
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
. PUNCT .
Figure NOUN figure else
2.2 NUM 2.2
Changement NOUN changement
de ADP de
base NOUN base
pour ADP pour
les DET le
applications NOUN application
linéaires ADJ linéaire
Le DET le
noyau NOUN noyau
de ADP de
A NOUN a
est VERB être ind_pre
le DET le
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
Mp,1 PROPN Mp,1
( PUNCT (
K NOUN k
) PUNCT )
défini VERB définir par_pas
par ADP par
: PUNCT :
L' DET le
image NOUN image
de ADP de
A NOUN a
est VERB être ind_pre
le DET le
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
Mn,1 PROPN Mn,1
( PUNCT (
K NOUN k
) PUNCT )
défini VERB définir par_pas
par ADP par
: PUNCT :
Le DET le
rang NOUN rang
de ADP de
A NOUN a
, PUNCT ,
noté VERB noter par_pas
rang(A NOUN rang(a
) PUNCT )
, PUNCT ,
est VERB être ind_pre
la DET le
dimension NOUN dimension
de ADP de
Im(A NOUN im(a
) PUNCT )
: PUNCT :
rang(A PROPN rang(A
) PUNCT )
dim ADP dim
Im(A NOUN im(a
) PUNCT )
a. VERB avoir ind_pre
On PRON on
notera VERB noter fut_sim
aussi ADV aussi
Ker NOUN ker
A NOUN a
, PUNCT ,
Im X Im
A NOUN a
et CCONJ et
rang NOUN rang
A. NOUN a.
Soit VERB être sub_pre
A ADP à
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
On PRON on
note NOUN note
C1 ADJ c1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Cp NOUN cp
les DET le
colonnes NOUN colonne
de ADP de
A NOUN a
( PUNCT (
vues VERB voir par_pas
comme ADP comme
des DET un
matrices NOUN matrice
colonnes ADJ colonne
de ADP de
En ADP en
particulier ADJ particulier
, PUNCT ,
rang NOUN rang
A NOUN a
min(n PROPN min(n
, PUNCT ,
p NOUN p
) PUNCT )
car CCONJ car
Im X Im
A VERB avoir ind_pre
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
Mn,1 PROPN Mn,1
( PUNCT (
K NOUN k
) PUNCT )
engendré VERB engendrer par_pas
par ADP par
les DET le
p NOUN p
colonnes ADJ colonne
de ADP de
A. PROPN A.
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- ADJ -
espaces NOUN espace
vectoriels NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
soit VERB être sub_pre
E NOUN e
une DET un
base NOUN base
de ADP de
E NOUN e
, PUNCT ,
soit VERB être sub_pre
E NOUN e
0 NUM 0
une DET un
base NOUN base
de ADP de
E NOUN e
0 NUM 0
1 NUM 1
. PUNCT .
Pour ADP pour
tout ADV tout
x NOUN x
E NOUN e
, PUNCT ,
x ADP x
Ker NOUN ker
f NOUN f
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
MatE PROPN MatE else
( PUNCT (
x NOUN x
) PUNCT )
Ker NOUN ker
A. PROPN A.
En ADP en
particulier ADJ particulier
, PUNCT ,
dim ADP dim
Ker PROPN Ker
f DET f
dim ADP dim
Ker PROPN Ker
A NOUN a
2 NUM 2
. PUNCT .
Pour ADP pour
tout ADV tout
y PRON y
E NOUN e
0 NUM 0
, PUNCT ,
y PRON y
Im NUM Im
f NOUN f
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
MatE PROPN MatE else
0 NUM 0
( PUNCT (
y ADV y
) PUNCT )
Im X Im
A. PROPN A.
En ADP en
particulier ADJ particulier
, PUNCT ,
dim ADP dim
Im NUM Im
f ADP f
dim ADP dim
Im NUM Im
A NOUN a
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire ADV dire
rang NOUN rang
f ADJ f
rang NOUN rang
A NOUN a
Si SCONJ si
A VERB avoir ind_pre
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
on PRON on
a VERB avoir ind_pre
le DET le
théorème NOUN théorème
du ADP de
rang NOUN rang
( PUNCT (
voir VERB voir inf
le DET le
théorème NOUN théorème
1.4 NUM 1.4
, PUNCT ,
page NOUN page
57 NUM 57
) PUNCT )
: PUNCT :
rang NOUN rang
A NOUN a
p NOUN p
dim ADP dim
Ker PROPN Ker
A NOUN a
De ADP de
plus ADV plus
, PUNCT ,
si SCONJ si
A VERB avoir ind_pre
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
( PUNCT (
matrice NOUN matrice
carrée ADJ carré
) PUNCT )
, PUNCT ,
les DET le
propositions NOUN proposition
suivantes ADJ suivant
sont VERB être ind_pre
équivalentes ADJ équivalent
: PUNCT :
1 NUM 1
. PUNCT .
A NOUN a
est VERB être ind_pre
inversible ADJ inversible
4 NUM 4
. PUNCT .
Les DET le
colonnes NOUN colonne
( PUNCT (
C1 NOUN c1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Cp NOUN cp
) PUNCT )
de ADP de
A VERB avoir ind_pre
forment VERB former ind_pre
une DET un
base NOUN base
de ADP de
Mp,1 PROPN Mp,1
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
La DET le
multiplication NOUN multiplication
par ADP par
une DET un
matrice NOUN matrice
inversible ADJ inversible
conserve VERB conserver ind_pre
le DET le
rang NOUN rang
: PUNCT :
si SCONJ si
A VERB avoir ind_pre
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
alors ADV alors
P NOUN p
GLp PROPN GLp
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
Q NOUN q
GLn PROPN GLn
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
rang(A X rang(A
P NOUN p
) PUNCT )
rang(Q NUM rang(Q
A NOUN a
) PUNCT )
rang NOUN rang
A NOUN a
2.4.1 NUM 2.4.1
Soit VERB être sub_pre
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
existe VERB exister ind_pre
-t PRON -t
-il PRON il
B NOUN b
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
telle ADJ tel
que SCONJ que
: PUNCT :
2.4.2 NUM 2.4.2
Soit VERB être sub_pre
A NOUN a
et CCONJ et
B NOUN b
dans ADP dans
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
, PUNCT ,
telles ADJ tel
que SCONJ que
: PUNCT :
Démontrer VERB démontrer inf
que SCONJ que
A NOUN a
ou CCONJ ou
B NOUN b
est VERB être ind_pre
la DET le
matrice NOUN matrice
nulle ADJ nul
. PUNCT .
2.4.3 PRON 2.4.3
Démontrer VERB démontrer inf
que SCONJ que
toute DET tout
matrice NOUN matrice
de ADP de
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
est VERB être ind_pre
somme NOUN somme
de ADP de
deux NUM deux
matrices NOUN matrice
inversibles ADJ inversible
. PUNCT .
2.4.4 NUM 2.4.4
Démontrer VERB démontrer inf
que SCONJ que
toute DET tout
matrice NOUN matrice
de ADP de
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
est VERB être ind_pre
limite NOUN limite
d' ADP de
une DET un
suite NOUN suite
de ADP de
matrices NOUN matrice
inversibles ADJ inversible
. PUNCT .
2.4.5 NUM 2.4.5
Soit VERB être sub_pre
A NOUN a
et CCONJ et
B NOUN b
dans ADP dans
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
rang(A PROPN rang(A
) PUNCT )
rang(B PRON rang(b
) PUNCT )
Relations NOUN relation
d' ADP de
équivalence NOUN équivalence
et CCONJ et
matrices NOUN matrice
Relations NOUN relation
d' ADP de
équivalence NOUN équivalence
Soit VERB être sub_pre
E NOUN e
un DET un
ensemble NOUN ensemble
non ADV non
vide ADJ vide
, PUNCT ,
R NOUN r
une DET un
relation NOUN relation
a VERB avoir ind_pre
sur ADP sur
E. PROPN E.
On PRON on
dit VERB dire ind_pre
que SCONJ que
: PUNCT :
R NOUN r
est VERB être ind_pre
réflexive ADJ réflexif
si SCONJ si
: PUNCT :
R NOUN r
est VERB être ind_pre
symétrique ADJ symétrique
si SCONJ si
: PUNCT :
R NOUN r
est VERB être ind_pre
transitive ADJ transitif
si SCONJ si
: PUNCT :
On PRON on
dit VERB dire ind_pre
que SCONJ que
R NOUN r
est VERB être ind_pre
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
sur ADP sur
E NOUN e
si SCONJ si
R NOUN r
est VERB être ind_pre
réflexive NOUN réflexive
, PUNCT ,
symétrique ADJ symétrique
et CCONJ et
transitive ADJ transitif
. PUNCT .
a. VERB avoir ind_pre
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
la DET le
donnée NOUN donnée
d' ADP de
un DET un
sous-ensemble NOUN sous-ensemble
A NOUN a
de ADP de
E NOUN e
E NOUN e
, PUNCT ,
où PRON où
on PRON on
définit VERB définir ind_pre
pour ADP pour
tout ADV tout
( PUNCT (
x NOUN x
, PUNCT ,
y PRON y
) PUNCT )
E NOUN e
2 NUM 2
, PUNCT ,
xRy VERB xry
( PUNCT (
x NOUN x
, PUNCT ,
y ADV y
) PUNCT )
A NOUN a
1 NUM 1
. PUNCT .
L' DET le
égalité NOUN égalité
sur ADP sur
un DET un
ensemble NOUN ensemble
est VERB être ind_pre
toujours ADV toujours
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
! PUNCT !
2 NUM 2
. PUNCT .
avoir VERB avoir inf
même ADV même
parité NOUN parité
est VERB être ind_pre
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
sur ADP sur
N NOUN n
ou CCONJ ou
Z. NOUN z.
3 NUM 3
. PUNCT .
avoir VERB avoir inf
même ADV même
dimension NOUN dimension
est VERB être ind_pre
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
sur ADP sur
l' DET le
ensemble NOUN ensemble
des ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
d' ADP de
un DET un
même ADJ même
espace NOUN espace
vectoriel NOUN vectoriel
E NOUN e
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
. PUNCT .
4 NUM 4
. PUNCT .
être VERB être inf
en ADP en
bijection NOUN bijection
avec ADP avec
est VERB être ind_pre
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
sur ADP sur
l' DET le
ensemble NOUN ensemble
des ADP de
sous-ensembles NOUN sous-ensemble
d' ADP de
un DET un
ensemble NOUN ensemble
E. NOUN e.
5 NUM 5
. PUNCT .
être VERB être inf
parallèle ADJ parallèle
est VERB être ind_pre
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
sur ADP sur
l' DET le
ensemble NOUN ensemble
des ADP de
droites NOUN droite
du ADP de
plan NOUN plan
. PUNCT .
6 NUM 6
. PUNCT .
Pour ADP pour
tout DET tout
n AUX n
N ADJ n
, PUNCT ,
avoir VERB avoir inf
le DET le
même ADV même
reste VERB rester ind_pre
dans ADP dans
la DET le
division NOUN division
euclidienne ADJ euclidien
par ADP par
n AUX n
est VERB être ind_pre
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
sur ADP sur
Z. NOUN z.
Soit VERB être sub_pre
E NOUN e
un DET un
ensemble NOUN ensemble
non ADV non
vide ADJ vide
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
partition NOUN partition
de ADP de
E NOUN e
, PUNCT ,
la DET le
donnée NOUN donnée
d' ADP de
une DET un
famille NOUN famille
( PUNCT (
Ei NOUN ei
) PUNCT )
iI PRON ii
de ADP de
sous-ensembles PRON sous-ensembles
de ADP de
E NOUN e
tels ADJ tel
que SCONJ que
: PUNCT :
tous ADJ tout
les DET le
Ei NOUN ei
sont VERB être ind_pre
non ADV non
vides ADJ vide
: PUNCT :
ils PRON il
sont VERB être ind_pre
disjoints NOUN disjoint
deux-à-deux ADJ deux-à-deux
: PUNCT :
ils PRON il
recouvrent VERB recouvrir ind_pre
E NOUN e
: PUNCT :
1 NUM 1
. PUNCT .
L' DET le
ensemble NOUN ensemble
des ADP de
singletons NOUN singleton
d' ADP de
un DET un
ensemble NOUN ensemble
est VERB être ind_pre
une DET un
partition NOUN partition
de ADP de
cet DET ce
ensemble NOUN ensemble
. PUNCT .
2 NUM 2
. PUNCT .
L' DET le
ensemble NOUN ensemble
2 NUM 2
N NOUN n
2 NUM 2
n NOUN n
, PUNCT ,
n NUM ne
N ADJ n
des ADP de
nombres NOUN nombre
pairs ADJ pair
et CCONJ et
l' DET le
ensemble NOUN ensemble
12 NUM 12
N NOUN n
2 NUM 2
n1 NOUN n1
, PUNCT ,
n NUM ne
N ADJ n
des ADP de
nombres NOUN nombre
impairs ADV impairs
forment VERB former ind_pre
une DET un
partition NOUN partition
de ADP de
N. NOUN n.
3 NUM 3
. PUNCT .
Plus ADV plus
généralement ADV généralement
, PUNCT ,
si SCONJ si
n AUX n
N ADJ n
, PUNCT ,
n AUX n
2 NUM 2
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
s' PRON se
intéresser VERB intéresser inf
aux ADP à
ensembles NOUN ensemble
: PUNCT :
( PUNCT (
Ek NOUN ek
) PUNCT )
k0,n1 PUNCT k0,n1
est VERB être ind_pre
une DET un
partition NOUN partition
de ADP de
N NOUN n
Soit VERB être sub_pre
( PUNCT (
Ei NOUN ei
) PUNCT )
iI PRON ii
une DET un
partition NOUN partition
d' ADP de
un DET un
ensemble NOUN ensemble
E NOUN e
non ADV non
vide ADJ vide
et CCONJ et
soit VERB être sub_pre
R VERB r
la DET le
relation NOUN relation
sur ADP sur
E NOUN e
définie VERB définir par_pas
par ADP par
: PUNCT :
( PUNCT (
autrement ADV autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
x ADP x
et CCONJ et
y PRON y
sont VERB être ind_pre
en ADP en
relation NOUN relation
lorsque SCONJ lorsque
x NOUN x
et CCONJ et
y PRON y
appartiennent VERB appartenir ind_pre
à ADP à
un DET un
même ADJ même
Ei NOUN ei
) PUNCT )
. PUNCT .
Alors ADV alors
R PRON r
est VERB être ind_pre
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
sur ADP sur
E. PROPN E.
Démonstration NOUN démonstration
C' PRON ce
est VERB être ind_pre
immédiat ADJ immédiat
, PUNCT ,
une DET un
fois NOUN fois
qu' PRON qu'
on PRON on
a VERB avoir
remarqué VERB remarquer pas_cop
que ADV que
pour ADP pour
tout ADV tout
x NOUN x
E NOUN e
, PUNCT ,
il PRON il
existe VERB exister ind_pre
i X i
I ADJ i
tel ADJ tel
que SCONJ que
x ADP x
Ei PROPN Ei
car CCONJ car
la DET le
partition NOUN partition
( PUNCT (
Ei NOUN ei
) PUNCT )
iI PRON ii
recouvre VERB recouvrir ind_pre
E. NOUN e.
Soit VERB être sub_pre
R NOUN r
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
sur ADP sur
un DET un
ensemble NOUN ensemble
E NOUN e
non ADV non
vide ADJ vide
et CCONJ et
soit VERB être sub_pre
x ADP x
E. NUM E.
La DET le
classe NOUN classe
d' ADP de
équivalence NOUN équivalence
de ADP de
x ADP x
modulo NOUN modulo
R NOUN r
est VERB être ind_pre
le DET le
sous-ensemble NOUN sous-ensemble
de ADP de
E NOUN e
défini VERB définir par_pas
par ADP par
: PUNCT :
Classe(x PROPN Classe(x
, PUNCT ,
R NOUN r
) PUNCT )
y PRON y
E NOUN e
, PUNCT ,
xRy VERB xry
Un DET un
élément NOUN élément
d' ADP de
une DET un
classe NOUN classe
d' ADP de
équivalence NOUN équivalence
est VERB être ind_pre
appelé VERB appeler par_pas
un DET un
représentant NOUN représentant
de ADP de
cette DET ce
classe NOUN classe
d' ADP de
équivalence NOUN équivalence
. PUNCT .
Pour ADP pour
tout ADV tout
x NOUN x
E NOUN e
, PUNCT ,
on PRON on
a VERB avoir ind_pre
toujours ADV toujours
x NOUN x
Classe(x PROPN Classe(x
, PUNCT ,
R NOUN r
) PUNCT )
car CCONJ car
xRx PROPN xRx
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
une DET un
classe NOUN classe
d' ADP de
équivalence NOUN équivalence
ne ADV ne
est VERB être ind_pre
jamais ADV jamais
vide ADJ vide
. PUNCT .
Soit VERB être sub_pre
R NOUN r
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
sur ADP sur
un DET un
ensemble NOUN ensemble
E NOUN e
non ADV non
vide ADJ vide
. PUNCT .
Alors ADV alors
: PUNCT :
Démonstration NOUN démonstration
Supposons VERB supposer imper
xRy VERB xry
. PUNCT .
Soit VERB être sub_pre
z NOUN z
Classe(x PROPN Classe(x
, PUNCT ,
R NOUN r
) PUNCT )
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
xRz PROPN xRz
d' ADP de
où PRON où
zRx NOUN zr
. PUNCT .
Or CCONJ or
xRy VERB xry
donc ADV donc
zRy NOUN zry
d' ADP de
où PRON où
yRz PROPN yRz
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire ADV dire
z CCONJ z
Classe(x PROPN Classe(x
, PUNCT ,
R NOUN r
) PUNCT )
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
Classe(x PROPN Classe(x
, PUNCT ,
R NOUN r
) PUNCT )
Classe(y NOUN classe(y
, PUNCT ,
R NOUN r
) PUNCT )
. PUNCT .
De ADP de
même ADV même
, PUNCT ,
on PRON on
démontre VERB démontrer ind_pre
que SCONJ que
Classe(x PROPN Classe(x
, PUNCT ,
R NOUN r
) PUNCT )
Classe(y NOUN classe(y
, PUNCT ,
R NOUN r
) PUNCT )
, PUNCT ,
donc ADV donc
Classe(x PROPN Classe(x
, PUNCT ,
R NOUN r
) PUNCT )
Classe(y NOUN classe(y
, PUNCT ,
R NOUN r
) PUNCT )
. PUNCT .
Supposons VERB supposer imper
Classe(x PROPN Classe(x
, PUNCT ,
R NOUN r
) PUNCT )
Classe(y NOUN classe(y
, PUNCT ,
R NOUN r
) PUNCT )
. PUNCT .
Comme ADP comme
y PRON y
Classe(y NOUN classe(y
, PUNCT ,
R NOUN r
) PUNCT )
, PUNCT ,
on PRON on
a VERB avoir ind_pre
y PRON y
Classe(x PROPN Classe(x
, PUNCT ,
R NOUN r
) PUNCT )
donc ADV donc
xRy NOUN xry
. PUNCT .
Soit VERB être sub_pre
R NOUN r
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
sur ADP sur
un DET un
ensemble NOUN ensemble
E NOUN e
non ADV non
vide ADJ vide
. PUNCT .
Alors ADV alors
les DET le
classes NOUN classe
d' ADP de
équivalence NOUN équivalence
forment VERB former ind_pre
une DET un
partition NOUN partition
de ADP de
E. PROPN E.
Plus ADV plus
formellement ADV formellement
, PUNCT ,
si SCONJ si
on PRON on
définit VERB définir ind_pre
la DET le
famille NOUN famille
( PUNCT (
Ei NOUN ei
) PUNCT )
iI PRON ii
des ADP de
classes NOUN classe
d' ADP de
équivalence NOUN équivalence
, PUNCT ,
donnée VERB donner par_pas
par ADP par
I ADJ i
Classe(x PROPN Classe(x
, PUNCT ,
R NOUN r
) PUNCT )
, PUNCT ,
x ADP x
E NOUN e
et CCONJ et
pour ADP pour
tout ADV tout
i VERB i
I ADJ i
, PUNCT ,
Ei NOUN ei
i X i
alors ADV alors
( PUNCT (
Ei NOUN ei
) PUNCT )
iI PRON ii
est VERB être ind_pre
une DET un
partition NOUN partition
de ADP de
E. PROPN E.
Démonstration NOUN démonstration
On PRON on
a VERB avoir
vu VERB voir pas_cop
que ADV que
pour ADP pour
tout DET tout
i VERB i
I ADJ i
, PUNCT ,
Ei PRON ei
est VERB être ind_pre
non ADV non
vide ADJ vide
. PUNCT .
( PUNCT (
remarque VERB remarquer ind_pre
2.15 VERB 2.15
, PUNCT ,
page NOUN page
précédente ADJ précédent
) PUNCT )
. PUNCT .
Pour ADP pour
tout ADV tout
x NOUN x
E NOUN e
, PUNCT ,
on PRON on
a VERB avoir ind_pre
x VERB x
Classe(x PROPN Classe(x
, PUNCT ,
R NOUN r
) PUNCT )
donc ADV donc
il PRON il
existe VERB exister ind_pre
i X i
E NOUN e
tel ADJ tel
que SCONJ que
x ADP x
Ei PROPN Ei
. PUNCT .
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
( PUNCT (
Ei NOUN ei
) PUNCT )
iI PRON ii
recouvre VERB recouvrir ind_pre
E NOUN e
Soit VERB être sub_pre
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
I ADJ i
2 NUM 2
tel ADJ tel
que SCONJ que
i NOUN i
6 NUM 6
j. VERB j.
Supposons VERB supposer ind_pre
que ADV que
Ei NOUN ei
Ej PROPN Ej
6 NUM 6
. PUNCT .
Il PRON il
existe VERB exister ind_pre
donc ADV donc
z VERB z
Ei PROPN Ei
Ej PROPN Ej
. PUNCT .
Comme SCONJ comme
z NOUN z
Ei PROPN Ei
, PUNCT ,
on PRON on
a VERB avoir ind_pre
xi X xi
Rz PROPN Rz
où PRON où
xi PRON xi
est VERB être ind_pre
un DET un
représentant NOUN représentant
de ADP de
E1 PROPN E1
, PUNCT ,
donc ADV donc
Classe(z VERB classer imper
, PUNCT ,
R NOUN r
) PUNCT )
Ei PROPN Ei
( PUNCT (
propriété NOUN propriété
2.10 NUM 2.10
, PUNCT ,
page NOUN page
précédente ADJ précédent
) PUNCT )
. PUNCT .
De ADP de
même ADV même
, PUNCT ,
on PRON on
a VERB avoir ind_pre
Classe(z VERB classer imper
, PUNCT ,
R NOUN r
) PUNCT )
Ej PROPN Ej
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
Ei NOUN ei
Ej PROPN Ej
, PUNCT ,
ce PRON ce
qui PRON qui
contredit VERB contredire par_pas ind_pre
i NOUN i
6 NUM 6
j NOUN j
donc ADV donc
Ei NOUN ei
Ej VERB ej
. PUNCT .
2.5.1 NOUN 2.5.1
On PRON on
définit VERB définir ind_pre
sur ADP sur
C NOUN c
la DET le
relation NOUN relation
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
c' PRON ce
est VERB être ind_pre
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Préciser VERB préciser inf
les DET le
classes NOUN classe
d' ADP de
équivalence NOUN équivalence
. PUNCT .
( PUNCT (
c NOUN c
) PUNCT )
Donner ADP donner
un DET un
ensemble NOUN ensemble
de ADP de
représentants NOUN représentant
réels ADJ réel
de ADP de
ces DET ce
classes NOUN classe
d' ADP de
équivalence NOUN équivalence
. PUNCT .
2.5.2 ADV 2.5.2
Soit VERB être sub_pre
E NOUN e
un DET un
ensemble NOUN ensemble
non ADV non
vide ADJ vide
et CCONJ et
A NOUN a
E NOUN e
, PUNCT ,
on PRON on
définit VERB définir ind_pre
une DET un
relation NOUN relation
sur ADP sur
P(E NOUN p(e
) PUNCT )
par ADP par
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
c' PRON ce
est VERB être ind_pre
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
l' DET le
ensemble NOUN ensemble
des ADP de
classes NOUN classe
d' ADP de
équivalence NOUN équivalence
est VERB être ind_pre
en ADP en
bijection NOUN bijection
avec ADP avec
P(A NOUN p(a
) PUNCT )
. PUNCT .
On PRON on
définit VERB définir ind_pre
de ADP de
même ADV même
la DET le
relation NOUN relation
sur ADP sur
P(E NOUN p(e
) PUNCT )
par ADP par
: PUNCT :
( PUNCT (
c NOUN c
) PUNCT )
C' PRON ce
est VERB être ind_pre
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
, PUNCT ,
trouver VERB trouver inf
une DET un
bijection NOUN bijection
de ADP de
l' DET le
ensemble NOUN ensemble
des ADP de
classes NOUN classe
d' ADP de
équivalence NOUN équivalence
avec ADP avec
un DET un
ensemble NOUN ensemble
connu VERB connaître par_pas
. PUNCT .
2.5.3 ADP 2.5.3
Soit VERB être sub_pre
E NOUN e
un DET un
ensemble NOUN ensemble
non ADV non
vide ADJ vide
, PUNCT ,
on PRON on
définit VERB définir ind_pre
la DET le
relation NOUN relation
sur ADP sur
P(E NOUN p(e
) PUNCT )
par ADP par
: PUNCT :
f DET f
F NOUN f
( PUNCT (
X NOUN x
, PUNCT ,
Y NOUN y
) PUNCT )
, PUNCT ,
injective NOUN injective
Cette DET ce
relation NOUN relation
est-elle ADJ est-ell
réflexive NOUN réflexive
? PUNCT ?
Symétrique ADJ symétrique
? PUNCT ?
Transitive VERB transitive
? PUNCT ?
2.5.4 PROPN 2.5.4
Soit VERB être sub_pre
E NOUN e
un DET un
ensemble NOUN ensemble
non ADV non
vide ADJ vide
muni VERB munir par_pas
d' ADP de
une DET un
relation NOUN relation
R NOUN r
réflexive ADJ réflexif
et CCONJ et
transitive ADJ transitif
. PUNCT .
On PRON on
définit VERB définir ind_pre
les DET le
deux NUM deux
relations NOUN relation
suivantes ADJ suivant
: PUNCT :
xRy ADJ xry
ou CCONJ ou
yRx NOUN yr
Les DET le
relations NOUN relation
S ADJ s
et CCONJ et
T NOUN t
sont VERB être ind_pre
- PUNCT -
elles NOUN elle
réflexives ADJ réflexif
? PUNCT ?
Symétriques NOUN symétrique
? PUNCT ?
Transitives PROPN Transitives
? PUNCT ?
2.5.5 NUM 2.5.5
Soit VERB être sub_pre
E NOUN e
un DET un
ensemble NOUN ensemble
non ADV non
vide ADJ vide
muni VERB munir par_pas
d' ADP de
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
R PROPN R
, PUNCT ,
on PRON on
pose VERB poser ind_pre
: PUNCT :
Classe(a NOUN classe(a
, PUNCT ,
R NOUN r
) PUNCT )
Soit VERB être sub_pre
A ADP à
une DET un
partie NOUN partie
de ADP de
E. PROPN E.
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
A ADP à
s(A PROPN s(A
) PUNCT )
. PUNCT .
Peut ADV peut
-on PRON on
avoir VERB avoir inf
A ADP à
s(A PROPN s(A
) PUNCT )
? PUNCT ?
Donner VERB donner inf
un DET un
exemple NOUN exemple
. PUNCT .
( PUNCT (
d NOUN d
) PUNCT )
Soit VERB être sub_pre
( PUNCT (
Ai NOUN ai
) PUNCT )
iI PRON ii
une DET un
famille NOUN famille
de ADP de
sous-ensembles NOUN sous-ensemble
de ADP de
E. PROPN E.
Comparer VERB comparer inf
pour ADP pour
l' DET le
inclusion NOUN inclusion
les DET le
ensembles NOUN ensemble
: PUNCT :
s(Ai VERB s(er
) PUNCT )
, PUNCT ,
puis CCONJ puis
s X s
Équivalence PROPN Équivalence
et CCONJ et
similitudes NOUN similitude
1 NUM 1
. PUNCT .
Deux NUM Deux
matrices NOUN matrice
M NOUN m
et CCONJ et
N ADJ n
de ADP de
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
sont VERB être ind_pre
dites VERB dire par_pas ind_pre
équivalentes ADJ équivalent
si SCONJ si
: PUNCT :
Si SCONJ si
c' PRON ce
est VERB être ind_pre
le DET le
cas NOUN cas
, PUNCT ,
on PRON on
note NOUN note
Cela PRON cela
définit VERB définir ind_pre
une DET un
relation NOUN relation
sur ADP sur
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
appelée VERB appeler par_pas
équivalence NOUN équivalence
. PUNCT .
2 NUM 2
. PUNCT .
Deux NUM Deux
matrices NOUN matrice
M NOUN m
et CCONJ et
N ADJ n
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
sont VERB être ind_pre
dites VERB dire par_pas ind_pre
semblables ADJ semblable
si SCONJ si
: PUNCT :
Si SCONJ si
c' PRON ce
est VERB être ind_pre
le DET le
cas NOUN cas
, PUNCT ,
on PRON on
note NOUN note
Cela PRON cela
définit VERB définir ind_pre
une DET un
relation NOUN relation
sur ADP sur
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
appelée VERB appeler par_pas
similitude ADJ similitud
. PUNCT .
D' ADP de
après ADP après
la DET le
formule NOUN formule
de ADP de
changement NOUN changement
de ADP de
base NOUN base
( PUNCT (
proposition NOUN proposition
2.5 NUM 2.5
, PUNCT ,
page NOUN page
111 NUM 111
) PUNCT )
: PUNCT :
deux NUM deux
matrices NOUN matrice
de ADP de
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
sont VERB être ind_pre
équivalentes ADJ équivalent
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
elles PRON lui
représentent VERB représenter ind_pre
la DET le
même ADJ même
application NOUN application
deux NUM deux
matrices NOUN matrice
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
sont VERB être ind_pre
semblables ADJ semblable
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
elles PRON lui
représentent VERB représenter ind_pre
le DET le
même ADJ même
endomorphisme NOUN endomorphisme
. PUNCT .
1 NUM 1
. PUNCT .
L' DET le
équivalence NOUN équivalence
est VERB être ind_pre
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
sur ADP sur
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
2 NUM 2
. PUNCT .
La DET le
similitude NOUN similitude
est VERB être ind_pre
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
sur ADP sur
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
Démonstration NOUN démonstration
Laissée VERB laisser par_pas
en ADP en
exercice NOUN exercice
( PUNCT (
utiliser VERB utiliser inf
la DET le
formule NOUN formule
de ADP de
changement NOUN changement
de ADP de
base NOUN base
et CCONJ et
les DET le
propriété NOUN propriété
des ADP de
matrices NOUN matrice
de ADP de
passage NOUN passage
) PUNCT )
. PUNCT .
Notation NOUN notation
2.2 NUM 2.2
Nous PRON nous
noterons VERB noter fut_sim
Jn VERB jn
, PUNCT ,
p NOUN p
, PUNCT ,
r ADP r
la DET le
matrice NOUN matrice
de ADP de
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
définie VERB définir par_pas
par ADP par
: PUNCT :
Proposition NOUN proposition
2.6 NUM 2.6
Caractérisation NOUN caractérisation
des ADP de
matrices NOUN matrice
équivalentes ADJ équivalent
Deux NUM Deux
matrices NOUN matrice
de ADP de
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
sont VERB être ind_pre
équivalentes ADJ équivalent
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
elles PRON lui
ont VERB avoir ind_pre
même ADV même
rang NOUN rang
. PUNCT .
Démonstration NOUN démonstration
Soit VERB être sub_pre
M NOUN m
et CCONJ et
N NOUN n
deux NUM deux
matrices NOUN matrice
de ADP de
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
Supposons VERB supposer imper
- PUNCT -
les DET le
équivalentes NOUN équivalente
, PUNCT ,
il PRON il
existe VERB exister ind_pre
P X P
GLn PROPN GLn
( PUNCT (
K NOUN k
) PUNCT )
et CCONJ et
Q NOUN q
GLp PROPN GLp
( PUNCT (
K NOUN k
) PUNCT )
telles ADJ tel
que SCONJ que
N NOUN n
P NOUN p
M NOUN m
Q. NOUN q.
En ADP en
notant VERB noter par_pre
uX CCONJ ux
l' DET le
application NOUN application
linéaire ADJ linéaire
canoniquement ADV canoniquement
associée VERB associer par_pas
à ADP à
une DET un
matrice NOUN matrice
X NOUN x
, PUNCT ,
on PRON on
a VERB avoir ind_pre
uN DET un
uP NOUN up
uM ADJ um
uQ NOUN uq
La DET le
conservation NOUN conservation
du ADP de
rang NOUN rang
en ADP en
découle NOUN découle
, PUNCT ,
car CCONJ car
uP ADP up
et CCONJ et
uQ NOUN uq
sont VERB être ind_pre
inversibles ADJ inversible
( PUNCT (
voir VERB voir inf
la DET le
remarque NOUN remarque
2.14 NUM 2.14
, PUNCT ,
page NOUN page
115 NUM 115
) PUNCT )
. PUNCT .
Supposons VERB supposer ind_pre
que SCONJ que
rang NOUN rang
N ADJ n
rang NOUN rang
M NOUN m
. PUNCT .
Posons VERB poser ind_pre
r X r
rang(M ADJ rang(m
) PUNCT )
rang(N VERB rang(n
) PUNCT )
. PUNCT .
La DET le
factorisation NOUN factorisation
de ADP de
uM NOUN um
nous PRON nous
donne VERB donner ind_pre
l' DET le
existence NOUN existence
d' ADP de
un DET un
supplémentaire ADJ supplémentaire
E1 NOUN e1
de ADP de
Ker(uM NOUN ker(um
) PUNCT )
isomorphe NOUN isomorphe
à ADP à
Im(uM NOUN im(um
) PUNCT )
. PUNCT .
Soit VERB être sub_pre
( PUNCT (
e1 NOUN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
er PROPN er
) PUNCT )
une DET un
base NOUN base
de ADP de
E1 PROPN E1
, PUNCT ,
que SCONJ que
l' PRON l'
on PRON on
complète ADJ complet
avec ADP avec
une DET un
base NOUN base
( PUNCT (
er1 PROPN er1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
de ADP de
Ker(uM NOUN ker(um
) PUNCT )
ce PRON ce
qui PRON qui
nous PRON nous
donne VERB donner ind_pre
une DET un
base NOUN base
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ep NOUN ep
) PUNCT )
de ADP de
Kp NOUN kp
. PUNCT .
Alors ADV alors
( PUNCT (
uM NOUN um
( PUNCT (
e1 NOUN e1
) PUNCT )
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
uM ADJ um
( PUNCT (
er NOUN er
) PUNCT )
) PUNCT )
est VERB être ind_pre
une DET un
partie NOUN partie
libre ADJ libre
de ADP de
Kn PROPN Kn
que SCONJ que
l' PRON l'
on PRON on
complète ADJ complet
en ADP en
une DET un
base NOUN base
E NOUN e
0 NUM 0
de ADP de
Kn PROPN Kn
. PUNCT .
On PRON on
a VERB avoir ind_pre
alors ADV alors
, PUNCT ,
par ADP par
construction NOUN construction
des ADP de
bases NOUN base
E ADJ e
et CCONJ et
E NOUN e
0 NUM 0
: PUNCT :
De ADP de
même ADV même
, PUNCT ,
on PRON on
démontre VERB démontrer ind_pre
que SCONJ que
N NOUN n
Jn VERB jn
, PUNCT ,
p NOUN p
, PUNCT ,
r X r
. PUNCT .
Puisque SCONJ puisque
est VERB être ind_pre
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
, PUNCT ,
on PRON on
a VERB avoir ind_pre
donc ADV donc
M NOUN m
N ADJ n
. PUNCT .
On PRON on
a VERB avoir
donc ADV donc
démontré VERB démontrer pas_cop
qu' SCONJ que
il PRON il
y PRON y
a VERB avoir ind_pre
min(n PROPN min(n
, PUNCT ,
p NOUN p
) PUNCT )
1 NUM 1
classe NOUN classe
d' ADP de
équivalence NOUN équivalence
pour ADP pour
la DET le
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
dans ADP dans
Mn PRON mn
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
chaque DET chaque
classe NOUN classe
d' ADP de
équivalence NOUN équivalence
est VERB être ind_pre
l' DET le
ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
de ADP de
rang NOUN rang
r ADP r
0 NUM 0
, PUNCT ,
min(n NOUN min(n
, PUNCT ,
p NOUN p
) PUNCT )
et CCONJ et
un DET un
représentant NOUN représentant
de ADP de
chaque DET chaque
classe NOUN classe
est VERB être ind_pre
Jn PRON jn
, PUNCT ,
p NOUN p
, PUNCT ,
r X r
. PUNCT .
Il PRON il
est VERB être ind_pre
beaucoup ADV beaucoup
plus ADV plus
difficile ADJ difficile
de ADP de
caractériser VERB caractériser inf
les DET le
classes NOUN classe
d' ADP de
équivalence NOUN équivalence
pour ADP pour
la DET le
similitude NOUN similitude
( PUNCT (
voir VERB voir inf
la DET le
partie NOUN partie
sur ADP sur
les DET le
classes NOUN classe
de ADP de
similitude NOUN similitude
dans ADP dans
chapitre NOUN chapitre
4 NUM 4
sur ADP sur
la DET le
réduction NOUN réduction
des ADP de
endormophismes NOUN endormophisme
) PUNCT )
. PUNCT .
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
si SCONJ si
A ADP à
B NOUN b
, PUNCT ,
alors ADV alors
rang(A NOUN rang(a
) PUNCT )
rang(B NOUN rang(b
) PUNCT )
et CCONJ et
trace(A PROPN trace(A
) PUNCT )
trace(B PRON trace(b
) PUNCT )
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Trouver VERB trouver inf
un DET un
exemple NOUN exemple
où PRON où
rang(A X rang(A
) PUNCT )
rang(B NOUN rang(b
) PUNCT )
et CCONJ et
trace(A PROPN trace(A
) PUNCT )
trace(B PRON trace(b
) PUNCT )
mais CCONJ mais
A NOUN a
et CCONJ et
B NOUN b
sont VERB être ind_pre
pas ADV pas
semblables ADJ semblable
. PUNCT .
( PUNCT (
c NOUN c
) PUNCT )
Trouver VERB trouver inf
un DET un
exemple NOUN exemple
où PRON où
A NOUN a
et CCONJ et
B NOUN b
sont VERB être ind_pre
équivalentes ADJ équivalent
mais CCONJ mais
ne ADV ne
sont VERB être ind_pre
pas ADV pas
semblables ADJ semblable
. PUNCT .
2.6.2 NUM 2.6.2
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
soit VERB être sub_pre
f NUM f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Justifier VERB justifier inf
que SCONJ que
la DET le
trace NOUN trace
de ADP de
MatE PROPN MatE else
( PUNCT (
f NOUN f
) PUNCT )
ne ADV ne
dépend VERB dépendre ind_pre
pas ADV pas
de ADP de
la DET le
base NOUN base
E NOUN e
de ADP de
E PROPN E
choisie VERB choisir par_pas
. PUNCT .
On PRON on
définit VERB définir ind_pre
alors ADV alors
la DET le
trace NOUN trace
de ADP de
f PRON f
, PUNCT ,
notée VERB noter par_pas
trace(f PROPN trace(f
) PUNCT )
, PUNCT ,
comme SCONJ comme
la DET le
valeur NOUN valeur
de ADP de
trace(MatE NOUN trace(mate
( PUNCT (
f NOUN f
) PUNCT )
) PUNCT )
dans ADP dans
ne ADV ne
importe VERB importer ind_pre
quelle DET quel
base NOUN base
E NOUN e
de ADP de
E. PROPN E.
( PUNCT (
b NOUN b
) PUNCT )
Soit VERB être sub_pre
p NOUN p
un DET un
projecteur NOUN projecteur
de ADP de
E. PROPN E.
Démontrer VERB démontrer inf
que SCONJ que
trace(p AUX trace(p
) PUNCT )
rang(p PROPN rang(p
) PUNCT )
. PUNCT .
2.6.3 NUM 2.6.3
Démontrer VERB démontrer inf
que SCONJ que
A NOUN a
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
rang(t ADJ rang(t
A NOUN a
) PUNCT )
rang(A PROPN rang(A
) PUNCT )
2.6.4 NUM 2.6.4
Démontrer VERB démontrer inf
que SCONJ que
toute DET tout
matrice NOUN matrice
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
non ADV non
inversible ADJ inversible
est VERB être ind_pre
équivalente ADJ équivalent
à ADP à
une DET un
matrice NOUN matrice
B NOUN b
telle ADJ tel
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
k DET k
N ADJ n
tel ADJ tel
que SCONJ que
B NOUN b
k NOUN k
0p PROPN 0p
( PUNCT (
matrice NOUN matrice
dite VERB dire par_pas
nilpotente ADJ nilpotent
) PUNCT )
. PUNCT .
Systèmes NOUN système
linéaires ADJ linéaire
Algorithme NOUN algorithme
du ADP de
pivot NOUN pivot
de ADP de
Gauss NOUN gauss
Notation NOUN notation
2.3 NUM 2.3
Soit VERB être sub_pre
( PUNCT (
k NOUN k
, PUNCT ,
) PUNCT )
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
k NOUN k
6 NUM 6
et CCONJ et
K NOUN k
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
matrice NOUN matrice
de ADP de
transvection NOUN transvection
la DET le
matrice NOUN matrice
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
définie VERB définir par_pas
par ADP par
: PUNCT :
Cette DET ce
matrice NOUN matrice
est VERB être ind_pre
inversible ADJ inversible
et CCONJ et
son DET son
inverse NOUN inverse
est VERB être ind_pre
: PUNCT :
Démonstration NOUN démonstration
Un DET un
calcul NOUN calcul
direct ADJ direct
donne VERB donner ind_pre
Notation NOUN notation
2.4 NUM 2.4
Soit VERB être sub_pre
k DET k
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
K NOUN k
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
matrice NOUN matrice
de ADP de
dilatation NOUN dilatation
la DET le
matrice NOUN matrice
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
définie VERB définir par_pas
par ADP par
: PUNCT :
à ADP à
la DET le
k PROPN k
- NOUN -
ième ADJ ième
place NOUN place
Cette DET ce
matrice NOUN matrice
est VERB être ind_pre
inversible ADJ inversible
et CCONJ et
son DET son
inverse NOUN inverse
est VERB être ind_pre
: PUNCT :
Démonstration NOUN démonstration
Un DET un
calcul NOUN calcul
immédiat ADJ immédiat
démontre VERB démontrer ind_pre
que SCONJ que
Notation NOUN notation
2.5 NUM 2.5
Soit VERB être sub_pre
une DET un
permutation NOUN permutation
a VERB avoir ind_pre
de ADP de
1 PRON 1
, PUNCT ,
p NOUN p
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
matrice NOUN matrice
de ADP de
permutation NOUN permutation
la DET le
matrice NOUN matrice
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
définie VERB définir par_pas
par ADP par
: PUNCT :
Cette DET ce
matrice NOUN matrice
est VERB être ind_pre
inversible ADJ inversible
et CCONJ et
son DET son
inverse NOUN inverse
est VERB être ind_pre
: PUNCT :
a. VERB avoir ind_pre
C' PRON ce
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
une DET un
bijection NOUN bijection
de ADP de
de ADP de
1 PRON 1
, PUNCT ,
p NOUN p
dans ADP dans
1 PRON 1
, PUNCT ,
p. NOUN p.
Démonstration NOUN démonstration
Si SCONJ si
et CCONJ et
0 NUM 0
sont VERB être ind_pre
deux NUM deux
permutations NOUN permutation
de ADP de
1 PRON 1
, PUNCT ,
p NOUN p
alors ADV alors
on PRON on
remarque VERB remarquer ind_pre
que SCONJ que
: PUNCT :
On PRON on
prend VERB prendre ind_pre
alors ADV alors
0 NUM 0
1 NUM 1
en ADP en
remarquant VERB remarquer par_pre
que SCONJ que
si SCONJ si
id1,p ADV id1,p
, PUNCT ,
alors ADV alors
P NOUN p
Ip NUM Ip
. PUNCT .
Soit VERB être sub_pre
A ADP à
ai NOUN ai
, PUNCT ,
j PROPN j
( PUNCT (
i X i
, PUNCT ,
j)1,n1,p PROPN j)1,n1,p
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
Notons VERB noter imper
L1 PRON l1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Ln SCONJ ln
les DET le
lignes NOUN ligne
de ADP de
A NOUN a
( PUNCT (
vues VERB voir par_pas
comme ADP comme
des DET un
matrices NOUN matrice
1 NUM 1
p NOUN p
) PUNCT )
, PUNCT ,
et CCONJ et
C1 NOUN c1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Cp NOUN cp
les DET le
colonnes NOUN colonne
de ADP de
A NOUN a
( PUNCT (
vues VERB voir par_pas
comme ADP comme
des DET un
matrices NOUN matrice
n AUX n
1 NUM 1
) PUNCT )
. PUNCT .
Produit NOUN produit
à ADP à
gauche NOUN gauche
manipulation NOUN manipulation
des ADP de
lignes NOUN ligne
! PUNCT !
1 NUM 1
. PUNCT .
Transvection NOUN transvection
Cela PRON cela
revient VERB revenir ind_pre
donc ADV donc
à ADP à
faire VERB faire inf
la DET le
transformation NOUN transformation
( PUNCT (
dite VERB dire par_pas
opération NOUN opération
élémentaire ADJ élémentaire
) PUNCT )
: PUNCT :
( PUNCT (
on PRON on
remplace VERB remplacer ind_pre
la DET le
k NOUN k
- NOUN -
ième ADJ ième
ligne NOUN ligne
par ADP par
la DET le
k NOUN k
- NOUN -
ième ADJ ième
ligne NOUN ligne
à ADP à
laquelle PRON lequel
on PRON on
a VERB avoir
ajouté VERB ajouter pas_cop
fois NOUN fois
la DET le
-ième ADJ -ièm
ligne NOUN ligne
) PUNCT )
. PUNCT .
2 NUM 2
. PUNCT .
Dilatation NOUN dilatation
Cela PRON cela
revient VERB revenir ind_pre
donc ADV donc
à ADP à
faire VERB faire inf
la DET le
transformation NOUN transformation
( PUNCT (
dite VERB dire par_pas
opération NOUN opération
élémentaire ADJ élémentaire
) PUNCT )
: PUNCT :
( PUNCT (
on PRON on
remplace VERB remplacer ind_pre
la DET le
k NOUN k
- NOUN -
ième ADJ ième
ligne NOUN ligne
par ADP par
fois NOUN fois
la DET le
k NOUN k
- NOUN -
ième ADJ ième
ligne NOUN ligne
) PUNCT )
. PUNCT .
3 NUM 3
. PUNCT .
Permutation NOUN permutation
Cela PRON cela
revient VERB revenir ind_pre
donc ADV donc
à ADP à
faire VERB faire inf
la DET le
transformation NOUN transformation
( PUNCT (
dite VERB dire par_pas
opération NOUN opération
élémentaire ADJ élémentaire
) PUNCT )
: PUNCT :
Soit VERB être sub_pre
A ADP à
ai NOUN ai
, PUNCT ,
j PROPN j
( PUNCT (
i X i
, PUNCT ,
j)1,n1,p PROPN j)1,n1,p
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
Notons VERB noter imper
L1 PRON l1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Ln SCONJ ln
les DET le
lignes NOUN ligne
de ADP de
A NOUN a
( PUNCT (
vues VERB voir par_pas
comme ADP comme
des DET un
matrices NOUN matrice
1 NUM 1
p NOUN p
) PUNCT )
, PUNCT ,
et CCONJ et
C1 NOUN c1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Cp NOUN cp
les DET le
colonnes NOUN colonne
de ADP de
A NOUN a
( PUNCT (
vues VERB voir par_pas
comme ADP comme
des DET un
matrices NOUN matrice
n AUX n
1 NUM 1
) PUNCT )
. PUNCT .
Produit NOUN produit
à ADP à
droite NOUN droite
manipulation NOUN manipulation
des ADP de
colonnes NOUN colonne
! PUNCT !
1 NUM 1
. PUNCT .
Transvection NOUN transvection
Cela PRON cela
revient VERB revenir ind_pre
donc ADV donc
à ADP à
faire VERB faire inf
la DET le
transformation NOUN transformation
( PUNCT (
dite VERB dire par_pas
opération NOUN opération
élémentaire ADJ élémentaire
) PUNCT )
: PUNCT :
( PUNCT (
on PRON on
remplace VERB remplacer ind_pre
la DET le
-ième ADJ -ièm
colonne NOUN colonne
par ADP par
la DET le
-ième ADJ -ièm
colonne NOUN colonne
à ADP à
laquelle PRON lequel
on PRON on
a VERB avoir
ajouté VERB ajouter pas_cop
fois NOUN fois
la DET le
k NOUN k
- NOUN -
ième ADJ ième
colonne NOUN colonne
) PUNCT )
. PUNCT .
2 NUM 2
. PUNCT .
Dilatation NOUN dilatation
Cela PRON cela
revient VERB revenir ind_pre
donc ADV donc
à ADP à
faire VERB faire inf
la DET le
transformation NOUN transformation
( PUNCT (
dite VERB dire par_pas
opération NOUN opération
élémentaire ADJ élémentaire
) PUNCT )
: PUNCT :
( PUNCT (
on PRON on
remplace VERB remplacer ind_pre
la DET le
k NOUN k
- NOUN -
ième ADJ ième
colonne NOUN colonne
par ADP par
fois NOUN fois
la DET le
k NOUN k
- NOUN -
ième ADJ ième
colonne NOUN colonne
) PUNCT )
. PUNCT .
3 NUM 3
. PUNCT .
Permutation NOUN permutation
Cela PRON cela
revient VERB revenir ind_pre
donc ADV donc
à ADP à
faire VERB faire inf
la DET le
transformation NOUN transformation
( PUNCT (
dite VERB dire par_pas
opération NOUN opération
élémentaire ADJ élémentaire
) PUNCT )
: PUNCT :
Lorsqu' SCONJ lorsque
on PRON on
utilise VERB utiliser ind_pre
des DET un
opérations NOUN opération
élémentaires ADJ élémentaire
, PUNCT ,
c' PRON ce
est VERB être ind_pre
généralement ADV généralement
pour ADP pour
faire VERB faire inf
apparaître VERB apparaître inf
le DET le
plus ADV plus
de ADP de
0 NUM 0
possibles ADJ possible
dans ADP dans
la DET le
matrice NOUN matrice
. PUNCT .
Il PRON il
est VERB être ind_pre
alors ADV alors
indispensable ADJ indispensable
de ADP de
présenter VERB présenter inf
les DET le
calculs NOUN calcul
de ADP de
manière NOUN manière
lisible ADJ lisible
par ADP par
le DET le
lecteur NOUN lecteur
. PUNCT .
Le DET le
principe NOUN principe
est VERB être ind_pre
: PUNCT :
1 NUM 1
. PUNCT .
on PRON on
encadre VERB encadrer ind_pre
le DET le
pivot NOUN pivot
( PUNCT (
terme NOUN terme
dont PRON dont
on PRON on
se PRON se
sert VERB servir ind_pre
pour ADP pour
faire VERB faire inf
apparaître VERB apparaître inf
les DET le
0 NUM 0
) PUNCT )
2 NUM 2
. PUNCT .
on PRON on
signale VERB signaler ind_pre
la DET le
ou CCONJ ou
les DET le
opérations NOUN opération
élémentaires ADJ élémentaire
effectuées VERB effectuer par_pas
sous ADP sous
la DET le
matrice NOUN matrice
. PUNCT .
Soit VERB être sub_pre
la DET le
matrice NOUN matrice
: PUNCT :
Théorème NOUN théorème
2.1 NUM 2.1
du ADP de
pivot NOUN pivot
généralisé ADJ généraliser
de ADP de
Gauss NOUN gauss
Soit VERB être sub_pre
A ADP à
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
de ADP de
rang NOUN rang
r NOUN r
, PUNCT ,
alors ADV alors
il PRON il
existe VERB exister ind_pre
des DET un
matrices NOUN matrice
de ADP de
transvection NOUN transvection
- PUNCT -
dilatation NOUN dilatation
- PUNCT -
permutation NOUN permutation
de ADP de
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
notées VERB noter par_pas
R1 NOUN r1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Rq NOUN rq
et CCONJ et
des ADP de
matrices NOUN matrice
de ADP de
transvection NOUN transvection
- PUNCT -
dilatation NOUN dilatation
- PUNCT -
permutation NOUN permutation
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
notées VERB noter par_pas
S1 NOUN s1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Ss PROPN Ss
telles ADJ tel
Démonstration NOUN démonstration
( PUNCT (
algorithme NOUN algorithme
du ADP de
pivot NOUN pivot
de ADP de
Gauss NOUN gauss
généralisé ADJ généraliser
) PUNCT )
La DET le
démonstration NOUN démonstration
est VERB être ind_pre
essentiellement ADV essentiellement
l' DET le
algorithme NOUN algorithme
du ADP de
pivot NOUN pivot
de ADP de
Gauss NOUN gauss
généralisé ADJ généraliser
. PUNCT .
Si SCONJ si
A VERB avoir ind_pre
0n PROPN 0n
, PUNCT ,
p NOUN p
, PUNCT ,
alors ADV alors
il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
rien PRON rien
à ADP à
démontrer VERB démontrer inf
( PUNCT (
on PRON on
a VERB avoir ind_pre
A ADP à
Jn VERB jn
, PUNCT ,
p,0 PROPN p,0
0n PROPN 0n
, PUNCT ,
p NOUN p
avec ADP avec
r X r
0 NUM 0
) PUNCT )
. PUNCT .
Supposons VERB supposer ind_pre
A ADP à
6 NUM 6
0n VERB 0n
, PUNCT ,
p NOUN p
. PUNCT .
1 NUM 1
. PUNCT .
Il PRON il
existe VERB exister ind_pre
alors ADV alors
un DET un
élément NOUN élément
non ADV non
nul ADJ nul
de ADP de
A NOUN a
, PUNCT ,
qu' SCONJ que
on PRON on
place VERB placer ind_pre
en ADP en
position NOUN position
( PUNCT (
1 NUM 1
, PUNCT ,
1 NUM 1
) PUNCT )
par ADP par
permutation NOUN permutation
, PUNCT ,
puis CCONJ puis
qu' SCONJ que
on PRON on
transforme VERB transformer ind_pre
en ADP en
1 PRON 1
par ADP par
dilatation NOUN dilatation
. PUNCT .
Ce DET ce
coefficient NOUN coefficient
s' PRON se
appelle VERB appeler ind_pre
le DET le
pivot NOUN pivot
. PUNCT .
2 NUM 2
. PUNCT .
Par ADP par
transvection NOUN transvection
sur ADP sur
les DET le
lignes NOUN ligne
, PUNCT ,
on PRON on
annule VERB annuler ind_pre
tous ADJ tout
les DET le
coefficients NOUN coefficient
en-dessous ADV en-dessous
du ADP de
pivot NOUN pivot
et CCONJ et
par ADP par
transvection NOUN transvection
sur ADP sur
les DET le
colonnes NOUN colonne
, PUNCT ,
on PRON on
annule VERB annuler ind_pre
tous ADJ tout
les DET le
coefficients NOUN coefficient
à ADP à
droite NOUN droite
du ADP de
pivot NOUN pivot
. PUNCT .
3 NUM 3
. PUNCT .
On PRON on
obtient VERB obtenir ind_pre
donc ADV donc
une DET un
matrice NOUN matrice
de ADP de
la DET le
forme NOUN forme
( PUNCT (
voir VERB voir inf
la DET le
partie NOUN partie
suivante ADJ suivant
sur ADP sur
les DET le
matrices NOUN matrice
- NOUN -
blocs NOUN bloc
) PUNCT )
: PUNCT :
Si SCONJ si
A0 PROPN A0
est VERB être ind_pre
vide ADJ vide
( PUNCT (
n NOUN n
1 PRON 1
ou CCONJ ou
p NOUN p
1 NUM 1
) PUNCT )
ou CCONJ ou
si SCONJ si
A0 NOUN a0
0n1,p1 PROPN 0n1,p1
, PUNCT ,
on PRON on
s' PRON se
arrête VERB arrêter ind_pre
. PUNCT .
Sinon ADV sinon
on PRON on
recommence VERB recommencer ind_pre
l' DET le
algorithme NOUN algorithme
avec ADP avec
A0 PROPN A0
à ADP à
la DET le
place NOUN place
de ADP de
A X A
À ADP à
la DET le
fin NOUN fin
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
une DET un
matrice NOUN matrice
Jn PROPN Jn
, PUNCT ,
p NOUN p
, PUNCT ,
r X r
, PUNCT ,
obtenue VERB obtenir par_pas
par ADP par
opérations NOUN opération
élémentaires ADJ élémentaire
sur ADP sur
les DET le
lignes NOUN ligne
et CCONJ et
les DET le
colonnes NOUN colonne
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
. PUNCT .
On PRON on
a VERB avoir ind_pre
nécessairement ADV nécessairement
r PRON r
rang(A VERB rang(er
) PUNCT )
, PUNCT ,
car CCONJ car
le DET le
rang NOUN rang
est VERB être ind_pre
invariant VERB invarier
par ADP par
multiplication NOUN multiplication
par ADP par
une DET un
matrice NOUN matrice
inversible ADJ inversible
( PUNCT (
remarque VERB remarquer ind_pre
2.14 NUM 2.14
, PUNCT ,
page NOUN page
115 NUM 115
) PUNCT )
. PUNCT .
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
toute DET tout
matrice NOUN matrice
de ADP de
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
de ADP de
rang NOUN rang
r NOUN r
est VERB être ind_pre
équivalente ADJ équivalent
à ADP à
Jn PROPN Jn
, PUNCT ,
p NOUN p
, PUNCT ,
r X r
. PUNCT .
On PRON on
retrouve VERB retrouver ind_pre
ainsi ADV ainsi
le DET le
résultat NOUN résultat
de ADP de
la DET le
proposition NOUN proposition
2.6 NUM 2.6
, PUNCT ,
page NOUN page
120 NUM 120
. PUNCT .
En ADP en
utilisant VERB utiliser par_pre
Wxmaxima PROPN Wxmaxima
: PUNCT :
On PRON on
peut VERB pouvoir ind_pre
aussi ADV aussi
travailler VERB travailler inf
à ADP à
la DET le
main NOUN main
. PUNCT .
Que PRON que
se PRON se
passe VERB passer ind_pre
-t PRON -t
-il PRON il
lorsque SCONJ lorsque
, PUNCT ,
par ADP par
exemple NOUN exemple
, PUNCT ,
la DET le
première ADJ premier
colonne NOUN colonne
est VERB être ind_pre
remplie VERB remplir par_pas
de ADP de
0 PRON 0
? PUNCT ?
On PRON on
commence VERB commencer ind_pre
par ADP par
permuter VERB permuter inf
les DET le
colonnes NOUN colonne
! PUNCT !
Ici ADV ici
, PUNCT ,
nous PRON nous
allons VERB aller
écrire VERB écrire fut_pro
les DET le
matrices NOUN matrice
nous PRON nous
- PRON -
mêmes PRON même
... PUNCT ...
Toute DET tout
matrice NOUN matrice
de ADP de
permutation NOUN permutation
peut VERB pouvoir ind_pre
s' PRON se
exprimer VERB exprimer inf
comme ADP comme
produit NOUN produit
de ADP de
matrices NOUN matrice
de ADP de
transvection NOUN transvection
- ADJ -
dilatation NOUN dilatation
. PUNCT .
Démonstration NOUN démonstration
1 NUM 1
. PUNCT .
Toute DET tout
permutation NOUN permutation
de ADP de
1 PRON 1
, PUNCT ,
p NOUN p
peut VERB pouvoir ind_pre
s' PRON se
exprimer VERB exprimer inf
comme ADP comme
une DET un
composée NOUN composée
de ADP de
transpositions NOUN transposition
( PUNCT (
une DET un
permutation NOUN permutation
qui PRON qui
échange VERB échanger ind_pre
seulement ADV seulement
deux NUM deux
éléments NOUN élément
) PUNCT )
. PUNCT .
Ceci PRON ceci
peut VERB pouvoir ind_pre
se PRON se
démontrer VERB démontrer inf
par ADP par
récurrence NOUN récurrence
sur ADP sur
p. NOUN p.
Initialisation NOUN initialisation
p NOUN p
1 PRON 1
, PUNCT ,
c' PRON ce
est VERB être ind_pre
évident ADJ évident
. PUNCT .
Hérédité PROPN Hérédité
Soit VERB être sub_pre
p NOUN p
N. PROPN N.
Supposons VERB supposer ind_pre
le DET le
résultat NOUN résultat
vrai ADJ vrai
au ADP à
rang NOUN rang
p. NOUN p.
Soit VERB être sub_pre
une DET un
permutation NOUN permutation
de ADP de
1 PRON 1
, PUNCT ,
p NOUN p
1 NUM 1
. PUNCT .
transposition NOUN transposition
k NOUN k
, PUNCT ,
p1 NOUN p1
de ADP de
1 PRON 1
, PUNCT ,
p NOUN p
1 NUM 1
définie VERB définir par_pas
par ADP par
: PUNCT :
On PRON on
pose VERB poser ind_pre
alors ADV alors
0 NUM 0
k NOUN k
, PUNCT ,
p1 NOUN p1
. PUNCT .
On PRON on
applique VERB appliquer ind_pre
l' DET le
hypothèse NOUN hypothèse
de ADP de
récurrence NOUN récurrence
à ADP à
0 NUM 0
1,p PROPN 1,p
2 NUM 2
. PUNCT .
Soit VERB être sub_pre
P NOUN p
une DET un
matrice NOUN matrice
de ADP de
permutation NOUN permutation
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
On PRON on
écrit VERB écrire ind_pre
où PRON où
les DET le
j PRON j
sont VERB être ind_pre
des DET un
transpositions NOUN transposition
de ADP de
1 PRON 1
, PUNCT ,
p. NOUN p.
On PRON on
a VERB avoir ind_pre
alors ADV alors
3 NUM 3
. PUNCT .
Il PRON il
suffit VERB suffire ind_pre
donc ADV donc
de ADP de
démontrer VERB démontrer inf
le DET le
résultat NOUN résultat
pour ADP pour
une DET un
transposition NOUN transposition
. PUNCT .
Par ADP par
décalage NOUN décalage
d' ADP de
indices NOUN indice
, PUNCT ,
il PRON il
suffit VERB suffire ind_pre
de ADP de
démontrer VERB démontrer inf
cela PRON cela
pour ADP pour
la DET le
transposition NOUN transposition
qui PRON qui
échange NOUN échange
1 NUM 1
et CCONJ et
2 NUM 2
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
procéder VERB procéder inf
de ADP de
la DET le
manière NOUN manière
suivante ADJ suivant
: PUNCT :
Soit VERB être sub_pre
A ADP à
GLp PROPN GLp
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
alors ADV alors
il PRON il
existe VERB exister ind_pre
des DET un
matrices NOUN matrice
de ADP de
transvection NOUN transvection
- PUNCT -
dilatation NOUN dilatation
- PUNCT -
permutation NOUN permutation
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
notées VERB noter par_pas
R1 PROPN R1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Rq NOUN rq
et CCONJ et
des ADP de
matrices NOUN matrice
de ADP de
transvection NOUN transvection
- PUNCT -
dilatation NOUN dilatation
- PUNCT -
permutation NOUN permutation
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
notées VERB noter par_pas
S1 NOUN s1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Ss PROPN Ss
telles ADJ tel
que SCONJ que
: PUNCT :
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
quand SCONJ quand
A NOUN a
est VERB être ind_pre
inversible ADJ inversible
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
se PRON se
contenter VERB contenter inf
de ADP de
travailler VERB travailler inf
soit VERB être sub_pre
uniquement ADV uniquement
sur ADP sur
les DET le
lignes NOUN ligne
, PUNCT ,
soit VERB être sub_pre
uniquement ADV uniquement
sur ADP sur
les DET le
colonnes NOUN colonne
. PUNCT .
Démonstration NOUN démonstration
En ADP en
reprenant VERB reprendre par_pre
le DET le
résultat NOUN résultat
du ADP de
théorème NOUN théorème
2.1 NUM 2.1
, PUNCT ,
page NOUN page
127 NUM 127
, PUNCT ,
il PRON il
existe VERB exister ind_pre
un DET un
produit NOUN produit
de ADP de
matrices NOUN matrice
de ADP de
transvection NOUN transvection
- PUNCT -
dilatationpermutation VERB dilatationpermutation
de ADP de
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
noté VERB noter par_pas
R NOUN r
et CCONJ et
un DET un
produit NOUN produit
de ADP de
matrices NOUN matrice
de ADP de
transvection NOUN transvection
- PUNCT -
dilatation NOUN dilatation
- PUNCT -
permutation NOUN permutation
de ADP de
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
noté VERB noter par_pas
S NOUN s
tels ADJ tel
que SCONJ que
: PUNCT :
car CCONJ car
rang(A NOUN rang(a
) PUNCT )
p NOUN p
( PUNCT (
car CCONJ car
A NOUN a
est VERB être ind_pre
inversible ADJ inversible
) PUNCT )
et CCONJ et
Jp PROPN Jp
, PUNCT ,
p NOUN p
, PUNCT ,
p NOUN p
Ip X Ip
. PUNCT .
En ADP en
multipliant VERB multiplier par_pre
à ADP à
gauche NOUN gauche
par ADP par
S NOUN s
et CCONJ et
à ADP à
droite NOUN droite
par ADP par
S NOUN s
1 NUM 1
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
( PUNCT (
S NOUN s
R NOUN r
) PUNCT )
A ADP à
Ip PROPN Ip
. PUNCT .
De ADP de
même ADV même
, PUNCT ,
A NOUN a
( PUNCT (
S NOUN s
R NOUN r
) PUNCT )
Ip X Ip
, PUNCT ,
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
. PUNCT .
Lorsque SCONJ lorsque
la DET le
matrice NOUN matrice
A NOUN a
est VERB être ind_pre
dans ADP dans
GLp PROPN GLp
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
se PRON se
limiter VERB limiter inf
à ADP à
au ADP à
plus ADV plus
une DET un
dilatation NOUN dilatation
de ADP de
type NOUN type
Dp NOUN dp
( PUNCT (
) PUNCT )
( PUNCT (
et CCONJ et
ne ADV ne
faire VERB faire inf
donc ADV donc
autrement ADV autrement
que SCONJ que
des DET un
transvections NOUN transvection
) PUNCT )
. PUNCT .
En ADP en
effet NOUN effet
, PUNCT ,
il PRON il
suffit VERB suffire ind_pre
de ADP de
savoir VERB savoir inf
le PRON le
faire VERB faire inf
sur ADP sur
une DET un
matrice NOUN matrice
2 NUM 2
2 NUM 2
( PUNCT (
a VERB avoir ind_pre
6 DET 6
0 NUM 0
et CCONJ et
b NOUN b
6 NUM 6
0 PRON 0
) PUNCT )
: PUNCT :
Il PRON il
est VERB être ind_pre
important ADJ important
de ADP de
noter VERB noter inf
que SCONJ que
: PUNCT :
1 NUM 1
. PUNCT .
Lorsque SCONJ lorsque
l' PRON l'
on PRON on
calcule VERB calculer ind_pre
un DET un
rang NOUN rang
: PUNCT :
on PRON on
peut VERB pouvoir ind_pre
travailler VERB travailler inf
à ADP à
la DET le
fois NOUN fois
sur ADP sur
les DET le
lignes NOUN ligne
et CCONJ et
les DET le
colonnes NOUN colonne
. PUNCT .
2 NUM 2
. PUNCT .
Lorsque SCONJ lorsque
l' PRON l'
on PRON on
résout VERB résoudre ind_pre
un DET un
système NOUN système
d' ADP de
équations NOUN équation
linéaires ADJ linéaire
, PUNCT ,
on PRON on
ne ADV ne
travaille VERB travailler ind_pre
que ADV que
sur ADP sur
les DET le
lignes NOUN ligne
. PUNCT .
3 NUM 3
. PUNCT .
Lorsque SCONJ lorsque
l' PRON l'
on PRON on
calcule VERB calculer ind_pre
un DET un
noyau NOUN noyau
, PUNCT ,
on PRON on
ne ADV ne
travaille VERB travailler ind_pre
que ADV que
sur ADP sur
les DET le
lignes NOUN ligne
. PUNCT .
4 NUM 4
. PUNCT .
Lorsque SCONJ lorsque
l' PRON l'
on PRON on
calcule VERB calculer ind_pre
une DET un
image NOUN image
, PUNCT ,
on PRON on
ne ADV ne
travaille VERB travailler ind_pre
que ADV que
sur ADP sur
les DET le
colonnes NOUN colonne
. PUNCT .
En ADP en
effet NOUN effet
, PUNCT ,
les DET le
opérations NOUN opération
élémentaires ADJ élémentaire
correspondent VERB correspondre ind_pre
à ADP à
des DET un
multiplications NOUN multiplication
par ADP par
des DET un
matrices NOUN matrice
inversibles ADJ inversible
. PUNCT .
Donc ADV donc
, PUNCT ,
lorsqu' SCONJ lorsque
on PRON on
multiplie VERB multiplier ind_pre
: PUNCT :
à ADP à
gauche NOUN gauche
, PUNCT ,
on PRON on
ne ADV ne
change VERB changer ind_pre
pas ADV pas
le DET le
rang NOUN rang
, PUNCT ,
ni CCONJ ni
le DET le
noyau NOUN noyau
( PUNCT (
manipulation NOUN manipulation
sur ADP sur
les DET le
lignes NOUN ligne
) PUNCT )
à ADP à
droite NOUN droite
, PUNCT ,
on PRON on
ne ADV ne
change VERB changer ind_pre
pas ADV pas
le DET le
rang NOUN rang
, PUNCT ,
ni CCONJ ni
l' DET le
image NOUN image
( PUNCT (
manipulation NOUN manipulation
sur ADP sur
les DET le
colonnes NOUN colonne
) PUNCT )
. PUNCT .
2.7.1 NUM 2.7.1
Soit VERB être sub_pre
la DET le
matrice NOUN matrice
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Calculer VERB calculer inf
son DET son
rang NOUN rang
r. NOUN r.
( PUNCT (
b NOUN b
) PUNCT )
Trouver VERB trouver inf
deux NUM deux
matrices NOUN matrice
P NOUN p
et CCONJ et
Q NOUN q
inversibles ADJ inversible
telles ADJ tel
que SCONJ que
: PUNCT :
2.7.2 NUM 2.7.2
Déterminer VERB déterminer inf
les PRON le
a VERB avoir ind_pre
K NOUN k
tels ADJ tel
que SCONJ que
la DET le
matrice NOUN matrice
: PUNCT :
soit VERB être sub_pre
inversible ADJ inversible
Démontrer VERB démontrer inf
que SCONJ que
A NOUN a
est VERB être ind_pre
inversible ADJ inversible
et CCONJ et
calculer VERB calculer inf
son DET son
inverse NOUN inverse
. PUNCT .
2.7.4 NUM 2.7.4
Soit VERB être sub_pre
la DET le
matrice NOUN matrice
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Déterminer VERB déterminer inf
le DET le
rang NOUN rang
de ADP de
A. PROPN A.
( PUNCT (
b NOUN b
) PUNCT )
Déterminer VERB déterminer inf
une DET un
base NOUN base
de ADP de
l' DET le
image NOUN image
de ADP de
A. PROPN A.
( PUNCT (
c NOUN c
) PUNCT )
Donner ADP donner
des DET un
équations NOUN équation
de ADP de
Im(A NOUN im(a
) PUNCT )
. PUNCT .
( PUNCT (
d NOUN d
) PUNCT )
Déterminer VERB déterminer inf
une DET un
base NOUN base
du ADP de
noyau NOUN noyau
de ADP de
A. PROPN A.
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
est VERB être ind_pre
un DET un
isomorphisme NOUN isomorphisme
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
A NOUN a
est VERB être ind_pre
inversible ADJ inversible
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Calculer VERB calculer inf
le DET le
rang NOUN rang
de ADP de
en ADP en
fonction NOUN fonction
de ADP de
celui PRON celui
de ADP de
A. PROPN A.
2.7.6 NUM 2.7.6
Soit VERB être sub_pre
A ADP à
une DET un
matrice NOUN matrice
de ADP de
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
tri-diagonale PROPN tri-diagonale
( PUNCT (
c' PRON ce
est ADV est
- ADV -
à ADV à
- ADV -
dire ADV dire
vérifiant VERB vérifier par_pre
ai VERB avoir ind_pre
, PUNCT ,
j PRON j
0 NUM 0
dès ADP dès
que SCONJ que
i DET i
j NOUN j
2 NUM 2
) PUNCT )
. PUNCT .
On PRON on
suppose VERB supposer ind_pre
de ADP de
plus ADV plus
que SCONJ que
Démontrer VERB démontrer inf
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
une DET un
matrice NOUN matrice
diagonale ADJ diagonal
D NOUN d
inversible ADJ inversible
, PUNCT ,
telle ADJ tel
que SCONJ que
D1 NOUN d1
A ADP à
D NOUN d
Sn PROPN Sn
( PUNCT (
R NOUN r
) PUNCT )
. PUNCT .
n NOUN n
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
soit VERB être sub_pre
0 NUM 0
, PUNCT ,
démontrer VERB démontrer inf
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
une DET un
matrice NOUN matrice
P NOUN p
Dn PROPN Dn
( PUNCT (
K NOUN k
) PUNCT )
GLn PROPN GLn
( PUNCT (
K NOUN k
) PUNCT )
telle ADJ tel
que SCONJ que
: PUNCT :
Systèmes NOUN système
linéaires ADJ linéaire
On PRON on
a VERB avoir
déjà ADV déjà
vu VERB voir pas_cop
au ADP à
chapitre NOUN chapitre
précédent ADJ précédent
( PUNCT (
section NOUN section
1.4.1 NUM 1.4.1
, PUNCT ,
page NOUN page
78 NUM 78
) PUNCT )
qu' SCONJ que
en ADP en
toute DET tout
généralité NOUN généralité
, PUNCT ,
un DET un
système NOUN système
linéaire ADJ linéaire
est VERB être ind_pre
une DET un
équation NOUN équation
de ADP de
la DET le
forme NOUN forme
: PUNCT :
où PRON où
u DET u
L NOUN l
( PUNCT (
E NOUN e
, PUNCT ,
E NOUN e
0 NUM 0
) PUNCT )
et CCONJ et
b NOUN b
E NOUN e
0 NUM 0
sont VERB être ind_pre
fixés VERB fixer par_pas
et CCONJ et
x NOUN x
est VERB être ind_pre
l' DET le
inconnue NOUN inconnue
( PUNCT (
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
sont VERB être ind_pre
des DET un
K NOUN k
- NOUN -
espaces NOUN espace
vectoriels NOUN vectoriel
) PUNCT )
. PUNCT .
Dans ADP dans
le DET le
cas NOUN cas
de ADP de
la DET le
dimension NOUN dimension
finie ADJ fini
et CCONJ et
une DET un
fois NOUN fois
des ADP de
bases NOUN base
fixées VERB fixer par_pas
, PUNCT ,
ce DET ce
système NOUN système
linéaire ADJ linéaire
est VERB être ind_pre
équivalent VERB équivaloir ind_pre
à ADP à
un DET un
système NOUN système
de ADP de
n AUX n
équations NOUN équation
à ADP à
n AUX n
inconnues ADJ inconnu
, PUNCT ,
que SCONJ que
l' PRON l'
on PRON on
peut VERB pouvoir ind_pre
écrire VERB écrire inf
sous ADP sous
forme NOUN forme
matricielle ADJ matriciel
: PUNCT :
où PRON où
A NOUN a
est VERB être ind_pre
la DET le
matrice NOUN matrice
n AUX n
p NOUN p
de ADP de
u PROPN u
, PUNCT ,
X NOUN x
la DET le
matrice NOUN matrice
p NOUN p
1 PRON 1
de ADP de
x ADP x
et CCONJ et
B NOUN b
la DET le
matrice NOUN matrice
n AUX n
1 PRON 1
de ADP de
b NOUN b
( PUNCT (
avec ADP avec
p NOUN p
dim ADP dim
E NOUN e
et CCONJ et
Lorsque SCONJ lorsque
l' PRON l'
on PRON on
a VERB avoir ind_pre
un DET un
système NOUN système
de ADP de
n AUX n
équations NOUN équation
à ADP à
p NOUN p
inconnues ADJ inconnu
, PUNCT ,
la DET le
condition NOUN condition
de ADP de
compatibilité NOUN compatibilité
( PUNCT (
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
la DET le
condition NOUN condition
pour ADP pour
que SCONJ que
le DET le
système NOUN système
admette VERB admettre sub_pre
des DET un
solutions NOUN solution
) PUNCT )
s' PRON se
écrit VERB écrire par_pas ind_pre
( PUNCT (
voir VERB voir inf
la DET le
partie NOUN partie
suivante ADJ suivant
sur ADP sur
les DET le
matrices NOUN matrice
- NOUN -
blocs NOUN bloc
) PUNCT )
: PUNCT :
rang(A PROPN rang(A
) PUNCT )
rang NOUN rang
A NOUN a
B NOUN b
) PUNCT )
ce PRON ce
qui PRON qui
se PRON se
vérifie VERB vérifier ind_pre
facilement ADV facilement
à ADP à
l' DET le
aide NOUN aide
d' ADP de
une DET un
méthode NOUN méthode
de ADP de
pivot NOUN pivot
sur ADP sur
les DET le
lignes NOUN ligne
, PUNCT ,
où PRON où
l' PRON l'
on PRON on
ne ADV ne
prend VERB prendre ind_pre
jamais ADV jamais
le DET le
pivot NOUN pivot
sur ADP sur
la DET le
colonne NOUN colonne
constituée VERB constituer par_pas
des ADP de
éléments NOUN élément
de ADP de
B. PROPN B.
La DET le
matrice NOUN matrice
A NOUN a
B NOUN b
Mn NOUN minute
, PUNCT ,
p1 NOUN p1
( PUNCT (
K NOUN k
) PUNCT )
s' PRON se
appelle VERB appeler ind_pre
la DET le
matrice NOUN matrice
augmentée VERB augmenter par_pas
du ADP de
système NOUN système
A NOUN a
X NOUN x
B. PROPN B.
Un DET un
système NOUN système
de ADP de
n AUX n
équations NOUN équation
à ADP à
n AUX n
inconnues ADJ inconnu
: PUNCT :
est VERB être ind_pre
dit VERB dire par_pas ind_pre
de ADP de
Cramer PROPN Cramer
, PUNCT ,
lorsque SCONJ lorsque
A NOUN a
est VERB être ind_pre
inversible ADJ inversible
. PUNCT .
En ADP en
ce DET ce
cas NOUN cas
, PUNCT ,
il PRON il
y PRON y
a VERB avoir ind_pre
existence NOUN existence
et CCONJ et
unicité NOUN unicité
de ADP de
la DET le
solution NOUN solution
, PUNCT ,
donnée VERB donner par_pas
par ADP par
Pour ADP pour
résoudre VERB résoudre inf
un DET un
système NOUN système
de ADP de
Cramer PROPN Cramer
, PUNCT ,
on PRON on
ne ADV ne
calcule VERB calculer ind_pre
jamais ADV jamais
l' DET le
inverse NOUN inverse
de ADP de
la DET le
matrice NOUN matrice
A NOUN a
, PUNCT ,
on PRON on
utilise VERB utiliser ind_pre
l' DET le
algorithme NOUN algorithme
du ADP de
pivot NOUN pivot
de ADP de
Gauss PROPN Gauss
! PUNCT !
Soit VERB être sub_pre
à ADP à
résoudre VERB résoudre inf
le DET le
système NOUN système
: PUNCT :
Appliquons VERB appliquer ind_pre
l' DET le
algorithme NOUN algorithme
du ADP de
pivot NOUN pivot
de ADP de
Gauss NOUN gauss
à ADP à
la DET le
matrice NOUN matrice
augmentée VERB augmenter par_pas
A ADP à
B NOUN b
: PUNCT :
La DET le
deuxième ADJ deuxième
ligne NOUN ligne
permet VERB permettre ind_pre
de ADP de
discerner VERB discerner inf
trois NUM trois
cas NOUN cas
: PUNCT :
1 NUM 1
. PUNCT .
1 NUM 1
, PUNCT ,
le DET le
système NOUN système
est VERB être ind_pre
incompatible ADJ incompatible
car CCONJ car
rang(A X rang(A
) PUNCT )
2 NUM 2
et CCONJ et
rangA PROPN rangA
B NOUN b
3 NUM 3
: PUNCT :
2 NUM 2
. PUNCT .
6 NUM 6
, PUNCT ,
le DET le
système NOUN système
est VERB être ind_pre
compatible ADJ compatible
car CCONJ car
rang(A X rang(A
) PUNCT )
rangA PROPN rangA
B NOUN b
2 NUM 2
: PUNCT :
Comme SCONJ comme
on PRON on
a VERB avoir
travaillé VERB travailler pas_cop
sur ADP sur
les DET le
lignes NOUN ligne
, PUNCT ,
les DET le
solutions NOUN solution
du ADP de
système NOUN système
sont VERB être ind_pre
les DET le
solutions NOUN solution
du ADP de
système NOUN système
réduit ADJ réduit
, PUNCT ,
soit VERB être sub_pre
: PUNCT :
3 NUM 3
. PUNCT .
6 DET 6
1 PRON 1
, PUNCT ,
6 NUM 6
, PUNCT ,
le DET le
système NOUN système
est VERB être ind_pre
de ADP de
Cramer PROPN Cramer
( PUNCT (
solution NOUN solution
unique ADJ unique
) PUNCT )
, PUNCT ,
le DET le
système NOUN système
réduit ADJ réduit
s' PRON se
écrit VERB écrire par_pas ind_pre
: PUNCT :
On PRON on
voit VERB voir ind_pre
que SCONJ que
le DET le
cas NOUN cas
6 NUM 6
ne ADV ne
s' PRON se
obtient VERB obtenir ind_pre
pas ADV pas
par ADP par
continuité NOUN continuité
du ADP de
cas NOUN cas
de ADP de
Cramer PROPN Cramer
. PUNCT .
Donc ADV donc
: PUNCT :
l' DET le
ordinateur NOUN ordinateur
ne ADV ne
fait VERB faire par_pas ind_pre
pas ADV pas
apparaître VERB apparaître inf
le DET le
cas NOUN cas
! PUNCT !
! PUNCT !
! PUNCT !
Si SCONJ si
on PRON on
a VERB avoir ind_pre
vraiment ADV vraiment
besoin NOUN besoin
de ADP de
calculer VERB calculer inf
l' DET le
inverse NOUN inverse
d' ADP de
une DET un
matrice NOUN matrice
A NOUN a
GLp PROPN GLp
( PUNCT (
K NOUN k
) PUNCT )
inversible ADJ inversible
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
appliquer VERB appliquer inf
l' DET le
algorithme NOUN algorithme
du ADP de
pivot NOUN pivot
de ADP de
Gauss PROPN Gauss
généralisée ADJ généraliser
à ADP à
la DET le
matrice NOUN matrice
augmentée VERB augmenter par_pas
A ADP à
Ip NOUN ip
, PUNCT ,
avec ADP avec
des DET un
opérations NOUN opération
sur ADP sur
les DET le
lignes NOUN ligne
. PUNCT .
On PRON on
obtient VERB obtenir ind_pre
à ADP à
la DET le
fin NOUN fin
une DET un
matrice NOUN matrice
augmentée VERB augmenter par_pas
de ADP de
la DET le
forme NOUN forme
En ADP en
effet NOUN effet
, PUNCT ,
si SCONJ si
on PRON on
note NOUN note
E NOUN e
la DET le
matrice NOUN matrice
correspondante ADJ correspondant
aux ADP à
opérations NOUN opération
élémentaires ADJ élémentaire
sur ADP sur
les DET le
lignes NOUN ligne
lors ADV lors
de ADP de
l' DET le
algorithme NOUN algorithme
, PUNCT ,
on PRON on
a VERB avoir ind_pre
E VERB e
A ADP à
Ip PROPN Ip
, PUNCT ,
d' ADP de
où PRON où
E NOUN e
Ip X Ip
A1 NOUN a1
. PUNCT .
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
en ADP en
effectuant VERB effectuer par_pre
les DET le
mêmes ADJ même
opérations NOUN opération
sur ADP sur
Ip PROPN Ip
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
A1 PROPN A1
. PUNCT .
2.8.1 NUM 2.8.1
Soit VERB être sub_pre
( PUNCT (
a VERB avoir ind_pre
, PUNCT ,
b NOUN b
, PUNCT ,
c NOUN c
) PUNCT )
C2 NOUN c2
. PUNCT .
Résoudre VERB résoudre inf
le DET le
système NOUN système
et CCONJ et
donner VERB donner inf
une DET un
condition NOUN condition
nécessaire ADJ nécessaire
et CCONJ et
suffisante ADJ suffisant
sur ADP sur
a VERB avoir ind_pre
, PUNCT ,
b NOUN b
et CCONJ et
c PRON c
pour ADP pour
que SCONJ que
les DET le
solutions NOUN solution
soient VERB être sub_pre
réelles ADJ réel
. PUNCT .
2.8.2 NUM 2.8.2
Inverser VERB inverser inf
la DET le
matrice NOUN matrice
2.8.3 PROPN 2.8.3
Résoudre VERB résoudre inf
le DET le
système NOUN système
Matrices PROPN Matrices
- NOUN -
blocs NOUN bloc
Notation NOUN notation
2.6 NUM 2.6
signifie VERB signifier ind_pre
que SCONJ que
: PUNCT :
mi PROPN mi
, PUNCT ,
j PRON j
ai VERB avoir ind_pre
, PUNCT ,
j PROPN j
mi PROPN mi
, PUNCT ,
j PRON j
cin1 VERB cin1
, PUNCT ,
j PROPN j
i NOUN i
, PUNCT ,
j PRON j
bi PROPN bi
, PUNCT ,
jp1 PROPN jp1
On PRON on
parle VERB parler ind_pre
alors ADV alors
de ADP de
matrice NOUN matrice
- ADJ -
blocs NOUN bloc
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
généraliser VERB généraliser inf
cette DET ce
notation NOUN notation
à ADP à
un DET un
nombre NOUN nombre
de ADP de
blocs NOUN bloc
plus ADV plus
grand ADJ grand
. PUNCT .
La DET le
matrice NOUN matrice
Jn PROPN Jn
, PUNCT ,
p NOUN p
, PUNCT ,
r X r
( PUNCT (
voir VERB voir inf
la DET le
notation NOUN notation
2.2 NUM 2.2
, PUNCT ,
page NOUN page
119 NUM 119
) PUNCT )
peut VERB pouvoir ind_pre
s' PRON se
écrire VERB écrire inf
sous ADP sous
la DET le
forme NOUN forme
d' ADP de
une DET un
matrice NOUN matrice
- ADJ -
blocs NOUN bloc
: PUNCT :
0nr NOUN 0nr
, PUNCT ,
r X r
0nr NOUN 0nr
, PUNCT ,
pr ADP pour
Multiplication NOUN multiplication
d' ADP de
une DET un
matrice NOUN matrice
- NOUN -
bloc NOUN bloc
par ADP par
un DET un
scalaire NOUN scalaire
. PUNCT .
Si SCONJ si
A VERB avoir ind_pre
Mn1 NOUN mn1
, PUNCT ,
p1 NOUN p1
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
B NOUN b
Mn1 NOUN mn1
, PUNCT ,
p2 VERB p2
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
C NOUN c
Les DET le
sommes NOUN somme
entre ADP entre
matrices NOUN matrice
- NOUN -
blocs NOUN bloc
incompatibles ADJ incompatible
ne ADV ne
peuvent VERB pouvoir ind_pre
s' PRON se
exprimer VERB exprimer inf
en ADP en
termes NOUN terme
de ADP de
blocs NOUN bloc
. PUNCT .
Produit NOUN produit
a VERB avoir ind_pre
entre ADP entre
matrices NOUN matrice
- NOUN -
blocs NOUN bloc
compatibles ADJ compatible
. PUNCT .
Si SCONJ si
A VERB avoir ind_pre
Mn1 NOUN mn1
, PUNCT ,
p1 NOUN p1
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
B NOUN b
Mn1 NOUN mn1
, PUNCT ,
p2 VERB p2
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
C NOUN c
Mn2 PROPN Mn2
, PUNCT ,
p1 NOUN p1
( PUNCT (
K NOUN k
) PUNCT )
et CCONJ et
A NOUN a
EB X EB
G NOUN gramme
A NOUN a
F NOUN f
B NOUN b
H NOUN heure
C NOUN c
ED NOUN ed
G NOUN gramme
C NOUN c
F NOUN f
D NOUN d
H NOUN heure
Même ADV même
remarque VERB remarquer ind_pre
que SCONJ que
précédemment ADV précédemment
, PUNCT ,
lorsque SCONJ lorsque
les DET le
dimensions NOUN dimension
ne ADV ne
sont VERB être ind_pre
pas ADV pas
compatibles ADJ compatible
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
bien ADV bien
sûr ADJ sûr
, PUNCT ,
généraliser VERB généraliser inf
à ADP à
un DET un
nombre NOUN nombre
de ADP de
blocs NOUN bloc
plus ADV plus
grand ADJ grand
, PUNCT ,
il PRON il
faut VERB falloir ind_pre
faire VERB faire inf
attention NOUN attention
à ADP à
bien ADV bien
conserver VERB conserver inf
les DET le
compatibilités NOUN compatibilité
entre ADP entre
les DET le
dimensions NOUN dimension
. PUNCT .
Attention NOUN attention
à ADP à
ne ADV ne
pas ADV pas
oublier VERB oublier inf
que SCONJ que
la DET le
multiplication NOUN multiplication
entre ADP entre
matrices NOUN matrice
ne ADV ne
est VERB être ind_pre
pas ADV pas
commutative ADJ commutatif
! PUNCT !
Démonstration NOUN démonstration
Il PRON il
s' PRON se
agit VERB agir ind_pre
de ADP de
simples ADJ simple
vérifications NOUN vérification
par ADP par
calculs NOUN calcul
( PUNCT (
laissées VERB laisser par_pas
en ADP en
exercice NOUN exercice
) PUNCT )
. PUNCT .
Proposition NOUN proposition
2.7 NUM 2.7
Correspondance NOUN correspondance
matrices NOUN matrice
- ADJ -
blocs NOUN bloc
et CCONJ et
décomposition NOUN décomposition
en ADP en
somme NOUN somme
directe ADJ direct
Soit VERB être sub_pre
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
K NOUN k
- ADJ -
espaces NOUN espace
vectoriels NOUN vectoriel
de ADP de
dimensions NOUN dimension
finies ADJ fini
, PUNCT ,
avec ADP avec
( PUNCT (
E1 NOUN e1
, PUNCT ,
E2 NOUN e2
) PUNCT )
une DET un
base NOUN base
de ADP de
E NOUN e
adaptée VERB adapter par_pas
à ADP à
la DET le
somme NOUN somme
directe ADJ direct
E NOUN e
E1 AUX e1
E2 ADJ e2
( PUNCT (
E10 NUM E10
, PUNCT ,
E20 NOUN e20
) PUNCT )
une DET un
base NOUN base
de ADP de
E NOUN e
0 NUM 0
adaptée VERB adapter par_pas
à ADP à
la DET le
somme NOUN somme
directe ADJ direct
E NOUN e
0 NUM 0
E10 NOUN e10
E20 NOUN e20
. PUNCT .
A NOUN a
MatE1 PROPN MatE1 else
, PUNCT ,
E10 PROPN E10
( PUNCT (
1 NUM 1
1 NUM 1
f NOUN f
E1 NOUN e1
) PUNCT )
où PRON où
1 PRON 1
est VERB être ind_pre
la DET le
projection NOUN projection
sur ADP sur
E10 PROPN E10
parallèlement ADV parallèlement
à ADP à
E20 ADJ e20
C NOUN c
MatE1 PROPN MatE1 else
, PUNCT ,
E20 NOUN e20
( PUNCT (
2 NUM 2
2 NUM 2
f NOUN f
E1 NOUN e1
) PUNCT )
où PRON où
2 NUM 2
idE PRON ide
0 NUM 0
1 NUM 1
est VERB être ind_pre
la DET le
projection NOUN projection
sur ADP sur
E20 ADJ e20
parallèlement ADV parallèlement
à ADP à
E10 NOUN e10
Démonstration NOUN démonstration
Immédiat PROPN Immédiat
en ADP en
décomposant VERB décomposer par_pre
chaque DET chaque
élément NOUN élément
de ADP de
f PRON f
( PUNCT (
E1 NOUN e1
) PUNCT )
et CCONJ et
chaque DET chaque
élément NOUN élément
de ADP de
f PRON f
( PUNCT (
E2 NOUN e2
) PUNCT )
sur ADP sur
la DET le
base NOUN base
( PUNCT (
E10 NUM E10
, PUNCT ,
E20 NOUN e20
) PUNCT )
( PUNCT (
en ADP en
exercice NOUN exercice
) PUNCT )
En ADP en
particulier ADJ particulier
, PUNCT ,
pour ADP pour
le DET le
cas NOUN cas
des ADP de
endomorphismes NOUN endomorphisme
( PUNCT (
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire ADV dire
E NOUN e
E NOUN e
0 NUM 0
, PUNCT ,
E10 NOUN e10
E1 ADJ e1
et CCONJ et
E20 NOUN e20
E2 NOUN e2
) PUNCT )
, PUNCT ,
on PRON on
a VERB avoir ind_pre
: PUNCT :
E1 NOUN e1
stable ADJ stable
par ADP par
f NUM f
C NOUN c
0n2 NOUN 0n2
, PUNCT ,
p1 NOUN p1
et CCONJ et
E2 ADJ e2
stable ADJ stable
par ADP par
f ADP f
B NOUN b
0n1 NUM 0n1
, PUNCT ,
p2 X p2
Ainsi ADV ainsi
, PUNCT ,
les DET le
matrices NOUN matrice
- NOUN -
blocs NOUN bloc
permettent VERB permettre ind_pre
de ADP de
visualiser VERB visualiser inf
simplement ADV simplement
certains ADJ certain
sous-espaces NOUN sous-espace
stables ADJ stable
. PUNCT .
Utilisation NOUN utilisation
La DET le
notation NOUN notation
par ADP par
blocs NOUN bloc
est VERB être ind_pre
extrêmement ADV extrêmement
pratique ADJ pratique
pour ADP pour
faire VERB faire inf
des DET un
récurrences NOUN récurrence
, PUNCT ,
ainsi ADV ainsi
que SCONJ que
pour ADP pour
représenter VERB représenter inf
simplement ADV simplement
les DET le
matrices NOUN matrice
. PUNCT .
1 NUM 1
. PUNCT .
L' DET le
ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
triangulaires ADJ triangulaire
supérieures ADJ supérieur
est VERB être ind_pre
stable ADJ stable
par ADP par
la DET le
multiplication NOUN multiplication
externe PROPN externe
et CCONJ et
par ADP par
l' DET le
addition NOUN addition
et CCONJ et
la DET le
multiplication NOUN multiplication
interne ADJ interne
. PUNCT .
De ADP de
plus ADV plus
, PUNCT ,
n NOUN n
( PUNCT (
K NOUN k
) PUNCT )
GLn PROPN GLn
( PUNCT (
K NOUN k
) PUNCT )
est VERB être ind_pre
stable ADJ stable
par ADP par
M NOUN m
7 NUM 7
M NOUN m
où PRON où
A VERB avoir ind_pre
GLn1 PROPN GLn1
( PUNCT (
K NOUN k
) PUNCT )
et CCONJ et
D NOUN d
GLn2 PROPN GLn2
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
alors ADV alors
M NOUN m
GLn1 DET gln1
n2 NOUN n2
( PUNCT (
K NOUN k
) PUNCT )
et CCONJ et
son DET son
inverse NOUN inverse
est VERB être ind_pre
de ADP de
la DET le
forme NOUN forme
: PUNCT :
On PRON on
rencontre VERB rencontrer ind_pre
souvent ADV souvent
des ADP de
transvections NOUN transvection
- NOUN -
blocs NOUN bloc
, PUNCT ,
des DET un
dilatations NOUN dilatation
- NOUN -
blocs NOUN bloc
et CCONJ et
des ADP de
permutations NOUN permutation
- NOUN -
blocs NOUN bloc
, PUNCT ,
ainsi ADV ainsi
: PUNCT :
vérifie VERB vérifier ind_pre
clairement ADV clairement
( PUNCT (
en ADP en
choisissant VERB choisir par_pre
k ADP k
et CCONJ et
pour ADP pour
avoir VERB avoir inf
des DET un
dimensions NOUN dimension
compatibles ADJ compatible
) PUNCT )
: PUNCT :
soit VERB être sub_pre
une DET un
opération NOUN opération
élémentaire ADJ élémentaire
sur ADP sur
les DET le
blocs NOUN bloc
: PUNCT :
( PUNCT (
produit NOUN produit
à ADP à
gauche NOUN gauche
) PUNCT )
( PUNCT (
produit NOUN produit
à ADP à
droite NOUN droite
) PUNCT )
De ADP de
même ADV même
avec ADP avec
les DET le
dilatations NOUN dilatation
: PUNCT :
( PUNCT (
produit NOUN produit
à ADP à
gauche NOUN gauche
) PUNCT )
( PUNCT (
produit NOUN produit
à ADP à
droite NOUN droite
) PUNCT )
La DET le
permutation NOUN permutation
- NOUN -
bloc NOUN bloc
serait VERB être con_pre
par ADP par
exemple NOUN exemple
: PUNCT :
Cela PRON cela
permet VERB permettre ind_pre
( PUNCT (
avec ADP avec
quelques DET quelque
précautions NOUN précaution
de ADP de
calcul NOUN calcul
) PUNCT )
de ADP de
faire VERB faire inf
des DET un
manipulations NOUN manipulation
sur ADP sur
les DET le
matrices NOUN matrice
- NOUN -
blocs NOUN bloc
comme ADP comme
sur ADP sur
des DET un
matrices NOUN matrice
usuelles ADJ usuel
. PUNCT .
a. VERB avoir ind_pre
doit VERB devoir ind_pre
être VERB être inf
inversible ADJ inversible
, PUNCT ,
car CCONJ car
on PRON on
veut VERB vouloir ind_pre
conserver VERB conserver inf
le DET le
rang NOUN rang
! PUNCT !
! PUNCT !
1 NUM 1
. PUNCT .
Si SCONJ si
A VERB avoir ind_pre
GLn PROPN GLn
( PUNCT (
K NOUN k
) PUNCT )
est VERB être ind_pre
de ADP de
la DET le
forme NOUN forme
: PUNCT :
.C PUNCT .c
L NOUN l
est VERB être ind_pre
inversible ADJ inversible
2 NUM 2
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
en PRON en
déduire VERB déduire inf
que SCONJ que
si SCONJ si
A ADP à
GLn PROPN GLn
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
alors ADV alors
il PRON il
existe VERB exister ind_pre
une DET un
matrice NOUN matrice
de ADP de
permutation NOUN permutation
P NOUN p
, PUNCT ,
une DET un
matrice NOUN matrice
T1 NOUN t1
triangulaire ADJ triangulaire
inférieure ADJ inférieur
avec ADP avec
des DET un
1 PRON 1
sur ADP sur
la DET le
diagonale NOUN diagonale
et CCONJ et
une DET un
matrice NOUN matrice
T2 ADJ t2
triangulaire ADJ triangulaire
supérieure ADJ supérieur
telles ADJ tel
Produit NOUN produit
de ADP de
Kronecker PROPN Kronecker
Soit VERB être sub_pre
A ADP à
ai NOUN ai
, PUNCT ,
j PROPN j
Mn1 X Mn1
, PUNCT ,
p1 NOUN p1
( PUNCT (
K NOUN k
) PUNCT )
et CCONJ et
B NOUN b
Mn2 PROPN Mn2
, PUNCT ,
p2 NOUN p2
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
on PRON on
définit VERB définir ind_pre
le DET le
produit NOUN produit
de ADP de
Kronecker PROPN Kronecker
de ADP de
A NOUN a
et CCONJ et
B NOUN b
comme ADP comme
la DET le
matrice ADJ matric
- ADJ -
blocs NOUN bloc
: PUNCT :
alors ADV alors
pour ADP pour
toute DET tout
matrice NOUN matrice
B NOUN b
à ADP à
coefficients NOUN coefficient
dans ADP dans
K NOUN k
, PUNCT ,
on PRON on
a VERB avoir ind_pre
2 NUM 2
. PUNCT .
Pour ADP pour
toute DET tout
A VERB avoir ind_pre
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
la DET le
matrice NOUN matrice
de ADP de
l' DET le
application NOUN application
: PUNCT :
dans ADP dans
la DET le
base NOUN base
canonique ADJ canonique
( PUNCT (
judicieusement ADV judicieusement
ordonnée VERB ordonner par_pas
) PUNCT )
est VERB être ind_pre
: PUNCT :
3 NUM 3
. PUNCT .
En ADP en
prenant VERB prendre par_pre
le DET le
même ADJ même
ordre NOUN ordre
de ADP de
la DET le
base NOUN base
canonique ADJ canonique
, PUNCT ,
pour ADP pour
toute DET tout
A VERB avoir ind_pre
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
la DET le
matrice NOUN matrice
de ADP de
de ADP de
l' DET le
application NOUN application
: PUNCT :
Proposition NOUN proposition
2.8 NUM 2.8
Démonstration NOUN démonstration
Il PRON il
s' PRON se
agit VERB agir ind_pre
d' ADP de
une DET un
simple ADJ simple
vérification NOUN vérification
par ADP par
calculs NOUN calcul
( PUNCT (
laissée VERB laisser par_pas
en ADP en
exercice NOUN exercice
) PUNCT )
. PUNCT .
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
rang(M ADJ rang(m
) PUNCT )
rang NOUN rang
( PUNCT (
b NOUN b
) PUNCT )
En ADP en
déduire VERB déduire inf
le DET le
rang NOUN rang
de ADP de
M NOUN m
. PUNCT .
( PUNCT (
c NOUN c
) PUNCT )
On PRON on
suppose VERB supposer ind_pre
M NOUN m
inversible ADJ inversible
. PUNCT .
Calculer VERB calculer inf
M NOUN m
1 NUM 1
. PUNCT .
2.9.2 PROPN 2.9.2
Inverser VERB inverser inf
la DET le
matrice NOUN matrice
: PUNCT :
2.9.3 NUM 2.9.3
Calculer VERB calculer inf
rang(A DET rang(a
B NOUN b
) PUNCT )
en ADP en
fonction NOUN fonction
de ADP de
rang(A PROPN rang(A
) PUNCT )
et CCONJ et
rang(B NOUN rang(b
) PUNCT )
pour ADP pour
A VERB avoir ind_pre
Mn NOUN minute
, PUNCT ,
p NOUN p
( PUNCT (
K NOUN k
) PUNCT )
et CCONJ et
B NOUN b
Mq NOUN mq
, PUNCT ,
s X s
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
2.9.4 NUM 2.9.4
Soit VERB être sub_pre
A NOUN a
et CCONJ et
B NOUN b
dans ADP dans
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
et CCONJ et
Soit VERB être sub_pre
E NOUN e
R NOUN r
A NOUN a
.B PROPN .B
inversible ADJ inversible
. PUNCT .
Trouver VERB trouver inf
une DET un
condition NOUN condition
nécessaire ADJ nécessaire
et CCONJ et
suffisante ADJ suffisant
sur ADP sur
E NOUN e
pour ADP pour
que SCONJ que
M NOUN m
soit VERB être sub_pre
inversible ADJ inversible
et CCONJ et
, PUNCT ,
dans ADP dans
ce DET ce
cas NOUN cas
, PUNCT ,
calculer VERB calculer inf
M NOUN m
1 NUM 1
. PUNCT .
2.9.5 NUM 2.9.5
Soit VERB être sub_pre
A1 NOUN a1
Mn1 NOUN mn1
, PUNCT ,
p1 NOUN p1
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
... PUNCT ...
Aq NOUN aq
Mnq PROPN Mnq
, PUNCT ,
pq PROPN pq
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
On PRON on
considère VERB considérer ind_pre
la DET le
matrice NOUN matrice
diagonale ADJ diagonal
par ADP par
blocs NOUN bloc
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
( PUNCT (
b NOUN b
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
rang(A PROPN rang(A
) PUNCT )
rang(B NOUN rang(b
) PUNCT )
rang(D NOUN rang(d
) PUNCT )
( PUNCT (
c NOUN c
) PUNCT )
Donner ADP donner
un DET un
exemple NOUN exemple
où PRON où
l' DET le
inégalité NOUN inégalité
est VERB être ind_pre
stricte ADJ strict
. PUNCT .
( PUNCT (
d NOUN d
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
si SCONJ si
B NOUN b
ou CCONJ ou
D NOUN d
est VERB être ind_pre
une DET un
matrice NOUN matrice
carrée ADJ carré
inversible ADJ inversible
, PUNCT ,
alors ADV alors
il PRON il
y PRON y
a VERB avoir ind_pre
égalité NOUN égalité
. PUNCT .
Chapitre NOUN chapitre else
3 NUM 3
Déterminant ADJ déterminant
Permutations NOUN permutation
et CCONJ et
groupe NOUN groupe
symétrique ADJ symétrique
Soit VERB être sub_pre
E NOUN e
un DET un
ensemble NOUN ensemble
non ADV non
vide ADJ vide
. PUNCT .
Une DET un
permutation NOUN permutation
de ADP de
E NOUN e
est VERB être ind_pre
une DET un
bijection NOUN bijection
de ADP de
E NOUN e
dans ADP dans
E. PROPN E.
On PROPN On
note NOUN note
S(E PROPN S(E
) PUNCT )
l' DET le
ensemble NOUN ensemble
des ADP de
permutations NOUN permutation
de ADP de
E NOUN e
Dans ADP dans
le DET le
cas NOUN cas
particulier ADJ particulier
où PRON où
E NOUN e
1 NUM 1
, PUNCT ,
p NOUN p
avec ADP avec
p NOUN p
N ADJ n
, PUNCT ,
on PRON on
note NOUN note
Sp X Sp
S(1 VERB s(1
, PUNCT ,
p NOUN p
) PUNCT )
l' DET le
ensemble NOUN ensemble
des ADP de
permutations NOUN permutation
de ADP de
1 PRON 1
, PUNCT ,
p NOUN p
On PRON on
a VERB avoir ind_pre
les DET le
propriétés NOUN propriété
suivantes ADJ suivant
: PUNCT :
idE VERB ide
S(E PROPN S(E
) PUNCT )
, PUNCT ,
en ADP en
particulier ADJ particulier
S(E NOUN s(e
) PUNCT )
ne ADV ne
est VERB être ind_pre
jamais ADV jamais
vide ADJ vide
S(E PROPN S(E
) PUNCT )
est VERB être ind_pre
stable ADJ stable
par ADP par
composition NOUN composition
: PUNCT :
la DET le
composition NOUN composition
est VERB être ind_pre
associative ADJ associatif
: PUNCT :
il PRON il
existe VERB exister ind_pre
un DET un
élément NOUN élément
neutre ADJ neutre
, PUNCT ,
en ADP en
l' DET le
occurrence NOUN occurrence
idE PROPN idE
: PUNCT :
S(E PROPN S(E
) PUNCT )
est VERB être ind_pre
stable ADJ stable
par ADP par
passage NOUN passage
à ADP à
l' DET le
inverse NOUN inverse
( PUNCT (
qui PRON qui
existe VERB exister ind_pre
toujours ADV toujours
et CCONJ et
est VERB être ind_pre
unique ADJ unique
) PUNCT )
: PUNCT :
On PRON on
dit VERB dire ind_pre
que SCONJ que
( PUNCT (
S(E PROPN S(E
) PUNCT )
, PUNCT ,
) PUNCT )
est VERB être ind_pre
un DET un
groupe NOUN groupe
. PUNCT .
On PRON on
l' PRON l'
appelle VERB appeler ind_pre
le DET le
groupe NOUN groupe
symétrique ADJ symétrique
de ADP de
E NOUN e
et CCONJ et
Sp AUX sp
s' PRON se
appelle VERB appeler ind_pre
le DET le
groupe NOUN groupe
symétrique ADJ symétrique
de ADP de
degré NOUN degré
p. NOUN p.
Soit VERB être sub_pre
p NOUN p
N ADJ n
. PUNCT .
On PRON on
a VERB avoir ind_pre
card NOUN card
Sp ADV sp
p NOUN p
! PUNCT !
Démonstration NOUN démonstration
Pour ADP pour
construire VERB construire inf
une DET un
permutation NOUN permutation
Sp X Sp
: PUNCT :
On PRON on
a VERB avoir ind_pre
p AUX p
choix ADV choix
possibles ADJ possible
pour ADP pour
( PUNCT (
1 NUM 1
) PUNCT )
( PUNCT (
les DET le
p VERB p
éléments NOUN élément
de ADP de
1 PRON 1
, PUNCT ,
p NOUN p
) PUNCT )
Une DET un
fois NOUN fois
( PUNCT (
1 NUM 1
) PUNCT )
choisi VERB choisir par_pas
, PUNCT ,
on PRON on
a VERB avoir ind_pre
p X p
1 NUM 1
choix NOUN choix
possibles ADJ possible
pour ADP pour
( PUNCT (
2 NUM 2
) PUNCT )
( PUNCT (
les DET le
p NOUN p
1 NUM 1
éléments NOUN élément
de ADP de
1 PRON 1
, PUNCT ,
p NOUN p
( PUNCT (
1 NUM 1
) PUNCT )
) PUNCT )
Plus ADV plus
généralement ADV généralement
, PUNCT ,
une DET un
fois NOUN fois
( PUNCT (
1 NUM 1
) PUNCT )
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
( PUNCT (
i NOUN i
) PUNCT )
choisis VERB choisir par_pas ind_pre
, PUNCT ,
on PRON on
a VERB avoir ind_pre
p PRON p
i X i
choix ADV choix
possibles ADJ possible
pour ADP pour
( PUNCT (
i X i
1 NUM 1
) PUNCT )
( PUNCT (
les DET le
p NOUN p
i X i
Une DET un
fois NOUN fois
( PUNCT (
1 NUM 1
) PUNCT )
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
( PUNCT (
p NOUN p
1 NUM 1
) PUNCT )
choisis VERB choisir par_pas ind_pre
, PUNCT ,
il PRON il
ne ADV ne
reste VERB rester ind_pre
plus ADV plus
qu' SCONJ que
un DET un
seul ADJ seul
choix NOUN choix
pour ADP pour
( PUNCT (
p NOUN p
) PUNCT )
( PUNCT (
l' DET le
unique ADJ unique
élément NOUN élément
de ADP de
Finalement ADV finalement
, PUNCT ,
on PRON on
a VERB avoir ind_pre
choix ADV choix
possibles ADJ possible
pour ADP pour
construire VERB construire inf
, PUNCT ,
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
. PUNCT .
La DET le
démonstration NOUN démonstration
peut VERB pouvoir ind_pre
se PRON se
faire VERB faire inf
plus ADV plus
rigoureusement ADV rigoureusement
par ADP par
récurrence NOUN récurrence
sur ADP sur
p. NOUN p.
Soit VERB être sub_pre
p NOUN p
N ADJ n
, PUNCT ,
p NOUN p
2 NUM 2
, PUNCT ,
et CCONJ et
soit VERB être sub_pre
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
i X i
6 NUM 6
j. PUNCT j.
La DET le
transposition NOUN transposition
i ADJ i
, PUNCT ,
j PRON j
est VERB être ind_pre
la DET le
permutation NOUN permutation
de ADP de
Sp X Sp
qui PRON qui
échange NOUN échange
i ADJ i
et CCONJ et
j PROPN j
et CCONJ et
qui PRON qui
laisse VERB laisser ind_pre
stable ADJ stable
les DET le
autres ADJ autre
entiers NOUN entier
: PUNCT :
Soit VERB être sub_pre
p NOUN p
N ADJ n
, PUNCT ,
p NOUN p
2 NUM 2
. PUNCT .
Toute DET tout
permutation NOUN permutation
1 NUM 1
, PUNCT ,
p NOUN p
s' PRON se
écrit VERB écrire par_pas ind_pre
à ADP à
l' DET le
aide NOUN aide
de ADP de
transpositions NOUN transposition
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
des DET un
transpositions NOUN transposition
de ADP de
Sp NOUN sp
, PUNCT ,
notée VERB noter par_pas
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
r X r
, PUNCT ,
telles ADJ tel
que SCONJ que
Démonstration NOUN démonstration
Déjà PUNCT déjà
démontré VERB démontrer par_pas
lors ADV lors
de ADP de
la DET le
démonstration NOUN démonstration
de ADP de
la DET le
proposition NOUN proposition
2.15 VERB 2.15
, PUNCT ,
page NOUN page
136 NUM 136
du ADP de
chapitre NOUN chapitre
2 NUM 2
. PUNCT .
Soit VERB être sub_pre
p NOUN p
N ADJ n
, PUNCT ,
soit VERB être sub_pre
Sp PROPN Sp
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
signature NOUN signature
de ADP de
et CCONJ et
on PRON on
note VERB noter ind_pre
a VERB avoir ind_pre
: PUNCT :
a. VERB avoir ind_pre
On PRON on
fait VERB faire ind_pre
le DET le
produit NOUN produit
sur ADP sur
tous ADJ tout
les DET le
couples NOUN couple
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
1 NUM 1
, PUNCT ,
p2 VERB p2
tels ADJ tel
que SCONJ que
i DET i
j. PROPN j.
Pour ADP pour
p NOUN p
1 PRON 1
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
un DET un
produit NOUN produit
vide ADJ vide
qui PRON qui
vaut VERB valoir ind_pre
1 NUM 1
par ADP par
convention NOUN convention
. PUNCT .
On PRON on
a VERB avoir ind_pre
( PUNCT (
) PUNCT )
( PUNCT (
1)N PROPN 1)N
, PUNCT ,
où PRON où
N ADJ n
est VERB être ind_pre
le DET le
nombre NOUN nombre
d' ADP de
inversions NOUN inversion
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
les DET le
couples NOUN couple
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
1 NUM 1
, PUNCT ,
n AUX n
tels ADJ tel
que SCONJ que
i VERB i
j PROPN j
et CCONJ et
( PUNCT (
i NOUN i
) PUNCT )
( PUNCT (
j NOUN j
) PUNCT )
. PUNCT .
La DET le
signature NOUN signature
mesure ADV mesure
donc ADV donc
la DET le
parité NOUN parité
du ADP de
nombre NOUN nombre
d' ADP de
inversions NOUN inversion
. PUNCT .
Soit VERB être sub_pre
p NOUN p
N ADJ n
. PUNCT .
La DET le
signature NOUN signature
est VERB être ind_pre
à ADP à
valeurs NOUN valeur
dans ADP dans
1 PRON 1
, PUNCT ,
1 NUM 1
et CCONJ et
: PUNCT :
Démonstration NOUN démonstration
En ADP en
effet NOUN effet
, PUNCT ,
pour ADP pour
le DET le
premier ADJ premier
produit NOUN produit
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
faire VERB faire inf
le DET le
changement NOUN changement
de ADP de
variable NOUN variable
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
( PUNCT (
0 NUM 0
( PUNCT (
i NOUN i
) PUNCT )
, PUNCT ,
0 NUM 0
( PUNCT (
j NOUN j
) PUNCT )
) PUNCT )
( PUNCT (
grâce NOUN grâce
à ADP à
la DET le
bijectivité NOUN bijectivité
de ADP de
0 NUM 0
) PUNCT )
. PUNCT .
La DET le
signature NOUN signature
d' ADP de
une DET un
transposition NOUN transposition
est VERB être ind_pre
1 NUM 1
. PUNCT .
Démonstration NOUN démonstration
On PRON on
se PRON se
place VERB placer ind_pre
dans ADP dans
Sp X Sp
avec ADP avec
p NOUN p
N ADJ n
, PUNCT ,
p NOUN p
2 NUM 2
. PUNCT .
C' PRON ce
est VERB être ind_pre
vrai ADJ vrai
pour ADP pour
2,1 NUM 2,1
1,2 NUM 1,2
On PRON on
exprime VERB exprimer ind_pre
alors ADV alors
les DET le
autres ADJ autre
transpositions NOUN transposition
à ADP à
l' DET le
aide NOUN aide
de ADP de
1,2 NUM 1,2
et CCONJ et
2,1 NUM 2,1
. PUNCT .
Par ADP par
exemple NOUN exemple
, PUNCT ,
si SCONJ si
( PUNCT (
k NOUN k
, PUNCT ,
) PUNCT )
1 NUM 1
, PUNCT ,
p2 VERB p2
, PUNCT ,
Les DET le
autres ADJ autre
cas NOUN cas
sont VERB être ind_pre
analogues ADJ analogue
( PUNCT (
laissés VERB laisser par_pas
en ADP en
exercice NOUN exercice
) PUNCT )
. PUNCT .
Cela PRON cela
nous PRON nous
donne VERB donner ind_pre
un DET un
moyen NOUN moyen
effectif ADJ effectif
de ADP de
calculer VERB calculer inf
la DET le
signature NOUN signature
d' ADP de
une DET un
permutation NOUN permutation
( PUNCT (
bien ADV bien
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
des DET un
algorithmes NOUN algorithme
nettement ADV nettement
plus ADV plus
performants ADJ performant
) PUNCT )
. PUNCT .
En ADP en
effet NOUN effet
, PUNCT ,
en ADP en
décomposant VERB décomposer par_pre
une DET un
permutation NOUN permutation
à ADP à
l' DET le
aide NOUN aide
de ADP de
transpositions NOUN transposition
: PUNCT :
et CCONJ et
cela PRON cela
ne ADV ne
dépend VERB dépendre ind_pre
pas ADV pas
de ADP de
la DET le
décomposition NOUN décomposition
choisie ADJ choisir
( PUNCT (
qui PRON qui
ne ADV ne
est VERB être ind_pre
pas ADV pas
unique ADJ unique
) PUNCT )
car CCONJ car
si SCONJ si
est VERB être ind_pre
une DET un
autre ADJ autre
décomposition NOUN décomposition
à ADP à
l' DET le
aide NOUN aide
de ADP de
transpositions NOUN transposition
, PUNCT ,
on PRON on
a VERB avoir ind_pre
( PUNCT (
) PUNCT )
( PUNCT (
1)r VERB 1)r
( PUNCT (
1)s PROPN 1)s
( PUNCT (
r X r
et CCONJ et
s PRON s
ont VERB avoir ind_pre
même ADV même
parité NOUN parité
) PUNCT )
. PUNCT .
Soit VERB être sub_pre
la DET le
permutation NOUN permutation
de ADP de
1 NUM 1
, PUNCT ,
9 NUM 9
donnée VERB donner par_pas
par ADP par
a VERB avoir ind_pre
: PUNCT :
alors ADV alors
sa DET son
signature NOUN signature
vaut VERB valoir ind_pre
: PUNCT :
1 NUM 1
. PUNCT .
En ADP en
effet NOUN effet
: PUNCT :
on PRON on
a VERB avoir ind_pre
( PUNCT (
1 NUM 1
) PUNCT )
3 NUM 3
et CCONJ et
( PUNCT (
3 NUM 3
) PUNCT )
1 NUM 1
, PUNCT ,
ce PRON ce
qui PRON qui
donne VERB donner ind_pre
la DET le
transposition NOUN transposition
1,3 NUM 1,3
Finalement ADV finalement
, PUNCT ,
on PRON on
a VERB avoir ind_pre
une DET un
décomposition NOUN décomposition
en ADP en
6 NUM 6
transpositions NOUN transposition
: PUNCT :
a. VERB avoir ind_pre
C' PRON ce
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
que SCONJ que
l' DET le
entier ADJ entier
en ADP en
( PUNCT (
2 NUM 2
, PUNCT ,
j PROPN j
) PUNCT )
( PUNCT (
deuxième ADJ deuxième
ligne NOUN ligne
) PUNCT )
est VERB être ind_pre
l' DET le
image NOUN image
par ADP par
de ADP de
l' DET le
entier PRON entier
en ADP en
( PUNCT (
1 NUM 1
, PUNCT ,
j NOUN j
) PUNCT )
( PUNCT (
première ADJ premier
ligne NOUN ligne
) PUNCT )
. PUNCT .
Bien ADV bien
retenir VERB retenir inf
qu' SCONJ que
il PRON il
suffit VERB suffire ind_pre
de ADP de
regarder VERB regarder inf
ce PRON ce
qui PRON qui
se PRON se
passe VERB passer ind_pre
avec ADP avec
les DET le
transpositions NOUN transposition
! PUNCT !
Formes NOUN forme
p NOUN p
- X -
linéaires ADJ linéaire
sur ADP sur
un DET un
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
n ADJ n
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
soit VERB être sub_pre
p DET p
N ADJ n
. PUNCT .
On PRON on
appelle VERB appeler ind_pre
forme NOUN forme
p NOUN p
- PUNCT -
linéaire ADJ linéaire
sur ADP sur
E NOUN e
toute DET tout
application NOUN application
: PUNCT :
telle ADJ tel
que SCONJ que
: PUNCT :
soit VERB être sub_pre
linéaire ADJ linéaire
Lp NOUN lp
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
l' DET le
ensemble NOUN ensemble
des ADP de
formes NOUN forme
p NOUN p
- X -
linéaires ADJ linéaire
sur ADP sur
E NOUN e
L' DET le
ensemble NOUN ensemble
Lp NOUN lp
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
est VERB être ind_pre
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel VERB vectoriel
pour ADP pour
les DET le
opérations NOUN opération
usuelles ADJ usuel
. PUNCT .
Pour ADP pour
p NOUN p
1 PRON 1
, PUNCT ,
on PRON on
retrouve VERB retrouver ind_pre
les DET le
formes NOUN forme
linéaires ADJ linéaire
: PUNCT :
L1 NOUN l1
( PUNCT (
E NOUN e
) PUNCT )
E NOUN e
? PUNCT ?
. PUNCT .
Pour ADP pour
p NOUN p
2 NUM 2
, PUNCT ,
on PRON on
dit VERB dire ind_pre
forme NOUN forme
bilinéaire ADJ bilinéaire
au ADP à
lieu NOUN lieu
de ADP de
forme NOUN forme
2-linéaire NUM 2-linéaire
. PUNCT .
Attention NOUN attention
à ADP à
ne ADV ne
pas ADV pas
confondre VERB confondre inf
les DET le
formes NOUN forme
p NOUN p
- X -
linéaires ADJ linéaire
sur ADP sur
E NOUN e
avec ADP avec
les DET le
formes NOUN forme
linéaires ADJ linéaire
sur ADP sur
E NOUN e
p NOUN p
. PUNCT .
Considérons VERB considérer imper
La DET le
première ADJ premier
application NOUN application
est VERB être ind_pre
bilinéaire ADJ bilinéaire
sur ADP sur
K NOUN k
mais CCONJ mais
ne ADV ne
est VERB être ind_pre
pas ADV pas
linéaire ADJ linéaire
sur ADP sur
K2 NOUN k2
alors ADV alors
que SCONJ que
la DET le
seconde ADJ second
est VERB être ind_pre
linéaire ADJ linéaire
sur ADP sur
K2 NOUN k2
mais CCONJ mais
pas ADV pas
bilinéaire ADJ bilinéaire
sur ADP sur
K. PROPN K.
1 NUM 1
. PUNCT .
Le DET le
produit NOUN produit
scalaire ADJ scalaire
est VERB être ind_pre
une DET un
forme NOUN forme
bilinéaire ADJ bilinéaire
sur ADP sur
Rn PROPN Rn
. PUNCT .
2 NUM 2
. PUNCT .
L' DET le
application NOUN application
est VERB être ind_pre
une DET un
forme NOUN forme
bilinéaire ADJ bilinéaire
sur ADP sur
C NOUN c
0 NUM 0
( PUNCT (
0 NUM 0
, PUNCT ,
1 NUM 1
, PUNCT ,
R NOUN r
) PUNCT )
. PUNCT .
3 NUM 3
. PUNCT .
Si SCONJ si
f1 VERB f1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
fp PRON fp
sont VERB être ind_pre
des DET un
formes NOUN forme
linéaires ADJ linéaire
sur ADP sur
E NOUN e
, PUNCT ,
alors ADV alors
est VERB être ind_pre
une DET un
forme NOUN forme
p NOUN p
- PUNCT -
linéaire ADJ linéaire
sur ADP sur
E. PROPN E.
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
soit VERB être sub_pre
p NOUN p
N ADJ n
, PUNCT ,
p NOUN p
2 NUM 2
, PUNCT ,
et CCONJ et
soit VERB être sub_pre
Lp PROPN Lp
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
. PUNCT .
On PRON on
dit VERB dire ind_pre
que SCONJ que
est VERB être ind_pre
symétrique ADJ symétrique
si SCONJ si
: PUNCT :
Sp X Sp
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
l' DET le
ensemble NOUN ensemble
des ADP de
formes NOUN forme
p NOUN p
- X -
linéaires ADJ linéaire
sur ADP sur
E NOUN e
symétriques ADJ symétrique
On PRON on
dit VERB dire ind_pre
que SCONJ que
est VERB être ind_pre
antisymétrique ADJ antisymétrique
si SCONJ si
: PUNCT :
Ap PROPN Ap
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
l' DET le
ensemble NOUN ensemble
des ADP de
formes NOUN forme
p NOUN p
- X -
linéaires ADJ linéaire
sur ADP sur
E NOUN e
antisymétriques ADJ antisymétrique
1 NUM 1
. PUNCT .
Dans ADP dans
l' DET le
espace NOUN espace
euclidien ADJ euclidien
R3 PROPN R3
, PUNCT ,
si SCONJ si
est VERB être ind_pre
une DET un
forme NOUN forme
linéaire ADJ linéaire
sur ADP sur
R3 NOUN r3
, PUNCT ,
alors ADV alors
l' DET le
application NOUN application
: PUNCT :
est VERB être ind_pre
bilinéaire ADJ bilinéaire
antisymétrique ADJ antisymétrique
. PUNCT .
2 NUM 2
. PUNCT .
Dans ADP dans
l' DET le
espace NOUN espace
euclidien ADJ euclidien
R3 PROPN R3
, PUNCT ,
l' DET le
application NOUN application
produit NOUN produit
mixte ADJ mixte
définie VERB définir par_pas
par ADP par
: PUNCT :
( PUNCT (
où PRON où
h NOUN heure
, PUNCT ,
i AUX i
est VERB être ind_pre
le DET le
produit NOUN produit
scalaire ADJ scalaire
euclidien ADJ euclidien
) PUNCT )
est VERB être ind_pre
3-linéaire ADJ 3-linéair
antisymétrique ADJ antisymétrique
. PUNCT .
Sp X Sp
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
et CCONJ et
Ap PROPN Ap
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
sont VERB être ind_pre
des DET un
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
Lp NOUN lp
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
. PUNCT .
D' ADP de
après ADP après
l' DET le
étude NOUN étude
de ADP de
Sp NOUN sp
de ADP de
la DET le
partie NOUN partie
précédent ADJ précédent
, PUNCT ,
pour ADP pour
savoir VERB savoir inf
si SCONJ si
une DET un
forme NOUN forme
p NOUN p
- PUNCT -
linéaire ADJ linéaire
est VERB être ind_pre
symétrique ADJ symétrique
ou CCONJ ou
anti-symétrique ADJ anti-symétriqu
, PUNCT ,
il PRON il
suffit VERB suffire ind_pre
de ADP de
se PRON se
restreindre VERB restreindre inf
aux ADP à
transpositions NOUN transposition
. PUNCT .
En ADP en
particulier ADJ particulier
: PUNCT :
est VERB être ind_pre
symétrique ADJ symétrique
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
échanger VERB échanger inf
deux NUM deux
vecteurs NOUN vecteur
ne ADV ne
change VERB changer ind_pre
pas ADV pas
le DET le
signe NOUN signe
( PUNCT (
ci-dessous ADV ci-dessous
seules ADJ seul
les DET le
i PROPN i
- NOUN -
èmes NOUN ème
et CCONJ et
j PROPN j
- NOUN -
ièmes NOUN ième
variables ADJ variable
sont VERB être ind_pre
explicitées VERB expliciter par_pas
) PUNCT )
: PUNCT :
est VERB être ind_pre
antisymétrique ADJ antisymétrique
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
échanger VERB échanger inf
deux NUM deux
vecteurs NOUN vecteur
change VERB changer ind_pre
le DET le
signe NOUN signe
( PUNCT (
ci-dessous ADV ci-dessous
seules ADJ seul
les DET le
i PROPN i
- NOUN -
èmes NOUN ème
et CCONJ et
j PROPN j
- NOUN -
ièmes NOUN ième
variables ADJ variable
sont VERB être ind_pre
explicitées VERB expliciter par_pas
) PUNCT )
: PUNCT :
Soit VERB être sub_pre
Lp PROPN Lp
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
. PUNCT .
Alors ADV alors
est VERB être ind_pre
antisymétrique ADJ antisymétrique
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
elle PRON lui
est VERB être ind_pre
alternée ADJ alterné
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
: PUNCT :
Démonstration NOUN démonstration
Soit VERB être sub_pre
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xp NOUN xp
) PUNCT )
E NOUN e
p NOUN p
et CCONJ et
soit VERB être sub_pre
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
1 NUM 1
, PUNCT ,
p2 VERB p2
tel ADJ tel
que SCONJ que
i ADP i
6 NUM 6
j NOUN j
( PUNCT (
ci-dessous ADV ci-dessous
, PUNCT ,
seules ADJ seul
les DET le
i PROPN i
- NOUN -
èmes NOUN ème
et CCONJ et
j PROPN j
- NOUN -
ièmes NOUN ième
variables ADJ variable
sont VERB être ind_pre
explicitées VERB expliciter par_pas
) PUNCT )
. PUNCT .
Supposons VERB supposer ind_pre
antisymétrique ADJ antisymétrique
. PUNCT .
Alors ADV alors
: PUNCT :
Supposons VERB supposer ind_pre
alternée ADJ alterné
. PUNCT .
Alors ADV alors
: PUNCT :
d' ADP de
où PRON où
( PUNCT (
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xi PROPN xi
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xj NOUN xj
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
) PUNCT )
( PUNCT (
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xj NOUN xj
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xi PROPN xi
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
) PUNCT )
donc ADV donc
est VERB être ind_pre
antisymétrique ADJ antisymétrique
( PUNCT (
car CCONJ car
on PRON on
peut VERB pouvoir ind_pre
se PRON se
restreindre VERB restreindre inf
aux ADP à
transpositions NOUN transposition
, PUNCT ,
voir VERB voir inf
la DET le
remarque NOUN remarque
ci ADV ci
- PRON -
dessus NOUN dessus
) PUNCT )
. PUNCT .
Attention PROPN Attention
, PUNCT ,
ce DET ce
résultat NOUN résultat
ne ADV ne
est VERB être ind_pre
plus ADV plus
vrai ADJ vrai
dans ADP dans
d' DET d'
autres ADJ autre
corps NOUN corps
K NOUN k
que SCONJ que
R NOUN r
ou CCONJ ou
C NOUN c
, PUNCT ,
pour ADP pour
lesquels PRON lequel
1 NUM 1
K NOUN k
1 NUM 1
K NOUN k
0 NUM 0
K NOUN k
. PUNCT .
Par ADP par
exemple NOUN exemple
, PUNCT ,
Z2 PROPN Z2
Z. PROPN Z.
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
soit VERB être sub_pre
p NOUN p
N ADJ n
, PUNCT ,
p NOUN p
2 NUM 2
, PUNCT ,
soit VERB être sub_pre
Ap PROPN Ap
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
et CCONJ et
soit VERB être sub_pre
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xp NOUN xp
) PUNCT )
E NOUN e
p NOUN p
. PUNCT .
2 NUM 2
. PUNCT .
Soit VERB être sub_pre
i NUM i
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
n. NOUN n.
La DET le
valeur NOUN valeur
de ADP de
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xp NOUN xp
) PUNCT )
ne ADV ne
change VERB changer ind_pre
pas ADV pas
en ADP en
ajoutant VERB ajouter par_pre
à ADP à
xi NOUN xi
une DET un
combinaison NOUN combinaison
linéaire ADJ linéaire
de ADP de
tous ADJ tout
les DET le
xk PRON xk
avec ADP avec
k NOUN k
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
p NOUN p
, PUNCT ,
k NOUN k
6 NUM 6
i. NOUN i.
Démonstration NOUN démonstration
1 NUM 1
. PUNCT .
Si SCONJ si
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xp NOUN xp
) PUNCT )
est VERB être ind_pre
liée VERB lier par_pas pas_cop
, PUNCT ,
cela PRON cela
veut VERB vouloir ind_pre
dire VERB dire inf
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
i X i
1 NUM 1
, PUNCT ,
p NOUN p
tel ADJ tel
que SCONJ que
xi PROPN xi
soit VERB être sub_pre
une DET un
combinaison NOUN combinaison
linéaire ADJ linéaire
des ADP de
Puisque DET puisque
est VERB être ind_pre
linéaire ADJ linéaire
par ADP par
rapport NOUN rapport
à ADP à
sa DET son
i PROPN i
- PROPN -
ème ADJ èm
variable NOUN variable
: PUNCT :
puisque SCONJ puisque
xk AUX xk
apparaît VERB apparaître ind_pre
deux NUM deux
fois NOUN fois
dans ADP dans
( PUNCT (
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xi1 NOUN xi1
, PUNCT ,
xk CCONJ xk
, PUNCT ,
xi1 NOUN xi1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
) PUNCT )
car CCONJ car
k NOUN k
6 NUM 6
i NOUN i
et CCONJ et
est VERB être ind_pre
alternée ADJ alterné
. PUNCT .
i X i
- NOUN -
ème ADJ èm
variable NOUN variable
: PUNCT :
Théorème NOUN théorème
3.1 NUM 3.1
Dimension NOUN dimension
de ADP de
l' DET le
espace NOUN espace
des ADP de
formes NOUN forme
n ADJ n
- PUNCT -
linéaires ADJ linéaire
alternées VERB alterner par_pas
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
avec ADP avec
n AUX n
dim ADP dim
E NOUN e
1 NUM 1
. PUNCT .
Alors ADV alors
: PUNCT :
Démonstration NOUN démonstration
Comme SCONJ comme
est VERB être ind_pre
une DET un
forme NOUN forme
p NOUN p
- PUNCT -
linéaire ADJ linéaire
: PUNCT :
xin PRON xin
, PUNCT ,
n NOUN n
.ein ADJ .ein
Or CCONJ or
( PUNCT (
ei1 NOUN ei1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ein X ein
) PUNCT )
0 NUM 0
dès ADP dès
que SCONJ que
deux NUM deux
éléments NOUN élément
sont VERB être ind_pre
égaux ADJ égal
car CCONJ car
est VERB être ind_pre
alternée ADJ alterné
( PUNCT (
voir VERB voir inf
la DET le
propriété NOUN propriété
3.5 NUM 3.5
, PUNCT ,
page NOUN page
précédente ADJ précédent
) PUNCT )
. PUNCT .
Dans ADP dans
la DET le
somme NOUN somme
ci NOUN ci
- NUM -
dessus ADJ dessu
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
garder VERB garder inf
uniquement ADV uniquement
les DET le
familles NOUN famille
( PUNCT (
i1 NOUN i1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
in X in
) PUNCT )
d' ADP de
indices NOUN indice
tous ADJ tout
distincts PRON distincts
, PUNCT ,
ce PRON ce
qui PRON qui
correspond VERB correspondre ind_pre
exactement ADV exactement
aux ADP à
permutations NOUN permutation
de ADP de
1 PRON 1
, PUNCT ,
n. NOUN n.
On PRON on
a VERB avoir ind_pre
donc ADV donc
, PUNCT ,
en ADP en
utilisant VERB utiliser par_pre
le DET le
fait NOUN fait
que SCONJ que
est VERB être ind_pre
antisymétrique ADJ antisymétrique
: PUNCT :
Pour ADP pour
conclure VERB conclure inf
, PUNCT ,
il PRON il
reste VERB rester ind_pre
à ADP à
démontrer VERB démontrer inf
que SCONJ que
est VERB être ind_pre
une DET un
forme NOUN forme
n ADJ n
- PUNCT -
linéaire ADJ linéaire
alternée ADJ alterné
non ADV non
nulle ADJ nul
. PUNCT .
Le DET le
fait NOUN fait
que SCONJ que
D NOUN d
soit VERB être sub_pre
une DET un
forme NOUN forme
n ADJ n
- ADJ -
linéaire ADJ linéaire
est VERB être ind_pre
une DET un
simple ADJ simple
vérification NOUN vérification
( PUNCT (
en ADP en
exercice NOUN exercice
) PUNCT )
. PUNCT .
Par ADP par
le DET le
changement NOUN changement
de ADP de
variable NOUN variable
k PROPN k
( PUNCT (
j NOUN j
) PUNCT )
: PUNCT :
L' DET le
application NOUN application
s NOUN s
7 NUM 7
( PUNCT (
0 NUM 0
) PUNCT )
1 NUM 1
est VERB être ind_pre
une DET un
bijection NOUN bijection
de ADP de
Sn PRON sn
dans ADP dans
lui-même PRON lui-même
donc ADV donc
on PRON on
peut VERB pouvoir ind_pre
faire VERB faire inf
le DET le
changement NOUN changement
ce PRON ce
qui PRON qui
démontre VERB démontrer ind_pre
que SCONJ que
D NOUN d
est VERB être ind_pre
antisymétrique ADJ antisymétrique
. PUNCT .
Or CCONJ or
ei PROPN ei
, PUNCT ,
j PRON j
0 NUM 0
si SCONJ si
i ADP i
6 NUM 6
j NOUN j
et CCONJ et
ei PROPN ei
, PUNCT ,
i ADJ i
1 NUM 1
, PUNCT ,
donc ADV donc
les DET le
produits NOUN produit
ci PRON ci
- PRON -
dessus PRON dessus
sont VERB être ind_pre
nuls ADJ nul
pour ADP pour
tous ADJ tout
les DET le
différents ADJ différent
de ADP de
l' DET le
identité NOUN identité
. PUNCT .
Finalement ADV finalement
, PUNCT ,
En ADP en
particulier ADJ particulier
, PUNCT ,
D NOUN d
ne ADV ne
est VERB être ind_pre
pas ADV pas
la DET le
forme NOUN forme
n ADJ n
- PUNCT -
linéaire ADJ linéaire
nulle ADJ nul
. PUNCT .
Finalement ADV finalement
, PUNCT ,
on PRON on
a VERB avoir
démontré VERB démontrer pas_cop
que SCONJ que
.D PROPN .D
avec ADP avec
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en ADP en
) PUNCT )
et CCONJ et
D NOUN d
une DET un
forme NOUN forme
n ADJ n
- PUNCT -
linéaire ADJ linéaire
alternée ADJ alterné
non ADV non
nulle ADJ nul
, PUNCT ,
ce PRON ce
qui PRON qui
démontre VERB démontrer ind_pre
que SCONJ que
An X An
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
VectD PROPN VectD
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
. PUNCT .
Plus ADV plus
généralement ADV généralement
, PUNCT ,
on PRON on
a VERB avoir ind_pre
les DET le
dimensions NOUN dimension
suivantes ADJ suivant
: PUNCT :
et CCONJ et
dim ADJ dim
Ap PROPN Ap
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
1 NUM 1
. PUNCT .
On PRON on
remarque VERB remarquer ind_pre
en ADP en
particulier ADJ particulier
que SCONJ que
la DET le
famille NOUN famille
e?(i1 VERB e?(i1
, PUNCT ,
... PUNCT ...
, PUNCT ,
in X in
) PUNCT )
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
Lp NOUN lp
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
, PUNCT ,
avec ADP avec
: PUNCT :
2 NUM 2
. PUNCT .
de ADP de
même ADV même
, PUNCT ,
la DET le
famille NOUN famille
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
Sp PROPN Sp
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
3 NUM 3
. PUNCT .
et CCONJ et
la DET le
famille NOUN famille
, PUNCT ,
lorsque SCONJ lorsque
p NOUN p
n NOUN n
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
Ap PROPN Ap
( PUNCT (
E NOUN e
, PUNCT ,
K NOUN k
) PUNCT )
. PUNCT .
Déterminant VERB déterminer par_pre
d' ADP de
une DET un
famille NOUN famille
de ADP de
vecteurs NOUN vecteur
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
avec ADP avec
n AUX n
dim ADP dim
E NOUN e
1 NUM 1
, PUNCT ,
soit VERB être sub_pre
E VERB e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en ADP en
) PUNCT )
une DET un
base NOUN base
de ADP de
E NOUN e
On PRON on
appelle VERB appeler ind_pre
déterminant VERB déterminer par_pre
des ADP de
vecteurs NOUN vecteur
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xn VERB xn
) PUNCT )
dans ADP dans
la DET le
base NOUN base
E NOUN e
et CCONJ et
on PRON on
note VERB noter ind_pre
: PUNCT :
a. PROPN a.
Attention NOUN attention
, PUNCT ,
le DET le
nombre NOUN nombre
de ADP de
vecteurs NOUN vecteur
doit VERB devoir ind_pre
être VERB être inf
égal ADJ égal
à ADP à
la DET le
dimension NOUN dimension
de ADP de
l' DET le
espace NOUN espace
. PUNCT .
Considérons VERB considérer imper
E NOUN e
K2 NOUN k2
muni VERB munir par_pas
de ADP de
la DET le
base NOUN base
canonique ADJ canonique
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
e2 PROPN e2
) PUNCT )
ainsi ADV ainsi
que SCONJ que
deux NUM deux
vecteurs NOUN vecteur
u ADP u
( PUNCT (
a VERB avoir ind_pre
, PUNCT ,
b NOUN b
) PUNCT )
a.e1 NOUN a.e1
b.e2 ADJ b.e2
et CCONJ et
v NOUN v
( PUNCT (
c NOUN c
, PUNCT ,
d SYM d
) PUNCT )
c.e1 ADJ c.e1
d.e2 NOUN d.e2
de ADP de
E. PROPN E.
Le DET le
groupe NOUN groupe
symétrique ADJ symétrique
S2 ADJ s2
a VERB avoir ind_pre
2 NUM 2
! PUNCT !
2 NUM 2
éléments NOUN élément
, PUNCT ,
l' DET le
identité NOUN identité
id1,2 PROPN id1,2
et CCONJ et
la DET le
transposition NOUN transposition
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
avec ADP avec
n AUX n
dim ADP dim
E NOUN e
1 NUM 1
, PUNCT ,
soit VERB être sub_pre
E VERB e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en ADP en
) PUNCT )
une DET un
base NOUN base
de ADP de
E NOUN e
1 NUM 1
. PUNCT .
detE VERB dete
est VERB être ind_pre
une DET un
forme NOUN forme
n ADJ n
- PUNCT -
linéaire ADJ linéaire
antisymétrique ADJ antisymétrique
sur ADP sur
E NOUN e
( PUNCT (
et CCONJ et
donc ADV donc
alternée ADJ alterné
) PUNCT )
. PUNCT .
5 NUM 5
. PUNCT .
Soit VERB être sub_pre
i NUM i
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
n. NOUN n.
La DET le
valeur NOUN valeur
de ADP de
detE VERB dete
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xp NOUN xp
) PUNCT )
ne ADV ne
change VERB changer ind_pre
pas ADV pas
en ADP en
ajoutant VERB ajouter par_pre
à ADP à
xi NOUN xi
une DET un
combinaison NOUN combinaison
linéaire ADJ linéaire
de ADP de
tous ADJ tout
les DET le
xj NOUN xj
avec ADP avec
j PROPN j
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
p NOUN p
, PUNCT ,
j NOUN j
6 NUM 6
i. NOUN i.
Démonstration NOUN démonstration
Les DET le
trois NUM trois
propriétés NOUN propriété
ont VERB avoir
déjà ADV déjà
été VERB être pas_cop
démontrées VERB démontrer par_pas
lors ADV lors
de ADP de
la DET le
démonstration NOUN démonstration
du ADP de
théorème NOUN théorème
3.1 NOUN 3.1
, PUNCT ,
page NOUN page
157 NUM 157
et CCONJ et
les DET le
deux NUM deux
dernières ADJ dernier
sont VERB être ind_pre
exactement ADV exactement
la DET le
propriété NOUN propriété
3.6 NUM 3.6
, PUNCT ,
page NOUN page
156 NUM 156
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
avec ADP avec
n AUX n
dim ADP dim
E NOUN e
1 NUM 1
et CCONJ et
soit VERB être sub_pre
E VERB e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en ADP en
) PUNCT )
une DET un
base NOUN base
de ADP de
c' PRON ce
est VERB être ind_pre
le DET le
cas NOUN cas
: PUNCT :
Démonstration NOUN démonstration
1 NUM 1
. PUNCT .
C' PRON ce
est VERB être ind_pre
le DET le
point NOUN point
2 NUM 2
de ADP de
la DET le
propriété NOUN propriété
3.7 NUM 3.7
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
page NOUN page
en ADP en
remarquant VERB remarquer par_pre
que SCONJ que
detB PRON detb
est VERB être ind_pre
une DET un
forme NOUN forme
n ADJ n
- PUNCT -
linéaire ADJ linéaire
alternée ADJ alterné
sur ADP sur
E. PROPN E.
2 NUM 2
. PUNCT .
Supposons VERB supposer ind_pre
que SCONJ que
C NOUN c
soit VERB être sub_pre
une DET un
base NOUN base
de ADP de
E. PROPN E.
D' ADP de
après ADP après
le DET le
résultat NOUN résultat
précédent ADJ précédent
, PUNCT ,
nous PRON nous
avons VERB avoir ind_pre
Par ADP par
contraposition NOUN contraposition
, PUNCT ,
si SCONJ si
la DET le
famille NOUN famille
C NOUN c
ne ADV ne
est VERB être ind_pre
pas ADV pas
une DET un
base NOUN base
de ADP de
E NOUN e
alors ADV alors
elle PRON lui
est VERB être ind_pre
liée VERB lier par_pas pas_cop
donc ADV donc
detE VERB dete
( PUNCT (
c1 NOUN c1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
cn PROPN cn
) PUNCT )
0 NUM 0
d' ADP de
après ADP après
la DET le
propriété NOUN propriété
3.6 NUM 3.6
, PUNCT ,
page NOUN page
156 NUM 156
. PUNCT .
Déterminant VERB déterminer par_pre
d' ADP de
une DET un
matrice NOUN matrice
carrée ADJ carré
Soit VERB être sub_pre
a VERB avoir ind_pre
A X A
ai NOUN ai
, PUNCT ,
j PROPN j
( PUNCT (
i X i
, PUNCT ,
j)1,n2 NOUN j)1,n2
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
déterminant VERB déterminer par_pre
de ADP de
A NOUN a
et CCONJ et
on PRON on
note NOUN note
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
c' PRON ce
est VERB être ind_pre
le DET le
déterminant NOUN déterminant
de ADP de
la DET le
famille NOUN famille
des ADP de
n AUX n
colonnes ADJ colonne
de ADP de
A PROPN A
dans ADP dans
la DET le
base NOUN base
canonique ADJ canonique
de ADP de
Mn,1 PROPN Mn,1
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
a. VERB avoir ind_pre
Attention PROPN Attention
, PUNCT ,
il PRON il
faut VERB falloir ind_pre
que SCONJ que
la DET le
matrice NOUN matrice
soit VERB être sub_pre
carrée ADJ carré
. PUNCT .
d' ADP de
après ADP après
l' DET le
exemple NOUN exemple
3.4 NUM 3.4
, PUNCT ,
page NOUN page
précédente ADJ précédent
. PUNCT .
On PRON on
mémorise VERB mémoriser ind_pre
par ADP par
: PUNCT :
1 NUM 1
. PUNCT .
L' DET le
application NOUN application
est VERB être ind_pre
une DET un
forme NOUN forme
n ADJ n
- PUNCT -
linéaire ADJ linéaire
antisymétrique ADJ antisymétrique
sur ADP sur
Mn,1 PROPN Mn,1
( PUNCT (
K NOUN k
) PUNCT )
( PUNCT (
donc ADV donc
alternée ADJ alterné
) PUNCT )
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
3 NUM 3
. PUNCT .
Pour ADP pour
toute DET tout
A VERB avoir ind_pre
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
A NOUN a
est VERB être ind_pre
inversible ADJ inversible
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
det(A ADJ det(a
) PUNCT )
6 NUM 6
0 NUM 0
. PUNCT .
Si SCONJ si
c' PRON ce
est VERB être ind_pre
le DET le
cas NOUN cas
: PUNCT :
Démonstration NOUN démonstration
Notons VERB noter imper
C NOUN c
( PUNCT (
C1 NOUN c1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Cn NOUN cn
) PUNCT )
la DET le
base NOUN base
canonique ADJ canonique
de ADP de
Mn,1 PROPN Mn,1
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
1 NUM 1
. PUNCT .
C' PRON ce
est VERB être ind_pre
une DET un
conséquence NOUN conséquence
immédiate ADJ immédiat
du ADP de
fait NOUN fait
que SCONJ que
detC PRON detc
est VERB être ind_pre
une DET un
forme NOUN forme
n ADJ n
- PUNCT -
linéaire ADJ linéaire
alternée ADJ alterné
sur ADP sur
Mn,1 PROPN Mn,1
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
2 NUM 2
. PUNCT .
Soit VERB être sub_pre
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
Considérons VERB considérer ind_pre
l' DET le
application NOUN application
On PRON on
vérifie VERB vérifier ind_pre
alors ADV alors
que SCONJ que
c' PRON ce
est VERB être ind_pre
une DET un
forme NOUN forme
n ADJ n
- PUNCT -
linéaire ADJ linéaire
alternée ADJ alterné
. PUNCT .
D' ADP de
après ADP après
le DET le
point NOUN point
2 NUM 2
de ADP de
la DET le
propriété NOUN propriété
3.7 NUM 3.7
, PUNCT ,
page NOUN page
159 NUM 159
, PUNCT ,
où PRON où
A1 PROPN A1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
An VERB an
sont VERB être ind_pre
les DET le
colonnes NOUN colonne
de ADP de
A. PROPN A.
Pour ADP pour
toute DET tout
B NOUN b
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
en ADP en
note NOUN note
B1 ADJ b1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Bn NOUN bn
ses DET son
colonnes NOUN colonne
, PUNCT ,
3 NUM 3
. PUNCT .
Soit VERB être sub_pre
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
Alors ADV alors
A NOUN a
est VERB être ind_pre
inversible ADJ inversible
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
ses DET son
colonnes NOUN colonne
A1 ADJ a1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
An VERB an
forment VERB former ind_pre
une DET un
base NOUN base
de ADP de
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
. PUNCT .
4 NUM 4
. PUNCT .
Considérons VERB considérer ind_pre
l' DET le
application NOUN application
On PRON on
vérifie VERB vérifier ind_pre
alors ADV alors
que SCONJ que
c' PRON ce
est VERB être ind_pre
une DET un
forme NOUN forme
n ADJ n
- PUNCT -
linéaire ADJ linéaire
alternée ADJ alterné
. PUNCT .
D' ADP de
après ADP après
le DET le
point NOUN point
2 NUM 2
de ADP de
la DET le
propriété NOUN propriété
3.7 NUM 3.7
, PUNCT ,
page NOUN page
159 NUM 159
, PUNCT ,
d' ADP de
où PRON où
, PUNCT ,
pour ADP pour
toute DET tout
A VERB avoir ind_pre
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
de ADP de
colonnes NOUN colonne
A1 NOUN a1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
An NOUN an
: PUNCT :
Le DET le
déterminant NOUN déterminant
ne ADV ne
est VERB être ind_pre
pas ADV pas
linéaire ADJ linéaire
! PUNCT !
Il PRON il
est VERB être ind_pre
en ADP en
général NOUN général
faux ADJ faux
que PRON que
det(A VERB det(er
B NOUN b
) PUNCT )
det X det
A ADP à
det NOUN det
B. PROPN B.
On PRON on
a VERB avoir ind_pre
donc ADV donc
une DET un
information NOUN information
intéressante ADJ intéressant
: PUNCT :
si SCONJ si
A NOUN a
et CCONJ et
B NOUN b
sont VERB être ind_pre
deux NUM deux
matrices NOUN matrice
semblables ADJ semblable
de ADP de
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
alors ADV alors
: PUNCT :
det X det
A ADP à
det ADV det
B NOUN b
En ADP en
effet NOUN effet
, PUNCT ,
si SCONJ si
il PRON il
existe VERB exister ind_pre
P X P
GLn PROPN GLn
( PUNCT (
K NOUN k
) PUNCT )
telle ADJ tel
que SCONJ que
B NOUN b
P NOUN p
1 NUM 1
A NOUN a
P NOUN p
: PUNCT :
det(A ADJ det(a
) PUNCT )
det(P NOUN det(p
) PUNCT )
det(A ADJ det(a
) PUNCT )
La DET le
réciproque NOUN réciproque
est VERB être ind_pre
fausse ADJ faux
( PUNCT (
par ADP par
exemple NOUN exemple
, PUNCT ,
une DET un
matrice NOUN matrice
non ADV non
inversible ADJ inversible
est VERB être ind_pre
de ADP de
déterminant NOUN déterminant
nulle ADJ nul
, PUNCT ,
mais CCONJ mais
ne ADV ne
est VERB être ind_pre
pas ADV pas
semblable ADJ semblable
à ADP à
la DET le
matrice NOUN matrice
nulle ADJ nul
sauf ADP sauf
si SCONJ si
elle PRON lui
est VERB être ind_pre
elle-même PRON lui-même
nulle ADJ nul
) PUNCT )
. PUNCT .
Déterminant VERB déterminer par_pre
d' ADP de
un DET un
endomorphisme NOUN endomorphisme
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Le DET le
déterminant NOUN déterminant
de ADP de
u NOUN u
, PUNCT ,
noté VERB noter par_pas
det NOUN det
u NOUN u
, PUNCT ,
est VERB être ind_pre
défini VERB définir par_pas
par ADP par
det X det
u ADP u
det NOUN det
MatE PROPN MatE else
( PUNCT (
u NOUN u
) PUNCT )
où PRON où
E NOUN e
est VERB être ind_pre
une DET un
base NOUN base
quelconque ADJ quelconque
de ADP de
E NOUN e
Cette DET ce
définition NOUN définition
a VERB avoir ind_pre
bien ADV bien
un DET un
sens NOUN sens
: PUNCT :
les DET le
matrices NOUN matrice
de ADP de
u PROPN u
dans ADP dans
deux NUM deux
bases NOUN base
de ADP de
E NOUN e
différentes ADJ différent
sont VERB être ind_pre
semblables ADJ semblable
, PUNCT ,
donc ADV donc
elles PRON lui
ont VERB avoir ind_pre
même ADV même
déterminant VERB déterminer par_pre
( PUNCT (
remarque X remarque
3.9 NUM 3.9
, PUNCT ,
page NOUN page
précédente ADJ précédent
) PUNCT )
. PUNCT .
det X det
idE AUX ide
det ADV det
In X In
1 NUM 1
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
soit VERB être sub_pre
E NOUN e
une DET un
base NOUN base
de ADP de
E NOUN e
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Alors ADV alors
: PUNCT :
Démonstration NOUN démonstration
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
soit VERB être sub_pre
( PUNCT (
u X u
, PUNCT ,
v NOUN v
) PUNCT )
L NOUN l
( PUNCT (
E)2 NOUN e)2
. PUNCT .
1 NUM 1
. PUNCT .
Pour ADP pour
tout DET tout
K NOUN k
, PUNCT ,
det(.u PROPN det(.u
) PUNCT )
n NOUN n
det(u PROPN det(u
) PUNCT )
3 NUM 3
. PUNCT .
u NOUN u
est VERB être ind_pre
inversible ADJ inversible
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
det(u PROPN det(u
) PUNCT )
6 NUM 6
0 NUM 0
. PUNCT .
Si SCONJ si
c' PRON ce
est VERB être ind_pre
le DET le
cas NOUN cas
det(u1 NUM det(u1
) PUNCT )
( PUNCT (
det NOUN det
u)1 PROPN u)1
Démonstration NOUN démonstration
det(.u PROPN det(.u
) PUNCT )
det(.U ADJ det(.u
) PUNCT )
n NOUN n
det ADV det
U NOUN u
n ADJ n
det ADV det
u X u
3 NUM 3
. PUNCT .
u NOUN u
est VERB être ind_pre
inversible ADJ inversible
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
U NOUN u
est VERB être ind_pre
inversible ADJ inversible
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
det NOUN det
u X u
det ADV det
U NOUN u
6 NUM 6
0 NOUN 0
. PUNCT .
Si SCONJ si
c' PRON ce
est VERB être ind_pre
le DET le
cas NOUN cas
, PUNCT ,
U NOUN u
est VERB être ind_pre
inversible ADJ inversible
donc ADV donc
Méthodes NOUN méthode
de ADP de
calcul NOUN calcul
de ADP de
déterminants PRON déterminants
La DET le
formule NOUN formule
définissant VERB définir par_pre
le DET le
déterminant NOUN déterminant
et CCONJ et
faisant VERB faire par_pre
intervenir VERB intervenir inf
Sn PRON sn
est VERB être ind_pre
utile ADJ utile
théoriquement ADV théoriquement
a PRON a
mais CCONJ mais
inutilisable ADJ inutilisable
en ADP en
pratique NOUN pratique
dès ADP dès
que SCONJ que
n NOUN n
est VERB être ind_pre
plus ADV plus
grand ADJ grand
que SCONJ que
4 NUM 4
ou CCONJ ou
5 NUM 5
. PUNCT .
En ADP en
effet NOUN effet
, PUNCT ,
il PRON il
y PRON y
a VERB avoir ind_pre
n X ne
! PUNCT !
permutations NOUN permutation
de ADP de
1 PRON 1
, PUNCT ,
n NOUN n
dans ADP dans
lui-même PRON lui-même
. PUNCT .
Ainsi ADV ainsi
, PUNCT ,
pour ADP pour
calculer VERB calculer inf
un DET un
déterminant NOUN déterminant
d' ADP de
une DET un
matrice NOUN matrice
carrée ADJ carré
d' ADP de
ordre NOUN ordre
5 NUM 5
, PUNCT ,
il PRON il
faut VERB falloir ind_pre
effectuer VERB effectuer inf
Pire X Pire
encore ADV encore
, PUNCT ,
60 NUM 60
! PUNCT !
' PUNCT '
1082 VERB 1082
est VERB être ind_pre
supérieur ADJ supérieur
au ADP à
nombre NOUN nombre
d' ADP de
atomes NOUN atome
observables ADJ observable
dans ADP dans
l' DET le
univers NOUN univers
, PUNCT ,
alors ADV alors
que SCONJ que
les DET le
problèmes NOUN problème
de ADP de
mathématiques NOUN mathématique
appliquées VERB appliquer par_pas
et CCONJ et
d' ADP de
ingénierie NOUN ingénierie
moderne ADJ moderne
nécessitent VERB nécessiter ind_pre sub_pre
de ADP de
traiter VERB traiter inf
des DET un
matrices NOUN matrice
qui PRON qui
ont VERB avoir ind_pre
des DET un
centaines NOUN centaine
de ADP de
milliers NOUN millier
voire CCONJ voire
des ADP de
millions NOUN million
de ADP de
lignes NOUN ligne
... PUNCT ...
Il PRON il
faut VERB falloir ind_pre
donc ADV donc
trouver VERB trouver inf
des DET un
méthodes NOUN méthode
plus ADV plus
efficaces ADJ efficace
. PUNCT .
a. VERB avoir ind_pre
Par ADP par
exemple NOUN exemple
pour ADP pour
démontrer VERB démontrer inf
que SCONJ que
( PUNCT (
ai PROPN avoir
, PUNCT ,
j PROPN j
) PUNCT )
( PUNCT (
i NOUN i
, PUNCT ,
j)1,n2 NOUN j)1,n2
7 NUM 7
det NOUN det
ai VERB avoir ind_pre
, PUNCT ,
j PROPN j
( PUNCT (
i NOUN i
, PUNCT ,
j)1,n2 NOUN j)1,n2
est VERB être ind_pre
polynomiale ADJ polynomial
donc ADV donc
de ADP de
classe NOUN classe
C NOUN c
. PUNCT .
Déterminant VERB déterminer par_pre
d' ADP de
une DET un
matrice NOUN matrice
triangulaire ADJ triangulaire
Soit VERB être sub_pre
A ADP à
ai NOUN ai
, PUNCT ,
j PROPN j
( PUNCT (
i X i
, PUNCT ,
j)1,n2 NOUN j)1,n2
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
Si SCONJ si
A VERB avoir ind_pre
est VERB être ind_pre
triangulaire ADJ triangulaire
supérieure ADJ supérieur
( PUNCT (
ou CCONJ ou
triangulaire ADJ triangulaire
inférieure ADJ inférieur
, PUNCT ,
ou CCONJ ou
diagonale ADJ diagonal
) PUNCT )
, PUNCT ,
alors ADV alors
Démonstration NOUN démonstration
Supposons VERB supposer imper
que SCONJ que
A NOUN a
soit VERB être sub_pre
triangulaire ADJ triangulaire
supérieure ADJ supérieur
. PUNCT .
On PRON on
a VERB avoir ind_pre
: PUNCT :
Pour ADP pour
Sn NOUN sn
, PUNCT ,
si SCONJ si
il PRON il
existe VERB exister ind_pre
j PRON j
1 NUM 1
, PUNCT ,
n NOUN n
tel ADJ tel
que SCONJ que
( PUNCT (
j NOUN j
) PUNCT )
j NOUN j
, PUNCT ,
alors ADV alors
a(j),j PROPN a(j),j
0 NUM 0
car CCONJ car
A NOUN a
est VERB être ind_pre
triangulaire ADJ triangulaire
supérieure ADJ supérieur
. PUNCT .
Dans ADP dans
l' DET le
expression NOUN expression
ci ADV ci
- NUM -
dessus ADJ dessu
, PUNCT ,
il PRON il
ne ADV ne
reste VERB rester ind_pre
plus ADV plus
que SCONJ que
les DET le
termes NOUN terme
correspondant VERB correspondre par_pre
à ADP à
une DET un
permutation NOUN permutation
telle ADJ tel
que SCONJ que
( PUNCT (
j NOUN j
) PUNCT )
j NOUN j
pour ADP pour
tout DET tout
j NOUN j
1 NUM 1
, PUNCT ,
n. NOUN n.
Démontrons VERB démontrer ind_pre
qu' SCONJ que
une DET un
telle ADJ tel
permutation NOUN permutation
est VERB être ind_pre
l' DET le
identité NOUN identité
. PUNCT .
Supposons VERB supposer ind_pre
que SCONJ que
s1,k NOUN s1,k
soit VERB être sub_pre
l' DET le
identité NOUN identité
pour ADP pour
un DET un
k NOUN k
1 NUM 1
, PUNCT ,
n. PRON n.
On PRON on
a VERB avoir ind_pre
d' ADP de
une DET un
part NOUN part
( PUNCT (
k NOUN k
1 NUM 1
) PUNCT )
k NOUN k
1 NUM 1
mais CCONJ mais
comme ADP comme
est VERB être ind_pre
injective VERB injective
, PUNCT ,
( PUNCT (
k NOUN k
1 NUM 1
) PUNCT )
1 NUM 1
, PUNCT ,
k NOUN k
d' ADP de
où PRON où
( PUNCT (
k NOUN k
1 NUM 1
) PUNCT )
k NOUN k
1 PRON 1
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
que SCONJ que
1,k1 AUX 1,k1
est VERB être ind_pre
l' DET le
identité NOUN identité
. PUNCT .
Par ADP par
principe NOUN principe
de ADP de
récurrence NOUN récurrence
, PUNCT ,
est VERB être ind_pre
l' DET le
identité NOUN identité
. PUNCT .
Dans ADP dans
la DET le
formule NOUN formule
du ADP de
déterminant VERB déterminer par_pre
ci ADV ci
- NUM -
dessus ADJ dessu
, PUNCT ,
il PRON il
ne ADV ne
reste VERB rester ind_pre
donc ADV donc
plus ADV plus
que SCONJ que
le DET le
terme NOUN terme
correspondant VERB correspondre par_pre
à ADP à
id1,n NOUN id1,n
, PUNCT ,
d' ADP de
où PRON où
Pour ADP pour
une DET un
matrice NOUN matrice
triangulaire ADJ triangulaire
inférieure ADJ inférieur
, PUNCT ,
on PRON on
utilise VERB utiliser ind_pre
le DET le
fait NOUN fait
que PRON que
sa DET son
transposée NOUN transposée
est VERB être ind_pre
triangulaire ADJ triangulaire
supérieure ADJ supérieur
. PUNCT .
det(A ADJ det(a
) PUNCT )
det(D X det(D
) PUNCT )
Démonstration NOUN démonstration
Considérons VERB considérer imper
l' DET le
application NOUN application
On PRON on
vérifie VERB vérifier ind_pre
que SCONJ que
c' PRON ce
est VERB être ind_pre
une DET un
forme NOUN forme
n1 NOUN n1
-linéaire ADJ -linéair
alternée ADJ alterné
sur ADP sur
Mn1 PRON mn1
, PUNCT ,
1 NUM 1
( PUNCT (
K)p NUM K)p
donc ADV donc
, PUNCT ,
en ADP en
notant VERB noter par_pre
C NOUN c
( PUNCT (
C1 NOUN c1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Cn1 ADJ cn1
) PUNCT )
la DET le
base NOUN base
canonique ADJ canonique
de ADP de
Mn1 NOUN mn1
, PUNCT ,
1 NUM 1
( PUNCT (
K NOUN k
) PUNCT )
: PUNCT :
donc ADV donc
si SCONJ si
A1 NOUN a1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
An1 PROPN An1
sont VERB être ind_pre
les DET le
colonnes NOUN colonne
d' ADP de
une DET un
matrice NOUN matrice
A ADP à
Mn1 NOUN mn1
( PUNCT (
K NOUN k
) PUNCT )
: PUNCT :
Considérons VERB considérer imper
maintenant ADV maintenant
l' DET le
application NOUN application
0 NUM 0
) PUNCT )
la DET le
base NOUN base
On PRON on
vérifie VERB vérifier ind_pre
que SCONJ que
c' PRON ce
est VERB être ind_pre
une DET un
forme NOUN forme
n2 ADJ n2
-linéaire ADJ -linéair
alternée ADJ alterné
sur ADP sur
Mn2 PROPN Mn2
, PUNCT ,
1 NUM 1
( PUNCT (
K)n2 ADJ k)n2
donc ADV donc
, PUNCT ,
en ADP en
notant VERB noter par_pre
C NOUN c
0 NUM 0
( PUNCT (
C10 NOUN c10
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Cn NOUN cn
canonique ADJ canonique
de ADP de
Mn2 PROPN Mn2
, PUNCT ,
1 NUM 1
( PUNCT (
K NOUN k
) PUNCT )
: PUNCT :
donc ADV donc
si SCONJ si
B1 PROPN B1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Bn2 NOUN bn2
sont VERB être ind_pre
les DET le
colonnes NOUN colonne
d' ADP de
une DET un
matrice NOUN matrice
B NOUN b
Mn2 PROPN Mn2
, PUNCT ,
1 NUM 1
( PUNCT (
K NOUN k
) PUNCT )
: PUNCT :
det(B PROPN det(B
) PUNCT )
det(A ADJ det(a
) PUNCT )
car CCONJ car
c' PRON ce
est VERB être ind_pre
une DET un
matrice NOUN matrice
triangulaire ADJ triangulaire
supérieure ADJ supérieur
( PUNCT (
voir VERB voir inf
la DET le
propriété NOUN propriété
3.12 NUM 3.12
, PUNCT ,
page NOUN page
précédente ADJ précédent
) PUNCT )
, PUNCT ,
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
. PUNCT .
Il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
pas ADV pas
de ADP de
formule NOUN formule
générale ADJ général
pour ADP pour
les DET le
déterminants NOUN déterminant
des ADP de
matrices NOUN matrice
- ADJ -
blocs NOUN bloc
. PUNCT .
Par ADP par
exemple NOUN exemple
, PUNCT ,
si SCONJ si
A NOUN a
, PUNCT ,
B NOUN b
, PUNCT ,
C NOUN c
et CCONJ et
D NOUN d
sont VERB être ind_pre
dans ADP dans
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
alors ADV alors
, PUNCT ,
si SCONJ si
D NOUN d
est VERB être ind_pre
inversible ADJ inversible
a VERB avoir ind_pre
: PUNCT :
mais CCONJ mais
cela PRON cela
ne ADV ne
fonctionne VERB fonctionner ind_pre
pas ADV pas
lorsque SCONJ lorsque
D NOUN d
ne ADV ne
est VERB être ind_pre
pas ADV pas
inversible ADJ inversible
. PUNCT .
a. VERB avoir ind_pre
Exercice NOUN exercice
conseillé VERB conseiller par_pas
. PUNCT .
Par ADP par
l' DET le
algorithme NOUN algorithme
du ADP de
pivot NOUN pivot
de ADP de
Gauss NOUN gauss
En ADP en
pratique NOUN pratique
, PUNCT ,
lors ADV lors
de ADP de
l' DET le
algorithme NOUN algorithme
du ADP de
pivot NOUN pivot
de ADP de
Gauss PROPN Gauss
: PUNCT :
1 NUM 1
. PUNCT .
les DET le
opérations NOUN opération
Li NOUN li
Li PROPN Li
.Lj NOUN .lj
et CCONJ et
Ci DET ci
Ci DET ci
.Cj PROPN .Cj
( PUNCT (
transvections NOUN transvection
) PUNCT )
ne ADV ne
modifient VERB modifier ind_pre
pas ADV pas
la DET le
valeur NOUN valeur
du ADP de
déterminant VERB déterminer par_pre
( PUNCT (
d' ADP de
après ADP après
le DET le
point NOUN point
5 NUM 5
de ADP de
la DET le
propriété NOUN propriété
3.7 NUM 3.7
, PUNCT ,
page NOUN page
159 NUM 159
) PUNCT )
2 NUM 2
. PUNCT .
les DET le
opérations NOUN opération
Li NOUN li
.Li PROPN .Li
et CCONJ et
Ci DET ci
.Ci PROPN .Ci
( PUNCT (
dilatations NOUN dilatation
) PUNCT )
multiplient VERB multiplier ind_pre
le DET le
déterminant VERB déterminer par_pre
par ADP par
( PUNCT (
car CCONJ car
le DET le
détermiPage NOUN détermipage
164292 NUM 164292
nant ADJ nant
est VERB être ind_pre
n ADV n
- ADV -
linéaire ADJ linéaire
par ADP par
rapport NOUN rapport
aux ADP à
colonnes NOUN colonne
et CCONJ et
aux ADP à
lignes NOUN ligne
) PUNCT )
3 NUM 3
. PUNCT .
les DET le
opérations NOUN opération
Li NOUN li
Lj PROPN Lj
et CCONJ et
Ci DET ci
Cj PROPN Cj
( PUNCT (
échanges NOUN échange
) PUNCT )
multiplient VERB multiplier ind_pre
le DET le
déterminant VERB déterminer par_pre
par ADP par
1 PRON 1
( PUNCT (
car CCONJ car
le DET le
déterminant NOUN déterminant
est VERB être ind_pre
n ADV n
- PUNCT -
linéaire ADJ linéaire
alternée ADJ alterné
par ADP par
rapport NOUN rapport
aux ADP à
colonnes NOUN colonne
et CCONJ et
aux ADP à
lignes NOUN ligne
) PUNCT )
. PUNCT .
Ainsi ADV ainsi
, PUNCT ,
cet DET ce
algorithme NOUN algorithme
permet VERB permettre ind_pre
de ADP de
calculer VERB calculer inf
des DET un
déterminants NOUN déterminant
en ADP en
se PRON se
ramenant VERB ramener par_pre
à ADP à
des DET un
matrices NOUN matrice
triangulaires ADJ triangulaire
supérieures ADJ supérieur
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
démontrer VERB démontrer inf
que SCONJ que
le DET le
calcul NOUN calcul
du ADP de
déterminant NOUN déterminant
d' ADP de
une DET un
matrice NOUN matrice
carrée ADJ carré
de ADP de
taille NOUN taille
n NOUN n
par ADP par
la DET le
méthode NOUN méthode
du ADP de
pivot NOUN pivot
de ADP de
Gauss NOUN gauss
nécessite VERB nécessiter ind_pre
un DET un
nombre NOUN nombre
d' ADP de
opération NOUN opération
de ADP de
l' DET le
ordre NOUN ordre
de ADP de
n3 NOUN n3
, PUNCT ,
ce PRON ce
qui PRON qui
est VERB être ind_pre
bien ADV bien
meilleur ADJ meilleur
que SCONJ que
n!. NOUN n!.
Soit VERB être sub_pre
à ADP à
calculer VERB calculer inf
( PUNCT (
n NOUN n
2 NUM 2
) PUNCT )
: PUNCT :
En ADP en
faisant VERB faire par_pre
les DET le
transvections NOUN transvection
successives ADJ successif
( PUNCT (
qui PRON qui
conservent VERB conserver ind_pre
le DET le
déterminant NOUN déterminant
) PUNCT )
: PUNCT :
On PRON on
fait VERB faire ind_pre
apparaître VERB apparaître inf
deux NUM deux
lignes NOUN ligne
identiques ADJ identique
, PUNCT ,
donc ADV donc
: PUNCT :
Si SCONJ si
a VERB avoir ind_pre
, PUNCT ,
b NOUN b
, PUNCT ,
c NOUN c
, PUNCT ,
d X d
, PUNCT ,
e X e
, PUNCT ,
f CCONJ f
, PUNCT ,
g NOUN gramme
, PUNCT ,
h NOUN heure
et CCONJ et
i PRON i
sont VERB être ind_pre
dans ADP dans
K NOUN k
, PUNCT ,
alors ADV alors
e PROPN e
f DET f
aei ADJ aei
dhc DET dhc
gbf ADV gbf
gec NOUN gec
ahf VERB ahf
dbi NOUN dbi
que SCONJ que
l' PRON l'
on PRON on
peut VERB pouvoir ind_pre
mémoriser VERB mémoriser inf
par ADP par
la DET le
règle NOUN règle
de ADP de
Sarrus PROPN Sarrus
: PUNCT :
On PRON on
remarque VERB remarquer ind_pre
, PUNCT ,
qu' ADV qu'
avant ADP avant
développement NOUN développement
, PUNCT ,
Wxmaxima PROPN Wxmaxima
nous PRON nous
proposait VERB proposer impar
une DET un
formule NOUN formule
non ADV non
développée VERB développer par_pas
, PUNCT ,
qu' PRON qu'
on PRON on
peut VERB pouvoir ind_pre
ré-écrire VERB réécrire inf
: PUNCT :
Que PRON que
se PRON se
passe VERB passer ind_pre
-t PRON -t
-il PRON il
pour ADP pour
n AUX n
plus ADV plus
grand ADJ grand
? PUNCT ?
On PRON on
reconnaît VERB reconnaître ind_pre
l' DET le
expression NOUN expression
: PUNCT :
Soit VERB être sub_pre
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
soit VERB être sub_pre
( PUNCT (
k NOUN k
, PUNCT ,
) PUNCT )
1 NUM 1
, PUNCT ,
n NOUN n
, PUNCT ,
on PRON on
note VERB noter ind_pre
a VERB avoir ind_pre
Ak PROPN Ak
, PUNCT ,
la DET le
matrice NOUN matrice
de ADP de
Mn1 PRON mn1
( PUNCT (
K NOUN k
) PUNCT )
obtenue VERB obtenir par_pas
à ADP à
partir VERB partir inf
de ADP de
A NOUN a
en ADP en
supprimant VERB supprimer par_pre
sa DET son
k NOUN k
- NOUN -
ième ADJ ième
ligne NOUN ligne
et CCONJ et
sa DET son
-ième ADJ -ièm
colonne NOUN colonne
. PUNCT .
1 NUM 1
. PUNCT .
Le DET le
déterminant NOUN déterminant
de ADP de
Ak PRON ak
, PUNCT ,
s' PRON se
appelle VERB appeler ind_pre
mineur NOUN mineur
d' ADP de
indice NOUN indice
( PUNCT (
k NOUN k
, PUNCT ,
) PUNCT )
de ADP de
A X A
2 NUM 2
. PUNCT .
on PRON on
appelle VERB appeler ind_pre
cofacteur NOUN cofacteur
d' ADP de
indice NOUN indice
( PUNCT (
k NOUN k
, PUNCT ,
) PUNCT )
de ADP de
A ADP à
l' DET le
expression NOUN expression
: PUNCT :
Cofacteurk PROPN Cofacteurk
, PUNCT ,
( PUNCT (
A NOUN a
) PUNCT )
( PUNCT (
1)k VERB 1)k
det NOUN det
Ak PROPN Ak
, PUNCT ,
( PUNCT (
A NOUN a
) PUNCT )
3 NUM 3
. PUNCT .
on PRON on
appelle VERB appeler ind_pre
comatrice NOUN comatrice
de ADP de
A ADP à
la DET le
matrice NOUN matrice
de ADP de
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
définie VERB définir par_pas
par ADP par
: PUNCT :
Cofacteur1,1 ADJ cofacteur1,1
( PUNCT (
A NOUN a
) PUNCT )
Com(A PROPN Com(A
) PUNCT )
Cofacteuri PROPN Cofacteuri
, PUNCT ,
j PROPN j
( PUNCT (
A)(i NOUN a)(i
, PUNCT ,
j)1,n2 NOUN j)1,n2
Cofacteurn,1 ADV cofacteurn,1
( PUNCT (
A NOUN a
) PUNCT )
a. VERB avoir ind_pre
Attention NOUN attention
, PUNCT ,
cette DET ce
notation NOUN notation
peut VERB pouvoir ind_pre
également ADV également
désigner VERB désigner inf
le DET le
coefficient NOUN coefficient
en ADP en
( PUNCT (
k NOUN k
, PUNCT ,
) PUNCT )
de ADP de
A. PROPN A.
Cofacteurn,1 ADV cofacteurn,1
( PUNCT (
A NOUN a
) PUNCT )
Cofacteurn PROPN Cofacteurn
, PUNCT ,
n NOUN n
( PUNCT (
A NOUN a
) PUNCT )
ACom(A PROPN ACom(A
) PUNCT )
) PUNCT )
A NOUN a
Pour ADP pour
retrouver VERB retrouver inf
les DET le
signes NOUN signe
dans ADP dans
la DET le
comatrice NOUN comatrice
, PUNCT ,
il PRON il
suffit VERB suffire ind_pre
d' ADP de
alterner VERB alterner inf
les DET le
signes NOUN signe
lorsque SCONJ lorsque
qu' SCONJ que
on PRON on
se PRON se
déplace NOUN déplace
de ADP de
case NOUN case
en ADP en
case NOUN case
dans ADP dans
la DET le
comatrice NOUN comatrice
: PUNCT :
Proposition NOUN proposition
3.1 NUM 3.1
Développement NOUN développement
selon ADP selon
une DET un
ligne NOUN ligne
ou CCONJ ou
une DET un
colonne NOUN colonne
1 NUM 1
. PUNCT .
pour ADP pour
tout DET tout
i DET i
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
n NOUN n
, PUNCT ,
on PRON on
a VERB avoir ind_pre
le DET le
développement NOUN développement
suivant VERB suivre par_pre
la DET le
i PROPN i
- NOUN -
ème ADJ èm
ligne NOUN ligne
: PUNCT :
ai PROPN avoir
, PUNCT ,
j PROPN j
Cofacteuri PROPN Cofacteuri
, PUNCT ,
j PROPN j
( PUNCT (
A NOUN a
) PUNCT )
2 NUM 2
. PUNCT .
pour ADP pour
tout DET tout
j NOUN j
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
n NOUN n
, PUNCT ,
on PRON on
a VERB avoir ind_pre
le DET le
développement NOUN développement
suivant VERB suivre par_pre
la DET le
j NOUN j
- NOUN -
ième ADJ ième
colonne NOUN colonne
: PUNCT :
ai PROPN avoir
, PUNCT ,
j PROPN j
Cofacteuri PROPN Cofacteuri
, PUNCT ,
j PROPN j
( PUNCT (
A NOUN a
) PUNCT )
Démonstration NOUN démonstration
Notons VERB noter imper
A1 PROPN A1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
An VERB an
les DET le
vecteurs NOUN vecteur
colonnes ADJ colonne
de ADP de
A NOUN a
et CCONJ et
C NOUN c
( PUNCT (
C1 NOUN c1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Cn NOUN cn
) PUNCT )
la DET le
base NOUN base
canonique ADJ canonique
de ADP de
Mn,1 PROPN Mn,1
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
Soit VERB être sub_pre
j PRON j
1 NUM 1
, PUNCT ,
n. NOUN n.
Comme SCONJ comme
le DET le
déterminant NOUN déterminant
est VERB être ind_pre
une DET un
forme NOUN forme
n ADJ n
- ADJ -
linéaire ADJ linéaire
par ADP par
rapport NOUN rapport
aux ADP à
colonnes NOUN colonne
: PUNCT :
En ADP en
échangeant VERB échanger par_pre
la DET le
j NOUN j
- NOUN -
ième ADJ ième
colonne NOUN colonne
avec ADP avec
la DET le
j NOUN j
1-ième NUM 1-ième
, PUNCT ,
puis CCONJ puis
la DET le
j NOUN j
1-ième VERB 1-ième
avec ADP avec
la DET le
j NOUN j
1-ième VERB 1-ième
jusqu' ADP jusque
à ADP à
ce PRON ce
que SCONJ que
la DET le
première ADJ premier
colonne NOUN colonne
soit VERB être sub_pre
Ci ADJ ci
, PUNCT ,
puisqu' SCONJ puisque
il PRON il
y PRON y
a VERB avoir ind_pre
au ADP à
total NOUN total
j NOUN j
1 NUM 1
échanges NOUN échange
: PUNCT :
En ADP en
échangeant VERB échanger par_pre
la DET le
i VERB i
- NOUN -
ème ADJ èm
ligne NOUN ligne
avec ADP avec
la DET le
i PROPN i
1-ième NUM 1-ième
, PUNCT ,
puis CCONJ puis
la DET le
i PROPN i
1-ième VERB 1-ième
avec ADP avec
la DET le
i PROPN i
1-ième VERB 1-ième
jusqu' ADP jusque
à ADP à
ce PRON ce
que SCONJ que
la DET le
première ADJ premier
ligne NOUN ligne
soit VERB être sub_pre
1 DET 1
0 DET 0
0 NUM 0
, PUNCT ,
puisqu' SCONJ puisque
il PRON il
y PRON y
a VERB avoir ind_pre
au ADP à
total NOUN total
i1 NOUN i1
échanges NOUN échange
, PUNCT ,
on PRON on
a VERB avoir ind_pre
par ADP par
la DET le
formule NOUN formule
du ADP de
déterminant NOUN déterminant
d' ADP de
une DET un
matrice NOUN matrice
- NOUN -
blocs NOUN bloc
( PUNCT (
1)ij PROPN 1)ij
ai PROPN avoir
, PUNCT ,
j PROPN j
det(1 ADJ det(1
) PUNCT )
det PRON det
Ai PROPN Ai
, PUNCT ,
j PROPN j
ai PROPN avoir
, PUNCT ,
j PROPN j
Cofacteuri PROPN Cofacteuri
, PUNCT ,
j PROPN j
( PUNCT (
A NOUN a
) PUNCT )
La DET le
formule NOUN formule
du ADP de
développement NOUN développement
selon ADP selon
une DET un
colonne NOUN colonne
se PRON se
démontre VERB démontrer ind_pre
de ADP de
la DET le
même ADJ même
façon NOUN façon
( PUNCT (
ou CCONJ ou
en ADP en
utilisant VERB utiliser par_pre
la DET le
transposée NOUN transposée
) PUNCT )
. PUNCT .
Les DET le
formules NOUN formule
de ADP de
développements NOUN développement
selon ADP selon
une DET un
ligne NOUN ligne
ou CCONJ ou
une DET un
colonne NOUN colonne
sont VERB être ind_pre
très ADV très
utiles ADJ utile
théoriquement ADV théoriquement
mais CCONJ mais
inefficaces ADJ inefficace
en ADP en
général NOUN général
dès ADP dès
que SCONJ que
n DET n
5 NUM 5
. PUNCT .
En ADP en
effet NOUN effet
, PUNCT ,
ces DET ce
formules NOUN formule
ramènent VERB ramener ind_pre
le DET le
calcul NOUN calcul
d' ADP de
un DET un
déterminant NOUN déterminant
d' ADP de
une DET un
matrice NOUN matrice
d' ADP de
ordre NOUN ordre
n NOUN n
à ADP à
n AUX n
calculs NOUN calcul
de ADP de
déterminants NOUN déterminant
de ADP de
matrice NOUN matrice
d' ADP de
ordre NOUN ordre
n AUX n
1 NUM 1
. PUNCT .
En ADP en
itérant VERB itérer par_pre
, PUNCT ,
nous PRON nous
avons VERB avoir ind_pre
donc ADV donc
au ADP à
total NOUN total
n NOUN n
! PUNCT !
calculs NOUN calcul
à ADP à
faire VERB faire inf
. PUNCT .
Par ADP par
contre NOUN contre
, PUNCT ,
ces DET ce
formules NOUN formule
sont VERB être ind_pre
très ADV très
utiles ADJ utile
lorsque SCONJ lorsque
la DET le
matrice NOUN matrice
comporte VERB comporter ind_pre
plein ADJ plein
de ADP de
zéros NOUN zéro
( PUNCT (
matrice NOUN matrice
creuse ADJ creux
) PUNCT )
ou CCONJ ou
pour ADP pour
obtenir VERB obtenir inf
des DET un
formules NOUN formule
de ADP de
récurrence NOUN récurrence
. PUNCT .
Soit VERB être sub_pre
( PUNCT (
a VERB avoir ind_pre
, PUNCT ,
b NOUN b
, PUNCT ,
c NOUN c
) PUNCT )
K3 VERB k3
, PUNCT ,
calculer VERB calculer inf
: PUNCT :
On PRON on
développe VERB développer ind_pre
suivant VERB suivre par_pre
la DET le
première ADJ premier
colonne NOUN colonne
, PUNCT ,
puis CCONJ puis
le DET le
cofacteur NOUN cofacteur
d' ADP de
indice NOUN indice
( PUNCT (
2 NUM 2
, PUNCT ,
1 NUM 1
) PUNCT )
suivant VERB suivre par_pre
la DET le
première ADJ premier
ligne NOUN ligne
. PUNCT .
Il PRON il
vient VERB venir ind_pre
: PUNCT :
On PRON on
reconnaît VERB reconnaître ind_pre
une DET un
suite NOUN suite
récurrente NOUN récurrente
linéaire ADJ linéaire
d' ADP de
ordre NOUN ordre
2 NUM 2
à ADP à
coefficients NOUN coefficient
constants ADJ constant
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
obtenir VERB obtenir inf
son DET son
terme NOUN terme
général ADJ général
en ADP en
utilisant VERB utiliser par_pre
le DET le
fait NOUN fait
que SCONJ que
1 NUM 1
a VERB avoir ind_pre
et CCONJ et
2 NUM 2
a2 PROPN a2
b NOUN b
c. NOUN c.
On PRON on
considère VERB considérer ind_pre
la DET le
fonction NOUN fonction
: PUNCT :
C' PRON ce
est VERB être ind_pre
une DET un
fonction NOUN fonction
polynomiale ADJ polynomial
en ADP en
x. PUNCT x.
En ADP en
effectuant VERB effectuer par_pre
les DET le
opérations NOUN opération
élémentaires ADJ élémentaire
k ADP k
2 NUM 2
, PUNCT ,
n NOUN n
, PUNCT ,
Ck X Ck
Ck X Ck
C1 NOUN c1
, PUNCT ,
puis CCONJ puis
en ADP en
développant VERB développer par_pre
suivant VERB suivre par_pre
la DET le
première ADJ premier
colonne NOUN colonne
, PUNCT ,
on PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
cette DET ce
fonction NOUN fonction
polynomiale ADJ polynomial
est VERB être ind_pre
de ADP de
degré NOUN degré
inférieur ADJ inférieur
ou CCONJ ou
égale ADJ égal
à ADP à
1 PRON 1
. PUNCT .
Elle PRON lui
s' PRON se
écrit VERB écrire par_pas ind_pre
donc ADV donc
sous ADP sous
la DET le
forme NOUN forme
: PUNCT :
x NOUN x
. PUNCT .
Pour ADP pour
x NOUN x
a VERB avoir ind_pre
, PUNCT ,
le DET le
déterminant NOUN déterminant
vaut VERB valoir ind_pre
Pour ADP pour
x ADP x
b NOUN b
, PUNCT ,
le DET le
déterminant NOUN déterminant
vaut VERB valoir ind_pre
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
alors ADV alors
, PUNCT ,
puis CCONJ puis
la DET le
valeur NOUN valeur
du ADP de
déterminant NOUN déterminant
en ADP en
évaluant VERB évaluer par_pre
en ADP en
x ADP x
0 NUM 0
. PUNCT .
Proposition NOUN proposition
3.2 NUM 3.2
Déterminant NOUN déterminant
de ADP de
Vandermonde PROPN Vandermonde
Démonstration NOUN démonstration
3 NUM 3
. PUNCT .
Par ADP par
une DET un
récurrence NOUN récurrence
sur ADP sur
n AUX n
on PRON on
obtient VERB obtenir ind_pre
: PUNCT :
4 NUM 4
. PUNCT .
La DET le
matrice NOUN matrice
V ADJ v
( PUNCT (
a1 NOUN a1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
an NOUN an
) PUNCT )
est VERB être ind_pre
inversible ADJ inversible
si SCONJ si
et CCONJ et
seulement ADV seulement
si SCONJ si
det(V ADJ det(v
( PUNCT (
a1 NOUN a1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
an NOUN an
) PUNCT )
) PUNCT )
6 NUM 6
0 NUM 0
si SCONJ si
et CCONJ et
seulement ADV seulement
si SCONJ si
les DET le
ai VERB avoir ind_pre
sont VERB être ind_pre
tous ADJ tout
différents ADJ différent
. PUNCT .
Théorème NOUN théorème
3.2 NUM 3.2
Propriété NOUN propriété
de ADP de
la DET le
comatrice NOUN comatrice
Soit VERB être sub_pre
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
alors ADV alors
: PUNCT :
En ADP en
particulier ADJ particulier
, PUNCT ,
si SCONJ si
A NOUN a
est VERB être ind_pre
inversible ADJ inversible
: PUNCT :
Démonstration NOUN démonstration
Pour ADP pour
i DET i
j NOUN j
, PUNCT ,
le DET le
coefficient NOUN coefficient
en ADP en
( PUNCT (
i NOUN i
, PUNCT ,
i X i
) PUNCT )
de ADP de
A X A
t PROPN t
Com(A PROPN Com(A
) PUNCT )
vaut VERB valoir ind_pre
, PUNCT ,
en ADP en
utilisant VERB utiliser par_pre
la DET le
formule NOUN formule
du ADP de
développement NOUN développement
suivant VERB suivre par_pre
la DET le
i PROPN i
- NOUN -
ième ADJ ième
ligne NOUN ligne
: PUNCT :
ai PROPN avoir
, PUNCT ,
k NUM k
Cofacteuri PROPN Cofacteuri
, PUNCT ,
k NOUN k
( PUNCT (
A NOUN a
) PUNCT )
det NOUN det
A ADP à
Pour ADP pour
i ADP i
6 NUM 6
j NOUN j
, PUNCT ,
posons VERB poser ind_pre
B NOUN b
la DET le
matrice NOUN matrice
obtenue VERB obtenir par_pas
à ADP à
partir VERB partir inf
de ADP de
A NOUN a
en ADP en
remplaçant VERB remplacer par_pre
la DET le
j NOUN j
- NOUN -
ième ADJ ième
ligne NOUN ligne
par ADP par
la DET le
i PROPN i
- NOUN -
ème ADJ èm
ligne NOUN ligne
de ADP de
A. PROPN A.
Puisque PRON puisque
B NOUN b
a VERB avoir ind_pre
deux NUM deux
lignes NOUN ligne
égales ADJ égal
, PUNCT ,
det NOUN det
B NOUN b
0 NUM 0
. PUNCT .
De ADP de
plus ADV plus
, PUNCT ,
pour ADP pour
tout ADV tout
k NOUN k
1 NUM 1
, PUNCT ,
n NOUN n
, PUNCT ,
Aj PROPN Aj
, PUNCT ,
k NOUN k
Bj PROPN Bj
, PUNCT ,
k NOUN k
. PUNCT .
Le DET le
coefficient NOUN coefficient
en ADP en
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
de ADP de
A X A
t PROPN t
Com(A PROPN Com(A
) PUNCT )
vaut VERB valoir ind_pre
ai PROPN avoir
, PUNCT ,
k X k
Cofacteurj PROPN Cofacteurj
, PUNCT ,
k NOUN k
( PUNCT (
A NOUN a
) PUNCT )
ai PROPN avoir
, PUNCT ,
k NUM k
Cofacteurk PROPN Cofacteurk
, PUNCT ,
j PROPN j
( PUNCT (
B NOUN b
) PUNCT )
det X det
B NOUN b
0 NUM 0
Finalement ADV finalement
, PUNCT ,
A X A
t PROPN t
Com(A PROPN Com(A
) PUNCT )
det(A).In PROPN det(A).In
. PUNCT .
La DET le
relation NOUN relation
t NOUN t
Com(A PROPN Com(A
) PUNCT )
A ADP à
det(A).In ADJ det(a).in
se PRON se
démontre VERB démontrer ind_pre
exactement ADV exactement
de ADP de
la DET le
même ADJ même
manière NOUN manière
. PUNCT .
Si SCONJ si
A NOUN a
est VERB être ind_pre
inversible ADJ inversible
, PUNCT ,
en ADP en
multipliant VERB multiplier par_pre
par ADP par
A1 PROPN A1
: PUNCT :
Com(A PROPN Com(A
) PUNCT )
det(A).A1 VERB det(a).a1
et CCONJ et
comme ADP comme
det NOUN det
A ADP à
6 DET 6
0 NUM 0
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
le DET le
résultat NOUN résultat
. PUNCT .
Cette DET ce
formule NOUN formule
est VERB être ind_pre
inutile ADJ inutile
pour ADP pour
calculer VERB calculer inf
un DET un
inverse NOUN inverse
! PUNCT !
En ADP en
effet NOUN effet
, PUNCT ,
elle PRON lui
mène VERB mener ind_pre
à ADP à
des DET un
calculs NOUN calcul
trop ADV trop
Pour ADP pour
calculer VERB calculer inf
l' DET le
inverse NOUN inverse
d' ADP de
une DET un
matrice NOUN matrice
A NOUN a
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
par ADP par
exemple NOUN exemple
utiliser VERB utiliser inf
la DET le
méthode NOUN méthode
du ADP de
pivot NOUN pivot
de ADP de
Gauss NOUN gauss
sur ADP sur
la DET le
matrice NOUN matrice
augmentée VERB augmenter par_pas
A ADP à
In X In
( PUNCT (
voir VERB voir inf
la DET le
partie NOUN partie
sur ADP sur
les DET le
systèmes NOUN système
linéaires ADJ linéaire
du ADP de
chapitre NOUN chapitre
précédent ADJ précédent
) PUNCT )
, PUNCT ,
ou CCONJ ou
résoudre VERB résoudre inf
, PUNCT ,
toujours ADV toujours
avec ADP avec
la DET le
méthode NOUN méthode
du ADP de
pivot NOUN pivot
de ADP de
Gauss PROPN Gauss
, PUNCT ,
un DET un
système NOUN système
générique ADJ générique
A ADP à
X NOUN x
Y NOUN y
, PUNCT ,
où PRON où
X NOUN x
et CCONJ et
Y NOUN y
sont VERB être ind_pre
dans ADP dans
Mn,1 PROPN Mn,1
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
ce PRON ce
qui PRON qui
donne VERB donner ind_pre
X NOUN x
A1 PROPN A1
Y NOUN y
. PUNCT .
Mais CCONJ mais
cette DET ce
formule NOUN formule
a VERB avoir ind_pre
un DET un
intérêt NOUN intérêt
théorique ADJ théorique
. PUNCT .
Si SCONJ si
on PRON on
note NOUN note
A1 PUNCT a1
i ADJ i
, PUNCT ,
j PROPN j
( PUNCT (
i NOUN i
, PUNCT ,
j)1,n2 NOUN j)1,n2
, PUNCT ,
alors ADV alors
l' DET le
application NOUN application
: PUNCT :
est VERB être ind_pre
de ADP de
classe NOUN classe
C NOUN c
( PUNCT (
en ADP en
particulier ADJ particulier
continue VERB continuer ind_pre
) PUNCT )
, PUNCT ,
donc ADV donc
une DET un
petite ADJ petit
variation NOUN variation
sur ADP sur
les DET le
coefficients NOUN coefficient
de ADP de
A VERB avoir ind_pre
provoque VERB provoquer ind_pre
une DET un
petite ADJ petit
variation NOUN variation
sur ADP sur
les DET le
coefficients NOUN coefficient
de ADP de
A1 PROPN A1
: PUNCT :
on PRON on
peut VERB pouvoir ind_pre
donc ADV donc
faire VERB faire inf
un DET un
calcul NOUN calcul
approché VERB approcher par_pas
de ADP de
A1 PROPN A1
! PUNCT !
Faisons VERB faire ind_pre
quelques DET quelque
calculs NOUN calcul
en ADP en
Wxmaxima PROPN Wxmaxima
: PUNCT :
Dans ADP dans
Rn NOUN rn
, PUNCT ,
nous PRON nous
avons VERB avoir ind_pre
une DET un
base NOUN base
de ADP de
référence NOUN référence
: PUNCT :
la DET le
base NOUN base
canonique ADJ canonique
Cn PRON cn
. PUNCT .
Soit VERB être sub_pre
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en ADP en
) PUNCT )
une DET un
autre ADJ autre
base NOUN base
, PUNCT ,
alors ADV alors
: PUNCT :
Lorsque SCONJ lorsque
ce DET ce
déterminant ADJ déterminant
est VERB être ind_pre
positif ADJ positif
, PUNCT ,
on PRON on
dit VERB dire ind_pre
que SCONJ que
la DET le
base NOUN base
E NOUN e
est VERB être ind_pre
directe ADJ direct
. PUNCT .
Lorsqu' SCONJ lorsque
il PRON il
est VERB être ind_pre
négatif ADJ négatif
, PUNCT ,
on PRON on
dit VERB dire ind_pre
qu' SCONJ que
elle PRON lui
est VERB être ind_pre
indirecte ADJ indirect
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
alors ADV alors
interpréter VERB interpréter inf
le DET le
déterminant NOUN déterminant
de ADP de
la DET le
manière NOUN manière
suivante ADJ suivant
: PUNCT :
v NOUN v
deux NUM deux
vecteurs NOUN vecteur
de ADP de
R2 PROPN R2
, PUNCT ,
alors ADV alors
: PUNCT :
où PRON où
( PUNCT (
) PUNCT )
désigne VERB désigner ind_pre
l' DET le
aire NOUN aire
de ADP de
, PUNCT ,
le DET le
parallélogramme NOUN parallélogramme
construit VERB construire par_pas ind_pre
sur ADP sur
v NOUN v
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
alors ADV alors
donner VERB donner inf
un DET un
sens NOUN sens
à ADP à
une DET un
aire NOUN aire
orientée VERB orienter par_pas
en ADP en
considérant VERB considérer par_pre
le DET le
déterminant NOUN déterminant
sans ADP sans
la DET le
valeur NOUN valeur
absolue ADJ absolu
. PUNCT .
w NOUN w
trois NUM trois
vecteurs NOUN vecteur
de ADP de
R3 PROPN R3
, PUNCT ,
alors ADV alors
: PUNCT :
où PRON où
( PUNCT (
) PUNCT )
désigne VERB désigner ind_pre
le DET le
volume NOUN volume
de ADP de
, PUNCT ,
le DET le
parallélépipède NOUN parallélépipède
construit VERB construire par_pas ind_pre
sur ADP sur
On PRON on
avait VERB avoir
trouvé VERB trouver plu_par
une DET un
autre ADJ autre
formule NOUN formule
( PUNCT (
qui PRON qui
est VERB être ind_pre
la DET le
même ADV même
) PUNCT )
car CCONJ car
: PUNCT :
Plus ADV plus
généralement ADV généralement
, PUNCT ,
si SCONJ si
E NOUN e
est VERB être ind_pre
un DET un
R NOUN r
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
si SCONJ si
E NOUN e
et CCONJ et
E NOUN e
0 NUM 0
deux NUM deux
bases NOUN base
de ADP de
E NOUN e
, PUNCT ,
on PRON on
dit VERB dire ind_pre
que SCONJ que
E NOUN e
0 NUM 0
a VERB avoir ind_pre
la DET le
même ADJ même
orientation NOUN orientation
que SCONJ que
E NOUN e
si SCONJ si
detE VERB dete
( PUNCT (
E NOUN e
0 NUM 0
) PUNCT )
0 NUM 0
. PUNCT .
On PRON on
démontre VERB démontrer ind_pre
alors ADV alors
que SCONJ que
la DET le
relation NOUN relation
avoir VERB avoir inf
la DET le
même ADJ même
orientation NOUN orientation
est VERB être ind_pre
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
sur ADP sur
l' DET le
ensemble NOUN ensemble
des ADP de
bases NOUN base
de ADP de
E. PROPN E.
En ADP en
fixant VERB fixer par_pre
une DET un
base NOUN base
E NOUN e
de ADP de
E NOUN e
, PUNCT ,
nous PRON nous
pouvons VERB pouvoir ind_pre
ainsi ADV ainsi
séparer VERB séparer inf
les DET le
bases NOUN base
de ADP de
E NOUN e
en ADP en
deux NUM deux
ensembles NOUN ensemble
( PUNCT (
les DET le
deux NUM deux
classes NOUN classe
d' ADP de
équivalences NOUN équivalence
) PUNCT )
: PUNCT :
celles PRON celui
qui PRON qui
ont VERB avoir ind_pre
la DET le
même ADJ même
orientation NOUN orientation
que SCONJ que
E NOUN e
et CCONJ et
celles PRON celui
qui PRON qui
ne ADV ne
ont VERB avoir ind_pre
pas ADV pas
la DET le
même ADJ même
orientation NOUN orientation
que SCONJ que
E NOUN e
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
alors ADV alors
décréter VERB décréter inf
arbitrairement ADV arbitrairement
qu' SCONJ que
une DET un
base NOUN base
E NOUN e
est VERB être ind_pre
une DET un
base NOUN base
directe ADJ direct
, PUNCT ,
on PRON on
dit VERB dire ind_pre
alors ADV alors
que SCONJ que
E NOUN e
est VERB être ind_pre
orienté VERB orienter par_pas
. PUNCT .
Toutes ADJ tout
les DET le
bases NOUN base
ayant VERB avoir par_pre
la DET le
même ADJ même
orientation NOUN orientation
que SCONJ que
E NOUN e
sont VERB être ind_pre
dites VERB dire par_pas ind_pre
directes ADJ direct
et CCONJ et
les DET le
autres ADJ autre
indirectes NOUN indirecte
. PUNCT .
Dans ADP dans
Rn NOUN rn
, PUNCT ,
il PRON il
est VERB être ind_pre
bien ADV bien
entendu VERB entendre par_pas
naturel ADJ naturel
de ADP de
décréter VERB décréter inf
que SCONJ que
la DET le
base NOUN base
canonique ADJ canonique
est VERB être ind_pre
directe ADJ direct
( PUNCT (
ce PRON ce
qui PRON qui
est VERB être ind_pre
cohérent ADV cohérent
avec ADP avec
la DET le
remarque NOUN remarque
précédente ADJ précédent
) PUNCT )
. PUNCT .
Retour NOUN retour
sur ADP sur
les DET le
systèmes NOUN système
linéaires ADJ linéaire
On PRON on
rappelle VERB rappeler ind_pre
qu' SCONJ que
un DET un
système NOUN système
linéaire ADJ linéaire
de ADP de
n AUX n
équations NOUN équation
à ADP à
n AUX n
inconnues ADJ inconnu
de ADP de
la DET le
forme NOUN forme
d' ADP de
inconnue NOUN inconnue
X NOUN x
Mn,1 NUM Mn,1
( PUNCT (
K NOUN k
) PUNCT )
avec ADP avec
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
et CCONJ et
B NOUN b
Mn,1 NUM Mn,1
( PUNCT (
K NOUN k
) PUNCT )
est VERB être ind_pre
dit VERB dire par_pas ind_pre
de ADP de
Cramer PROPN Cramer
lorsqu' SCONJ lorsque
il PRON il
y PRON y
a VERB avoir ind_pre
existence NOUN existence
et CCONJ et
unicité NOUN unicité
de ADP de
la DET le
solution NOUN solution
. PUNCT .
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
c' PRON ce
est VERB être ind_pre
un DET un
système NOUN système
de ADP de
Cramer PROPN Cramer
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
A NOUN a
est VERB être ind_pre
inversible ADJ inversible
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
Proposition NOUN proposition
3.3 NUM 3.3
Soit VERB être sub_pre
A ADP à
GLn PROPN GLn
( PUNCT (
K NOUN k
) PUNCT )
de ADP de
colonnes NOUN colonne
A1 NOUN a1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
An NOUN an
et CCONJ et
B NOUN b
Mn,1 NUM Mn,1
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
Alors ADV alors
l' DET le
unique ADJ unique
solution NOUN solution
du ADP de
système NOUN système
de ADP de
Cramer PROPN Cramer
est VERB être ind_pre
donnée VERB donner par_pas
par ADP par
Démonstration NOUN démonstration
donc ADV donc
pour ADP pour
tout ADV tout
k NOUN k
1 NUM 1
, PUNCT ,
n NOUN n
, PUNCT ,
Lorsque SCONJ lorsque
k NOUN k
6 NUM 6
j NOUN j
, PUNCT ,
le DET le
déterminant VERB déterminer par_pre
ci ADV ci
- ADV -
dessus PROPN dessus
est VERB être ind_pre
nul ADJ nul
puisque SCONJ puisque
deux NUM deux
colonnes NOUN colonne
sont VERB être ind_pre
égales ADJ égal
, PUNCT ,
donc ADV donc
: PUNCT :
ce PRON ce
qui PRON qui
donne VERB donner ind_pre
le DET le
résultat NOUN résultat
puisque SCONJ puisque
det NOUN det
A ADP à
6 DET 6
0 NOUN 0
. PUNCT .
Cette DET ce
proposition NOUN proposition
ne ADV ne
est VERB être ind_pre
pas ADV pas
une DET un
méthode NOUN méthode
pratique ADJ pratique
de ADP de
résolution NOUN résolution
( PUNCT (
il PRON il
est VERB être ind_pre
bien ADV bien
plus ADV plus
efficace ADJ efficace
d' ADP de
utiliser VERB utiliser inf
la DET le
méthode NOUN méthode
du ADP de
pivot NOUN pivot
de ADP de
Gauss PROPN Gauss
) PUNCT )
. PUNCT .
Elle PRON lui
a VERB avoir ind_pre
cependant ADV cependant
un DET un
intérêt NOUN intérêt
théorique ADJ théorique
, PUNCT ,
elle PRON lui
permet VERB permettre ind_pre
d' ADP de
obtenir VERB obtenir inf
que SCONJ que
la DET le
solution NOUN solution
X NOUN x
dépend VERB dépendre ind_pre
de ADP de
manière NOUN manière
continue VERB continuer ind_pre
( PUNCT (
et CCONJ et
même ADV même
C NOUN c
) PUNCT )
des DET un
coefficients NOUN coefficient
de ADP de
A NOUN a
et CCONJ et
B NOUN b
: PUNCT :
une DET un
petite ADJ petit
variation NOUN variation
sur ADP sur
les DET le
coefficients NOUN coefficient
de ADP de
A NOUN a
ou CCONJ ou
de ADP de
B NOUN b
provoque VERB provoquer ind_pre
une DET un
petite ADJ petit
variation NOUN variation
sur ADP sur
les DET le
coefficients NOUN coefficient
de ADP de
X NOUN x
: PUNCT :
on PRON on
peut VERB pouvoir ind_pre
donc ADV donc
faire VERB faire inf
un DET un
calcul NOUN calcul
approché VERB approcher par_pas
de ADP de
X NOUN x
! PUNCT !
Démontrer VERB démontrer inf
que SCONJ que
A NOUN a
est VERB être ind_pre
inversible ADJ inversible
et CCONJ et
que SCONJ que
: PUNCT :
3.1.2 ADJ 3.1.2
Soit VERB être sub_pre
V ADJ v
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
soit VERB être sub_pre
p1 NOUN p1
N ADJ n
, PUNCT ,
p2 NOUN p2
N ADJ n
, PUNCT ,
p2 VERB p2
n. NOUN n.
On PRON on
considère VERB considérer ind_pre
l' DET le
ensemble NOUN ensemble
des ADP de
formes NOUN forme
( PUNCT (
p1 NOUN p1
p2 NOUN p2
) PUNCT )
-linéaires NOUN -linéaire
vérifiant VERB vérifier par_pre
pour ADP pour
tout ADV tout
( PUNCT (
x1 NOUN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xp1 X xp1
p2 VERB p2
) PUNCT )
V ADJ v
p1 NOUN p1
p2 NOUN p2
, PUNCT ,
toute DET tout
1 NUM 1
Sp1 PRON sp1
et CCONJ et
toute DET tout
2 NUM 2
Sp2 PROPN Sp2
: PUNCT :
Quelle ADJ quell
est VERB être ind_pre
la DET le
dimension NOUN dimension
du ADP de
sous-espace NOUN sous-espace
vectoriel VERB vectoriel
des ADP de
formes NOUN forme
p NOUN p
- PUNCT -
linéaires ADJ linéaire
vérifiant VERB vérifier par_pre
cette DET ce
propriété NOUN propriété
? PUNCT ?
det(A ADJ det(a
B NOUN b
) PUNCT )
det(A)p PROPN det(A)p
det(B)n NOUN det(b)n
3.1.4 PRON 3.1.4
Démontrer VERB démontrer inf
que SCONJ que
le DET le
volume NOUN volume
d' ADP de
un DET un
tétraèdre NOUN tétraèdre
de ADP de
sommets NOUN sommet
A NOUN a
, PUNCT ,
B NOUN b
, PUNCT ,
C NOUN c
et CCONJ et
D NOUN d
, PUNCT ,
vaut VERB valoir ind_pre
: PUNCT :
det(AB VERB det(ab
, PUNCT ,
AC PROPN AC
, PUNCT ,
AD PROPN AD
) PUNCT )
3.1.5 NOUN 3.1.5
Calculer VERB calculer inf
les DET le
déterminants ADJ déterminant
suivants ADJ suivant
: PUNCT :
3.1.6 PRON 3.1.6
Soit VERB être sub_pre
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
On PRON on
suppose VERB supposer ind_pre
D NOUN d
inversible ADJ inversible
démontrer VERB démontrer inf
que SCONJ que
Démontrer VERB démontrer inf
par ADP par
un DET un
exemple NOUN exemple
que SCONJ que
ce PRON ce
ne ADV ne
est VERB être ind_pre
pas ADV pas
toujours ADV toujours
vrai ADJ vrai
si SCONJ si
D NOUN d
est VERB être ind_pre
non ADV non
inversible ADJ inversible
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
pour ADP pour
D NOUN d
quelconque ADJ quelconque
, PUNCT ,
( PUNCT (
c NOUN c
) PUNCT )
Calculer VERB calculer inf
, PUNCT ,
dans ADP dans
le DET le
cas NOUN cas
général ADJ général
det NOUN det
3.1.8 PUNCT 3.1.8
On PRON on
appelle VERB appeler ind_pre
décomposition NOUN décomposition
LU PROPN LU
d' ADP de
une DET un
matrice NOUN matrice
A ADP à
GLn PROPN GLn
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
la DET le
donnée NOUN donnée
de ADP de
deux NUM deux
matrices NOUN matrice
L ADJ l
et CCONJ et
U NOUN u
de ADP de
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
telles ADJ tel
que SCONJ que
: PUNCT :
L NOUN l
est VERB être ind_pre
triangulaire ADJ triangulaire
inférieure ADJ inférieur
( PUNCT (
lower PROPN lower
) PUNCT )
, PUNCT ,
avec ADP avec
des DET un
1 PRON 1
sur ADP sur
la DET le
diagonale NOUN diagonale
U NOUN u
est VERB être ind_pre
triangulaire ADJ triangulaire
supérieure ADJ supérieur
( PUNCT (
upper NOUN upper
) PUNCT )
. PUNCT .
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
si SCONJ si
une DET un
décomposition NOUN décomposition
LU ADP lu
existe PROPN exister
, PUNCT ,
alors ADV alors
elle PRON lui
est VERB être ind_pre
unique ADJ unique
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
A VERB avoir ind_pre
possède VERB posséder ind_pre
une DET un
décomposition NOUN décomposition
LU ADP lu
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
tous ADJ tout
ses DET son
mineurs NOUN mineur
principaux ADJ principal
m1 ADJ m1
, PUNCT ,
... PUNCT ...
mn NOUN minute
sont VERB être ind_pre
non ADV non
nuls ADJ nul
, PUNCT ,
définis VERB définir par_pas ind_pre
par ADP par
: PUNCT :
3.1.9 NUM 3.1.9
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
si SCONJ si
A NOUN a
, PUNCT ,
B NOUN b
, PUNCT ,
C NOUN c
et CCONJ et
D NOUN d
sont VERB être ind_pre
dans ADP dans
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
et CCONJ et
que SCONJ que
A ADP à
C NOUN c
C NOUN c
A NOUN a
, PUNCT ,
alors ADV alors
: PUNCT :
( PUNCT (
b NOUN b
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
c' PRON ce
est VERB être ind_pre
faux ADJ faux
, PUNCT ,
en ADP en
général NOUN général
, PUNCT ,
lorsqu' SCONJ lorsque
il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
plus ADV plus
commutation NOUN commutation
. PUNCT .
3.1.10 PROPN 3.1.10
Soit VERB être sub_pre
A ADP à
et CCONJ et
B NOUN b
dans ADP dans
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
3.1.11 NUM 3.1.11
Soit VERB être sub_pre
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
avec ADP avec
n AUX n
2 NUM 2
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
rang(A PROPN rang(A
) PUNCT )
n NOUN n
3.1.12 NOUN 3.1.12
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
rang NOUN rang
( PUNCT (
Com(A PROPN Com(A
) PUNCT )
) PUNCT )
n NOUN n
3.1.13 ADJ 3.1.13
Soit VERB être sub_pre
A NOUN a
et CCONJ et
B NOUN b
dans ADP dans
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
. PUNCT .
Résoudre VERB résoudre inf
les DET le
équations NOUN équation
suivantes ADJ suivant
d' ADP de
inconnues ADJ inconnu
X NOUN x
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
: PUNCT :
3.1.14 NUM 3.1.14
À ADP à
quelle(s DET quelle(s
) PUNCT )
condition(s PRON condition(s
) PUNCT )
, PUNCT ,
connaissant VERB connaître par_pre
les DET le
affixes NOUN affixe
des ADP de
milieux NOUN milieu
des ADP de
côtés NOUN côté
d' ADP de
un DET un
polygone NOUN polygone
fermé VERB fermer par_pas
à ADP à
n NUM ne
côtés NOUN côté
, PUNCT ,
existe VERB exister ind_pre
-t PRON -t
-il PRON il
un DET un
tel ADJ tel
polygone NOUN polygone
? PUNCT ?
Préciser VERB préciser inf
dans ADP dans
tous ADJ tout
les DET le
cas NOUN cas
le DET le
procédé NOUN procédé
de ADP de
construction NOUN construction
du ADP de
ou CCONJ ou
des ADP de
polygone(s PROPN polygone(s
) PUNCT )
solution(s PRON solution(s
) PUNCT )
. PUNCT .
Que PRON que
signifie VERB signifier ind_pre
géométriquement ADV géométriquement
la DET le
condition NOUN condition
de ADP de
compatibilité NOUN compatibilité
obtenue VERB obtenir par_pas
? PUNCT ?
3.1.15 PROPN 3.1.15
Déterminer VERB déterminer inf
les DET le
ensembles NOUN ensemble
de ADP de
quatre NUM quatre
points NOUN point
du ADP de
plan NOUN plan
tels ADJ tel
que SCONJ que
la DET le
somme NOUN somme
des ADP de
distances NOUN distance
d' ADP de
un DET un
point NOUN point
au ADP à
trois NUM trois
autres ADJ autre
est VERB être ind_pre
constante ADJ constant
. PUNCT .
Chapitre NOUN chapitre else
4 NUM 4
Réduction NOUN réduction
des ADP de
endomorphismes NOUN endomorphisme
Éléments NOUN élément
propres ADJ propre
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
On PRON on
dit VERB dire ind_pre
que SCONJ que
K NOUN k
est VERB être ind_pre
une DET un
valeur NOUN valeur
propre ADJ propre
de ADP de
u PROPN u
si SCONJ si
il PRON il
existe VERB exister ind_pre
x NUM x
E NOUN e
0E NUM 0E
tel ADJ tel
que SCONJ que
On PRON on
dit VERB dire ind_pre
alors ADV alors
que SCONJ que
x NOUN x
est VERB être ind_pre
un DET un
vecteur NOUN vecteur
propre ADJ propre
de ADP de
u ADJ u
associé VERB associer par_pas
à ADP à
. PUNCT .
L' DET le
ensemble NOUN ensemble
des ADP de
valeurs NOUN valeur
propres ADJ propre
de ADP de
u PRON u
s' PRON se
appelle VERB appeler ind_pre
, PUNCT ,
dans ADP dans
ce DET ce
cours NOUN cours
, PUNCT ,
le DET le
spectre NOUN spectre
de ADP de
u NOUN u
et CCONJ et
se PRON se
note VERB noter ind_pre
Sp(u PROPN Sp(u
) PUNCT )
. PUNCT .
Si SCONJ si
Sp(u PROPN Sp(u
) PUNCT )
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
espace NOUN espace
propre ADJ propre
de ADP de
u ADJ u
associé VERB associer par_pas
à ADP à
le DET le
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
noté VERB noter par_pas
Eu PROPN Eu
( PUNCT (
) PUNCT )
et CCONJ et
défini VERB définir par_pas
par ADP par
Par ADP par
définition NOUN définition
, PUNCT ,
un DET un
vecteur NOUN vecteur
propre ADJ propre
ne ADV ne
est VERB être ind_pre
jamais ADV jamais
nul ADJ nul
. PUNCT .
La DET le
restriction NOUN restriction
de ADP de
u PROPN u
à ADP à
un DET un
espace NOUN espace
propre ADJ propre
Eu PROPN Eu
( PUNCT (
) PUNCT )
est VERB être ind_pre
une DET un
homothétie NOUN homothétie
de ADP de
rapport NOUN rapport
. PUNCT .
De ADP de
même ADV même
pour ADP pour
une DET un
matrice NOUN matrice
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
valeur NOUN valeur
propre ADJ propre
et CCONJ et
vecteur NOUN vecteur
propre ADJ propre
de ADP de
A ADP à
tout DET tout
couple NOUN couple
Le DET le
spectre NOUN spectre
Sp(A PROPN Sp(A
) PUNCT )
de ADP de
A NOUN a
est VERB être ind_pre
l' DET le
ensemble NOUN ensemble
des ADP de
valeurs NOUN valeur
propres ADJ propre
de ADP de
A NOUN a
et CCONJ et
pour ADP pour
Sp(A PROPN Sp(A
) PUNCT )
, PUNCT ,
EA PROPN EA
( PUNCT (
) PUNCT )
Ker(A PROPN Ker(A
.In PROPN .In
) PUNCT )
est VERB être ind_pre
l' DET le
espace NOUN espace
propre ADJ propre
associé VERB associer par_pas
. PUNCT .
Si SCONJ si
A VERB avoir ind_pre
MatE PROPN MatE else
( PUNCT (
u NOUN u
) PUNCT )
est VERB être ind_pre
la DET le
matrice NOUN matrice
de ADP de
u PROPN u
dans ADP dans
une DET un
base NOUN base
E NOUN e
de ADP de
E NOUN e
( PUNCT (
en ADP en
dimension NOUN dimension
finie ADJ fini
) PUNCT )
, PUNCT ,
alors ADV alors
Sp(A PROPN Sp(A
) PUNCT )
Sp(u PROPN Sp(u
) PUNCT )
et CCONJ et
x NOUN x
est VERB être ind_pre
un DET un
vecteur NOUN vecteur
propre ADJ propre
de ADP de
u PROPN u
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
MatE PROPN MatE else
( PUNCT (
x NOUN x
) PUNCT )
est VERB être ind_pre
un DET un
vecteur NOUN vecteur
propre ADJ propre
de ADP de
A. PROPN A.
La DET le
recherche NOUN recherche
des ADP de
valeurs NOUN valeur
propres ADJ propre
et CCONJ et
vecteurs NOUN vecteur
propres ADJ propre
d' ADP de
un DET un
endomorphisme NOUN endomorphisme
u NOUN u
( PUNCT (
on PRON on
parle VERB parler ind_pre
d' ADP de
éléments NOUN élément
propres ADJ propre
) PUNCT )
revient VERB revenir ind_pre
à ADP à
résoudre VERB résoudre inf
un DET un
système NOUN système
linéaire ADJ linéaire
homogène ADJ homogène
: PUNCT :
On PRON on
utilise VERB utiliser ind_pre
donc ADV donc
les DET le
diverses ADJ divers
méthodes NOUN méthode
de ADP de
résolution NOUN résolution
des ADP de
systèmes NOUN système
linéaires ADJ linéaire
. PUNCT .
Par ADP par
exemple NOUN exemple
, PUNCT ,
la DET le
matrice NOUN matrice
: PUNCT :
ne ADV ne
possède VERB posséder ind_pre
qu' ADV qu'
une DET un
valeur NOUN valeur
propre ADJ propre
2 NUM 2
. PUNCT .
L' DET le
espace NOUN espace
propre ADJ propre
associé VERB associer par_pas
est VERB être ind_pre
de ADP de
dimension NOUN dimension
1 NUM 1
. PUNCT .
Comme SCONJ comme
la DET le
valeur NOUN valeur
propre ADJ propre
est VERB être ind_pre
différente ADJ différent
de ADP de
2 NUM 2
, PUNCT ,
le DET le
rang NOUN rang
est VERB être ind_pre
toujours ADV toujours
3 NUM 3
. PUNCT .
Il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
pas ADV pas
d' DET d'
autre ADJ autre
valeur NOUN valeur
propre ADJ propre
que SCONJ que
celles PRON celui
trouvées VERB trouver par_pas
. PUNCT .
Par ADP par
ailleurs ADV ailleurs
, PUNCT ,
comme SCONJ comme
nous PRON nous
avons VERB avoir ind_pre
travailler VERB travailler inf
sur ADP sur
les DET le
lignes NOUN ligne
uniquement ADV uniquement
, PUNCT ,
les DET le
vecteurs NOUN vecteur
propres ADJ propre
sont VERB être ind_pre
solutions NOUN solution
d' ADP de
un DET un
système NOUN système
triangulaire ADJ triangulaire
très ADV très
facile ADJ facile
à ADP à
résoudre VERB résoudre inf
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
parfois ADV parfois
trouver VERB trouver inf
des DET un
valeurs NOUN valeur
propres ADJ propre
et CCONJ et
les DET le
vecteurs NOUN vecteur
propres ADJ propre
directement ADV directement
à ADP à
partir VERB partir inf
de ADP de
la DET le
matrice NOUN matrice
, PUNCT ,
sans ADP sans
résoudre VERB résoudre inf
un DET un
système NOUN système
linéaire ADJ linéaire
. PUNCT .
Par ADP par
exemple NOUN exemple
, PUNCT ,
si SCONJ si
n AUX n
2 NUM 2
et CCONJ et
si SCONJ si
a VERB avoir ind_pre
et CCONJ et
b NOUN b
sont VERB être ind_pre
dans ADP dans
K NOUN k
, PUNCT ,
a VERB avoir ind_pre
6 NUM 6
b NOUN b
, PUNCT ,
la DET le
matrice NOUN matrice
: PUNCT :
possède VERB posséder ind_pre
les DET le
valeurs NOUN valeur
propres ADJ propre
a VERB avoir ind_pre
( PUNCT (
n NOUN n
1 NUM 1
) PUNCT )
b NOUN b
et CCONJ et
a VERB avoir ind_pre
b NOUN b
( PUNCT (
on PRON on
verra VERB voir fut_sim
qu' SCONJ que
il PRON il
ne ADV ne
y PRON y
en PRON en
a VERB avoir ind_pre
pas ADV pas
d' DET d'
autre PRON autre
) PUNCT )
et CCONJ et
les DET le
espaces NOUN espace
propres ADJ propre
associés ADJ associer
sont VERB être ind_pre
: PUNCT :
Si SCONJ si
E NOUN e
est VERB être ind_pre
le DET le
R NOUN r
- NOUN -
espace PROPN espace
vectoriel VERB vectoriel
des ADP de
fonctions NOUN fonction
polynomiales ADJ polynomial
de ADP de
degré NOUN degré
inférieur ADJ inférieur
ou CCONJ ou
égal ADJ égal
à ADP à
2 NUM 2
n NOUN n
et CCONJ et
si SCONJ si
k AUX k
R NOUN r
, PUNCT ,
alors ADV alors
l' DET le
endomorphisme NOUN endomorphisme
u ADP u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
défini VERB définir par_pas
par ADP par
: PUNCT :
Il PRON il
faut VERB falloir ind_pre
parfois ADV parfois
faire VERB faire inf
preuve NOUN preuve
de ADP de
vision NOUN vision
géométrique ADJ géométrique
: PUNCT :
si SCONJ si
E NOUN e
est VERB être ind_pre
le DET le
R NOUN r
- NOUN -
espace PROPN espace
vectoriel VERB vectoriel
des ADP de
fonctions NOUN fonction
polynomiales ADJ polynomial
de ADP de
degré NOUN degré
inférieur ADJ inférieur
ou CCONJ ou
égal ADJ égal
à ADP à
n ADJ n
et CCONJ et
si SCONJ si
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
est VERB être ind_pre
défini VERB définir par_pas
par ADP par
: PUNCT :
alors ADV alors
alors ADV alors
les DET le
valeurs NOUN valeur
propres ADJ propre
de ADP de
u NOUN u
sont VERB être ind_pre
1 NUM 1
et CCONJ et
1 NUM 1
et CCONJ et
les DET le
vecteurs NOUN vecteur
propres ADJ propre
se PRON se
calculent VERB calculer ind_pre
facilement ADV facilement
dans ADP dans
une DET un
base NOUN base
adaptée VERB adapter par_pas
. PUNCT .
Polynôme NOUN polynôme
caractéristique ADJ caractéristique
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
et CCONJ et
soit VERB être sub_pre
K. NOUN k.
Les DET le
propositions NOUN proposition
suivantes ADJ suivant
sont VERB être ind_pre
équivalentes ADJ équivalent
: PUNCT :
3 NUM 3
. PUNCT .
u NOUN u
. PUNCT .
idE PRON ide
ne ADV ne
est VERB être ind_pre
pas ADV pas
injectif VERB injectif
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
comme ADP comme
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
u NOUN u
est VERB être ind_pre
ne ADV ne
est VERB être ind_pre
pas ADV pas
inversible ADJ inversible
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
0E NUM 0E
Sp(u PROPN Sp(u
) PUNCT )
. PUNCT .
Si SCONJ si
c' PRON ce
est VERB être ind_pre
le DET le
cas NOUN cas
, PUNCT ,
Ker NOUN ker
u PROPN u
Eu PROPN Eu
( PUNCT (
0 NUM 0
) PUNCT )
. PUNCT .
Démonstration NOUN démonstration
et CCONJ et
on PRON on
remarque VERB remarquer ind_pre
que SCONJ que
u NOUN u
est VERB être ind_pre
injectif VERB injectif
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
Ker(u VERB ker(u
. PUNCT .
idE NOUN ide
) PUNCT )
0E NUM 0E
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
u NOUN u
est VERB être ind_pre
inversible ADJ inversible
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
il PRON il
est VERB être ind_pre
injectif VERB injectif
, PUNCT ,
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
en ADP en
prenant VERB prendre par_pre
0 NUM 0
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Le DET le
polynôme NOUN polynôme
caractéristique ADJ caractéristique
de ADP de
u NOUN u
, PUNCT ,
noté VERB noter par_pas
u ADP u
, PUNCT ,
correspond VERB correspondre ind_pre
à ADP à
la DET le
fonction NOUN fonction
polynomiale ADJ polynomial
: PUNCT :
Afin ADV afin
d' ADP de
alléger VERB alléger inf
les DET le
notations NOUN notation
et CCONJ et
les DET le
calculs NOUN calcul
, PUNCT ,
on PRON on
note VERB noter ind_pre
le DET le
polynôme NOUN polynôme
caractéristique ADJ caractéristique
u NOUN u
sous ADP sous
la DET le
forme NOUN forme
d' ADP de
un DET un
polynôme ADJ polynôm
formel ADJ formel
( PUNCT (
voir VERB voir inf
le DET le
cours NOUN cours
sur ADP sur
les DET le
polynômes NOUN polynôme
) PUNCT )
: PUNCT :
au ADP à
lieu NOUN lieu
d' ADP de
une DET un
fonction NOUN fonction
polynomiale ADJ polynomial
, PUNCT ,
où PRON où
X NOUN x
est VERB être ind_pre
l' DET le
indéterminée NOUN indéterminée
, PUNCT ,
une DET un
variable NOUN variable
ayant VERB avoir par_pre
les DET le
mêmes ADJ même
règles NOUN règle
de ADP de
calcul NOUN calcul
que SCONJ que
celles PRON celui
d' ADP de
une DET un
variable NOUN variable
dans ADP dans
K. PROPN K.
Ainsi ADV ainsi
, PUNCT ,
une DET un
fonction NOUN fonction
polynomiale ADJ polynomial
sur ADP sur
K NOUN k
de ADP de
la DET le
forme NOUN forme
se PRON se
représente VERB représenter ind_pre
par ADP par
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
X NOUN x
correspond VERB correspondre ind_pre
à ADP à
la DET le
fonction NOUN fonction
polynomiale ADJ polynomial
x NOUN x
7 NUM 7
x. NOUN x.
On PRON on
note NOUN note
KX PROPN KX
le DET le
K NOUN k
- NOUN -
espace PROPN espace
vectoriel VERB vectoriel
des ADP de
polynômes NOUN polynôme
( PUNCT (
formels ADJ formel
) PUNCT )
à ADP à
coefficients NOUN coefficient
dans ADP dans
K NOUN k
et CCONJ et
Kn PROPN Kn
X NOUN x
le DET le
sousespace NOUN sousespace
vectoriel NOUN vectoriel
de ADP de
KX PROPN KX
des ADP de
polynômes NOUN polynôme
de ADP de
degré NOUN degré
inférieur ADJ inférieur
ou CCONJ ou
égal ADJ égal
à ADP à
n. NOUN n.
On PRON on
définit VERB définir ind_pre
de ADP de
la DET le
même ADJ même
manière NOUN manière
le DET le
polynôme NOUN polynôme
caractéristique ADJ caractéristique
A NOUN a
det(A ADJ det(a
X.In PROPN X.In
) PUNCT )
d' ADP de
une DET un
matrice NOUN matrice
carrée ADJ carré
A NOUN a
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
. PUNCT .
Si SCONJ si
A VERB avoir ind_pre
est VERB être ind_pre
la DET le
matrice NOUN matrice
de ADP de
u PROPN u
dans ADP dans
une DET un
base NOUN base
de ADP de
E NOUN e
, PUNCT ,
alors ADV alors
A NOUN a
u NOUN u
. PUNCT .
Deux NUM Deux
matrices NOUN matrice
semblables ADJ semblable
ont VERB avoir ind_pre
même ADV même
polynôme NOUN polynôme
caractéristique ADJ caractéristique
. PUNCT .
La DET le
réciproque NOUN réciproque
est VERB être ind_pre
fausse ADJ faux
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n AUX n
1 NUM 1
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Alors ADV alors
u PRON u
est VERB être ind_pre
de ADP de
degré NOUN degré
n. NOUN n.
De ADP de
plus ADV plus
, PUNCT ,
si SCONJ si
n AUX n
2 NUM 2
, PUNCT ,
alors ADV alors
: PUNCT :
Démonstration NOUN démonstration
Si SCONJ si
n AUX n
1 NUM 1
, PUNCT ,
c' PRON ce
est VERB être ind_pre
évident ADJ évident
. PUNCT .
Supposons VERB supposer ind_pre
n AUX n
2 NUM 2
. PUNCT .
Soit VERB être sub_pre
A VERB avoir ind_pre
ai NOUN ai
, PUNCT ,
j PROPN j
( PUNCT (
i X i
, PUNCT ,
j)1,n2 NOUN j)1,n2
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
la DET le
matrice NOUN matrice
de ADP de
u PROPN u
dans ADP dans
une DET un
base NOUN base
quelconque ADJ quelconque
de ADP de
E NOUN e
( PUNCT (
donc ADV donc
u ADP u
A NOUN a
) PUNCT )
. PUNCT .
Posons VERB poser ind_pre
: PUNCT :
ai PROPN avoir
, PUNCT ,
j PRON j
si X si
i ADP i
6 NUM 6
j NOUN j
trace NOUN trace
Atrace NOUN atrace
u ADP u
puisque SCONJ puisque
( PUNCT (
k),k NOUN k),k
a(k),k PRON a(k),k
et CCONJ et
( PUNCT (
) PUNCT )
, PUNCT ,
a VERB avoir ind_pre
( PUNCT (
) PUNCT )
, PUNCT ,
ne ADV ne
dépendent VERB dépendre ind_pre
pas ADV pas
de ADP de
X. NOUN x.
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
le DET le
résultat NOUN résultat
, PUNCT ,
en ADP en
remarquant VERB remarquer par_pre
que SCONJ que
le DET le
terme NOUN terme
constant ADJ constant
est VERB être ind_pre
u PROPN u
( PUNCT (
0 NUM 0
) PUNCT )
det(u NOUN det(u
0 NUM 0
. PUNCT .
idE NOUN ide
) PUNCT )
det ADV det
u. VERB u.
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
, PUNCT ,
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
et CCONJ et
soit VERB être sub_pre
K. PROPN K.
Alors ADV alors
est VERB être ind_pre
une DET un
valeur NOUN valeur
propre ADJ propre
de ADP de
u PROPN u
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
u PROPN u
( PUNCT (
) PUNCT )
0 NUM 0
. PUNCT .
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
: PUNCT :
Démonstration NOUN démonstration
Immédiat PROPN Immédiat
en ADP en
utilisant VERB utiliser par_pre
la DET le
propriété NOUN propriété
4.1 NUM 4.1
, PUNCT ,
page NOUN page
précédente ADJ précédent
et CCONJ et
en ADP en
remarquant VERB remarquer par_pre
que SCONJ que
u DET u
. PUNCT .
idE PRON ide
ne ADV ne
est VERB être ind_pre
pas ADV pas
injectif NOUN injectif
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
u PROPN u
( PUNCT (
) PUNCT )
det(u NOUN det(u
. PUNCT .
idE NOUN ide
) PUNCT )
0 NUM 0
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
n AUX n
1 NUM 1
, PUNCT ,
alors ADV alors
u PRON u
a VERB avoir ind_pre
au ADP à
plus ADV plus
n NOUN n
valeurs NOUN valeur
propres ADJ propre
( PUNCT (
car CCONJ car
u NOUN u
est VERB être ind_pre
un DET un
polynôme NOUN polynôme
de ADP de
degré NOUN degré
n NOUN n
, PUNCT ,
il PRON il
admet VERB admettre ind_pre
donc ADV donc
au ADP à
plus ADV plus
n NOUN n
racines ADJ racine
) PUNCT )
. PUNCT .
Si SCONJ si
K NOUN k
C NOUN c
, PUNCT ,
alors ADV alors
u PRON u
a VERB avoir ind_pre
au ADP à
moins ADV moins
une DET un
valeur NOUN valeur
propre ADJ propre
car CCONJ car
sur ADP sur
C NOUN c
les DET le
polynômes NOUN polynôme
non ADV non
constants ADJ constant
admettent VERB admettre ind_pre
toujours ADV toujours
une DET un
racine NOUN racine
( PUNCT (
c' PRON ce
est VERB être ind_pre
faux ADJ faux
pour ADP pour
K NOUN k
R NOUN r
) PUNCT )
. PUNCT .
Il PRON il
pourrait VERB pouvoir con_pre
être VERB être inf
tentant VERB tenter par_pre
de ADP de
passer VERB passer inf
systématiquement ADV systématiquement
par ADP par
le DET le
polynôme NOUN polynôme
caractéristique ADJ caractéristique
pour ADP pour
trouver VERB trouver inf
les DET le
éléments NOUN élément
propres ADJ propre
de ADP de
u PROPN u
, PUNCT ,
ce PRON ce
serait VERB être con_pre
pourtant ADV pourtant
une DET un
grosse ADJ gros
erreur NOUN erreur
, PUNCT ,
car CCONJ car
si SCONJ si
il PRON il
nous PRON nous
permet VERB permettre ind_pre
de ADP de
trouver VERB trouver inf
les DET le
valeurs NOUN valeur
propres ADJ propre
de ADP de
u NOUN u
, PUNCT ,
il PRON il
ne ADV ne
nous PRON nous
donne VERB donner ind_pre
aucune DET aucun
information NOUN information
sur ADP sur
les DET le
espaces NOUN espace
propres ADJ propre
. PUNCT .
Ainsi ADV ainsi
: PUNCT :
i1 PROPN i1
Ei PROPN Ei
, PUNCT ,
i1 NOUN i1
Mk PROPN Mk
( PUNCT (
K NOUN k
) PUNCT )
sont VERB être ind_pre
telles ADJ tel
que SCONJ que
toutes ADJ tout
les DET le
Ak NOUN ak
( PUNCT (
k NOUN k
1 NUM 1
, PUNCT ,
n NOUN n
) PUNCT )
ont VERB avoir ind_pre
même ADV même
polynôme NOUN polynôme
caractéristique ADJ caractéristique
alors ADV alors
que SCONJ que
les DET le
espaces NOUN espace
propres ADJ propre
associés ADJ associer
ont VERB avoir ind_pre
des DET un
dimensions NOUN dimension
allant VERB aller par_pre
de ADP de
1 PRON 1
à ADP à
n. NOUN n.
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
, PUNCT ,
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
et CCONJ et
soit VERB être sub_pre
Sp(u PROPN Sp(u
) PUNCT )
. PUNCT .
La DET le
multiplicité NOUN multiplicité
de ADP de
est VERB être ind_pre
la DET le
multiplicité NOUN multiplicité
a VERB avoir ind_pre
de ADP de
en ADP en
tant ADV tant
que SCONJ que
racine NOUN racine
du ADP de
polynôme NOUN polynôme
u NOUN u
. PUNCT .
On PRON on
note NOUN note
multu PROPN multu
( PUNCT (
) PUNCT )
la DET le
multiplicité NOUN multiplicité
de ADP de
Si SCONJ si
multu PROPN multu
( PUNCT (
) PUNCT )
1 NUM 1
on PRON on
parle VERB parler ind_pre
de ADP de
valeur NOUN valeur
propre ADJ propre
simple ADJ simple
. PUNCT .
a. VERB avoir ind_pre
Une DET un
racine NOUN racine
K NOUN k
de ADP de
P NOUN p
KX PROPN KX
non ADV non
nul ADJ nul
a VERB avoir ind_pre
pour ADP pour
multiplicité NOUN multiplicité
r ADP r
N ADJ n
si SCONJ si
P NOUN p
( PUNCT (
X NOUN x
) PUNCT )
r X r
Q NOUN q
avec ADP avec
Q NOUN q
KX PROPN KX
tel ADJ tel
que SCONJ que
Q NOUN q
( PUNCT (
) PUNCT )
6 NUM 6
0 NOUN 0
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Alors ADV alors
: PUNCT :
En ADP en
particulier ADJ particulier
, PUNCT ,
si SCONJ si
multu PROPN multu
( PUNCT (
) PUNCT )
1 NUM 1
( PUNCT (
valeur NOUN valeur
propre ADJ propre
simple ADJ simple
) PUNCT )
, PUNCT ,
alors ADV alors
dim ADV dim
Eu PROPN Eu
( PUNCT (
) PUNCT )
1 PRON 1
. PUNCT .
Démonstration NOUN démonstration
Soit VERB être sub_pre
Sp(u PROPN Sp(u
) PUNCT )
. PUNCT .
Par ADP par
définition NOUN définition
, PUNCT ,
il PRON il
existe VERB exister ind_pre
un DET un
vecteur NOUN vecteur
propre ADJ propre
associé VERB associer par_pas
à ADP à
( PUNCT (
donc ADV donc
non ADV non
nul ADJ nul
) PUNCT )
, PUNCT ,
d' ADP de
où PRON où
Eu PROPN Eu
( PUNCT (
) PUNCT )
6 NUM 6
0E NUM 0E
et CCONJ et
Posons VERB poser ind_pre
d ADP d
dim ADP dim
Eu PROPN Eu
( PUNCT (
) PUNCT )
. PUNCT .
Soit VERB être sub_pre
( PUNCT (
e1 NOUN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ed NOUN ed
) PUNCT )
une DET un
base NOUN base
de ADP de
Eu PROPN Eu
( PUNCT (
) PUNCT )
qu' PRON qu'
on PRON on
complète ADJ complet
en ADP en
une DET un
base NOUN base
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en ADP en
) PUNCT )
de ADP de
E NOUN e
( PUNCT (
avec ADP avec
n AUX n
dim ADP dim
E NOUN e
) PUNCT )
. PUNCT .
La DET le
restriction NOUN restriction
de ADP de
u PROPN u
à ADP à
Eu PROPN Eu
( PUNCT (
) PUNCT )
est VERB être ind_pre
une DET un
homothétie NOUN homothétie
de ADP de
rapport NOUN rapport
donc ADV donc
: PUNCT :
d' ADP de
où PRON où
d ADP d
multu PROPN multu
( PUNCT (
) PUNCT )
. PUNCT .
Diagonalisation PROPN Diagonalisation
Proposition NOUN proposition
4.1 NUM 4.1
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
et CCONJ et
soit VERB être sub_pre
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
k VERB k
des ADP de
valeurs NOUN valeur
propres ADJ propre
de ADP de
u ADP u
toutes ADJ tout
différentes DET différents
( PUNCT (
k NOUN k
2 NUM 2
) PUNCT )
. PUNCT .
Alors ADV alors
les DET le
espaces NOUN espace
propres ADJ propre
associés NOUN associé
Eu PROPN Eu
( PUNCT (
1 NUM 1
) PUNCT )
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Eu PROPN Eu
( PUNCT (
k NOUN k
) PUNCT )
sont VERB être ind_pre
en ADP en
somme NOUN somme
directe ADJ direct
. PUNCT .
Démonstration NOUN démonstration
Par ADP par
récurrence NOUN récurrence
sur ADP sur
k. NOUN k.
sont VERB être ind_pre
en ADP en
somme NOUN somme
directe ADJ direct
. PUNCT .
Soit VERB être sub_pre
k NOUN k
2 NUM 2
, PUNCT ,
n. PRON n.
Supposons VERB supposer ind_pre
le DET le
résultat NOUN résultat
vrai ADJ vrai
au ADP à
rang NOUN rang
k. NOUN k.
Prenons VERB prendre ind_pre
pour ADP pour
tout DET tout
j PRON j
1 NUM 1
, PUNCT ,
k NUM k
1 NUM 1
, PUNCT ,
xj NOUN xj
Eu PROPN Eu
( PUNCT (
j NOUN j
) PUNCT )
tel ADJ tel
que SCONJ que
( PUNCT (
écriture NOUN écriture
de ADP de
0E NUM 0E
) PUNCT )
: PUNCT :
D' ADP de
après ADP après
ces DET ce
deux NUM deux
égalités NOUN égalité
: PUNCT :
donc ADV donc
, PUNCT ,
par ADP par
hypothèse NOUN hypothèse
de ADP de
récurrence NOUN récurrence
, PUNCT ,
x1 NOUN x1
xk NOUN xk
0E NUM 0E
et CCONJ et
donc ADV donc
xk1 NOUN xk1
0E NUM 0E
. PUNCT .
Le DET le
résultat NOUN résultat
est VERB être ind_pre
donc ADV donc
vrai ADJ vrai
au ADP à
rang NOUN rang
k NOUN k
1 NUM 1
. PUNCT .
Par ADP par
principe NOUN principe
de ADP de
récurrence NOUN récurrence
, PUNCT ,
le DET le
résultat NOUN résultat
est VERB être ind_pre
vrai ADJ vrai
pour ADP pour
tout ADV tout
k NOUN k
2 NUM 2
, PUNCT ,
n. NOUN n.
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
On PRON on
dit VERB dire ind_pre
que SCONJ que
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
si SCONJ si
: PUNCT :
Comme ADP comme
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
alors ADV alors
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
E NOUN e
admet VERB admettre ind_pre
une DET un
base NOUN base
de ADP de
vecteurs NOUN vecteur
propres ADJ propre
de ADP de
u NOUN u
( PUNCT (
on PRON on
dit VERB dire ind_pre
alors ADV alors
que SCONJ que
u AUX u
se PRON se
diagonalise VERB diagonalise
dans ADP dans
cette DET ce
base NOUN base
) PUNCT )
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
est VERB être ind_pre
diagonalisable ADJ diagonalisable
, PUNCT ,
alors ADV alors
dans ADP dans
toute DET tout
base NOUN base
E NOUN e
de ADP de
E NOUN e
formé VERB former par_pas
de ADP de
vecteurs NOUN vecteur
propres ADJ propre
de ADP de
u NOUN u
, PUNCT ,
la DET le
matrice NOUN matrice
de ADP de
u NOUN u
est VERB être ind_pre
diagonale ADJ diagonal
et CCONJ et
ses DET son
éléments NOUN élément
sont VERB être ind_pre
les DET le
valeurs NOUN valeur
propres ADJ propre
1 PRON 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
k X k
qui PRON qui
apparaissent VERB apparaître ind_pre
avec ADP avec
leur DET leur
multiplicité NOUN multiplicité
: PUNCT :
multu PROPN multu
( PUNCT (
1 NUM 1
) PUNCT )
fois PRON fois
multu PROPN multu
( PUNCT (
2 NUM 2
) PUNCT )
fois NOUN fois
On PRON on
dit VERB dire ind_pre
qu' SCONJ que
une DET un
matrice NOUN matrice
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
est VERB être ind_pre
diagonalisable ADJ diagonalisable
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
son DET son
endomorphisme NOUN endomorphisme
canoniquement ADV canoniquement
associé VERB associer par_pas
l' DET le
est VERB être ind_pre
. PUNCT .
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
une DET un
matrice NOUN matrice
est VERB être ind_pre
diagonalisable ADJ diagonalisable
si SCONJ si
elle PRON lui
est VERB être ind_pre
semblable ADJ semblable
à ADP à
une DET un
matrice NOUN matrice
diagonale ADJ diagonal
. PUNCT .
Cependant ADV cependant
, PUNCT ,
pour ADP pour
une DET un
matrice NOUN matrice
, PUNCT ,
il PRON il
est VERB être ind_pre
fondamental ADJ fondamental
de ADP de
préciser VERB préciser inf
le DET le
corps NOUN corps
K NOUN k
dans ADP dans
lequel PRON lequel
on PRON on
travaille VERB travailler ind_pre
( PUNCT (
il PRON il
est VERB être ind_pre
possible ADJ possible
qu' SCONJ que
une DET un
matrice NOUN matrice
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
ne ADV ne
soit VERB être sub_pre
pas ADV pas
diagonalisable ADJ diagonalisable
mais CCONJ mais
qu' SCONJ que
elle PRON lui
soit VERB être sub_pre
diagonalisable ADJ diagonalisable
si SCONJ si
on PRON on
la PRON le
voit VERB voir ind_pre
comme ADP comme
une DET un
matrice NOUN matrice
de ADP de
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
) PUNCT )
. PUNCT .
Par ADP par
exemple NOUN exemple
, PUNCT ,
la DET le
matrice NOUN matrice
cos NOUN co
sin NOUN sin
est VERB être ind_pre
diagonalisable ADJ diagonalisable
dans ADP dans
M2 NOUN m2
( PUNCT (
C NOUN c
) PUNCT )
, PUNCT ,
mais CCONJ mais
pas ADV pas
dans ADP dans
M2 NOUN m2
( PUNCT (
R NOUN r
) PUNCT )
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Alors ADV alors
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
dim ADJ dim
Eu PROPN Eu
( PUNCT (
) PUNCT )
dim NOUN dim
E NOUN e
Démonstration NOUN démonstration
Le DET le
sens NOUN sens
direct ADJ direct
est VERB être ind_pre
immédiat ADJ immédiat
en ADP en
considérant VERB considérer par_pre
une DET un
base NOUN base
adaptée ADJ adapté
à ADP à
la DET le
décomposition NOUN décomposition
de ADP de
E NOUN e
en ADP en
somme NOUN somme
directe ADJ direct
d' ADP de
espaces NOUN espace
propres ADJ propre
de ADP de
u. VERB u.
Notons VERB noter imper
Sp(u PROPN Sp(u
) PUNCT )
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
k NUM k
et CCONJ et
supposons VERB supposer ind_pre
que SCONJ que
dim ADJ dim
Eu PROPN Eu
( PUNCT (
i NOUN i
) PUNCT )
dim NOUN dim
E NOUN e
Pour ADP pour
tout ADV tout
i NUM i
1 NUM 1
, PUNCT ,
k NOUN k
, PUNCT ,
soit VERB être sub_pre
Ei NOUN ei
une DET un
base NOUN base
de ADP de
Eu PROPN Eu
( PUNCT (
i NOUN i
) PUNCT )
. PUNCT .
Alors ADV alors
E NOUN e
( PUNCT (
E1 NOUN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Ek NOUN ek
) PUNCT )
est VERB être ind_pre
une DET un
famille NOUN famille
libre ADJ libre
( PUNCT (
car CCONJ car
les DET le
espaces NOUN espace
propres ADJ propre
sont VERB être ind_pre
en ADP en
somme NOUN somme
directe ADJ direct
, PUNCT ,
proposition NOUN proposition
4.1 NUM 4.1
, PUNCT ,
page NOUN page
195 NUM 195
) PUNCT )
qui PRON qui
a VERB avoir ind_pre
i1 NOUN i1
dim ADJ dim
Eu PROPN Eu
( PUNCT (
i NOUN i
) PUNCT )
dim NOUN dim
E NOUN e
éléments NOUN élément
par ADP par
hypothèse NOUN hypothèse
. PUNCT .
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
E NOUN e
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
formée VERB former par_pas
de ADP de
vecteurs NOUN vecteur
propres ADJ propre
de ADP de
u PROPN u
, PUNCT ,
donc ADV donc
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
. PUNCT .
Théorème NOUN théorème
4.1 NUM 4.1
Caractérisation NOUN caractérisation
des ADP de
endomorphismes NOUN endomorphisme
diagonalisables ADJ diagonalisable
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Alors ADV alors
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
u NOUN u
est VERB être ind_pre
scindé VERB scinder par_pas
et CCONJ et
pour ADP pour
tout DET tout
Sp(u PROPN Sp(u
) PUNCT )
, PUNCT ,
dim NOUN dim
Eu PROPN Eu
( PUNCT (
) PUNCT )
multu PROPN multu
( PUNCT (
) PUNCT )
Par ADP par
définition NOUN définition
, PUNCT ,
un DET un
polynôme NOUN polynôme
P NOUN p
KX PROPN KX
non ADV non
constant ADJ constant
est VERB être ind_pre
scindé VERB scinder par_pas
si SCONJ si
il PRON il
est VERB être ind_pre
de ADP de
la DET le
forme NOUN forme
avec ADP avec
a VERB avoir ind_pre
K NOUN k
et CCONJ et
, PUNCT ,
pour ADP pour
tout ADV tout
i NUM i
1 NUM 1
, PUNCT ,
k NOUN k
, PUNCT ,
i ADJ i
K NOUN k
Les DET le
i AUX i
ne ADV ne
sont VERB être ind_pre
pas ADV pas
nécessairement ADV nécessairement
tous ADJ tout
différents ADJ différent
. PUNCT .
Démonstration NOUN démonstration
Supposons VERB supposer ind_pre
que SCONJ que
u NOUN u
soit VERB être sub_pre
diagonalisable ADJ diagonalisable
. PUNCT .
Dans ADP dans
une DET un
base NOUN base
E NOUN e
de ADP de
E PROPN E
adaptée VERB adapter par_pas
à ADP à
la DET le
décomposition NOUN décomposition
la DET le
matrice NOUN matrice
A NOUN a
MatE PROPN MatE else
( PUNCT (
u NOUN u
) PUNCT )
de ADP de
u PROPN u
dans ADP dans
la DET le
base NOUN base
E NOUN e
est VERB être ind_pre
diagonale ADJ diagonal
: PUNCT :
On PRON on
a VERB avoir ind_pre
donc ADV donc
( PUNCT (
n NOUN n
dim ADP dim
E NOUN e
) PUNCT )
ce PRON ce
qui PRON qui
démontre VERB démontrer ind_pre
que SCONJ que
u NOUN u
est VERB être ind_pre
scindé VERB scinder par_pas
. PUNCT .
De ADP de
plus ADV plus
, PUNCT ,
il PRON il
est VERB être ind_pre
de ADP de
degré NOUN degré
n NOUN n
( PUNCT (
propriété NOUN propriété
4.2 NUM 4.2
, PUNCT ,
page NOUN page
194 NUM 194
) PUNCT )
donc ADV donc
multu PROPN multu
( PUNCT (
i NOUN i
) PUNCT )
Mais CCONJ mais
pour ADP pour
tout DET tout
i DET i
1 NUM 1
, PUNCT ,
k NOUN k
, PUNCT ,
1 NUM 1
di X di
multu PROPN multu
( PUNCT (
i NOUN i
) PUNCT )
( PUNCT (
propriété NOUN propriété
4.4 NUM 4.4
, PUNCT ,
page NOUN page
195 NUM 195
) PUNCT )
, PUNCT ,
ce PRON ce
qui PRON qui
implique VERB impliquer ind_pre
que SCONJ que
, PUNCT ,
pour ADP pour
tout ADV tout
Supposons VERB supposer ind_pre
que SCONJ que
u NOUN u
soit VERB être sub_pre
scindé VERB scinder par_pas
et CCONJ et
que SCONJ que
, PUNCT ,
pour ADP pour
tout ADV tout
i NUM i
1 NUM 1
, PUNCT ,
k NOUN k
, PUNCT ,
di X di
multu PROPN multu
( PUNCT (
i NOUN i
) PUNCT )
. PUNCT .
Puisque SCONJ puisque
les DET le
zéros NOUN zéro
de ADP de
u X u
sont VERB être ind_pre
les DET le
valeurs NOUN valeur
propres ADJ propre
de ADP de
u NOUN u
, PUNCT ,
on PRON on
a VERB avoir ind_pre
: PUNCT :
dj NOUN dj
n VERB n
dim ADP dim
E NOUN e
D' ADP de
après ADP après
la DET le
propriété NOUN propriété
4.5 NUM 4.5
, PUNCT ,
page NOUN page
précédente ADJ précédent
, PUNCT ,
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
. PUNCT .
Si SCONJ si
u AUX u
admet VERB admettre ind_pre
n AUX n
valeurs NOUN valeur
propres ADJ propre
toutes ADJ tout
différentes ADJ différent
( PUNCT (
n NOUN n
dim ADP dim
E NOUN e
) PUNCT )
, PUNCT ,
alors ADV alors
u PRON u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
car CCONJ car
dim ADJ dim
Eu PROPN Eu
( PUNCT (
) PUNCT )
multu PROPN multu
( PUNCT (
) PUNCT )
1 PRON 1
pour ADP pour
tout DET tout
Sp(u PROPN Sp(u
) PUNCT )
. PUNCT .
C' PRON ce
est VERB être ind_pre
le DET le
seul ADJ seul
cas NOUN cas
où PRON où
il PRON il
ne ADV ne
est VERB être ind_pre
pas ADV pas
nécessaire ADJ nécessaire
de ADP de
calculer VERB calculer inf
les DET le
dimensions NOUN dimension
des ADP de
espaces NOUN espace
propres ADJ propre
de ADP de
u PROPN u
, PUNCT ,
et CCONJ et
où PRON où
l' DET le
étude NOUN étude
du ADP de
polynôme NOUN polynôme
caractéristique ADJ caractéristique
u NOUN u
suffit NOUN suffit
pour ADP pour
démontrer VERB démontrer inf
que SCONJ que
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
. PUNCT .
On PRON on
retrouve VERB retrouver ind_pre
le DET le
fait NOUN fait
qu' SCONJ que
il PRON il
est VERB être ind_pre
indispensable ADJ indispensable
de ADP de
préciser VERB préciser inf
le DET le
corps NOUN corps
dans ADP dans
lequel PRON lequel
on PRON on
se PRON se
place VERB placer ind_pre
quand SCONJ quand
on PRON on
s' PRON se
intéresse VERB intéresser ind_pre
à ADP à
la DET le
diagonalisation NOUN diagonalisation
d' ADP de
une DET un
matrice NOUN matrice
: PUNCT :
sur ADP sur
C NOUN c
tous ADJ tout
les DET le
polynômes NOUN polynôme
non ADV non
constants ADJ constant
sont VERB être ind_pre
scindés VERB scinder par_pas
, PUNCT ,
ce PRON ce
qui PRON qui
est VERB être ind_pre
faux ADJ faux
sur ADP sur
R. NOUN r.
La DET le
matrice NOUN matrice
de ADP de
l' DET le
exemple NOUN exemple
4.1 NUM 4.1
, PUNCT ,
page NOUN page
184 NUM 184
ne ADV ne
est VERB être ind_pre
pas ADV pas
diagonalisable ADJ diagonalisable
( PUNCT (
sur ADP sur
R NOUN r
ou CCONJ ou
sur ADP sur
C NOUN c
) PUNCT )
. PUNCT .
La DET le
matrice NOUN matrice
de ADP de
l' DET le
exemple NOUN exemple
4.2 NUM 4.2
, PUNCT ,
page NOUN page
189 NUM 189
est VERB être ind_pre
diagonalisable ADJ diagonalisable
sur ADP sur
K. PROPN K.
L' DET le
endomorphisme NOUN endomorphisme
de ADP de
l' DET le
exemple NOUN exemple
4.3 NUM 4.3
, PUNCT ,
page NOUN page
191 NUM 191
est VERB être ind_pre
diagonalisable ADJ diagonalisable
. PUNCT .
Une DET un
rotation NOUN rotation
du ADP de
plan NOUN plan
euclidien ADJ euclidien
R2 NOUN r2
d' ADP de
angle NOUN angle
R.Z VERB r.z
ne ADV ne
est VERB être ind_pre
pas ADV pas
diagonalisable ADJ diagonalisable
. PUNCT .
Cependant ADV cependant
, PUNCT ,
sa DET son
matrice NOUN matrice
est VERB être ind_pre
diagonalisable ADJ diagonalisable
sur ADP sur
C. NOUN c.
2 NUM 2
2 NUM 2
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
est VERB être ind_pre
diagonalisable ADJ diagonalisable
. PUNCT .
4.1.2 NOUN 4.1.2
Diagonaliser PROPN Diagonaliser
( PUNCT (
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
démontrer VERB démontrer inf
qu' SCONJ que
elle PRON lui
est VERB être ind_pre
diagonalisable ADJ diagonalisable
et CCONJ et
l' PRON l'
écrire VERB écrire inf
sous ADP sous
la DET le
forme NOUN forme
P NOUN p
D NOUN d
P NOUN p
1 NUM 1
avec ADP avec
P NOUN p
GL3 ADJ gl3
( PUNCT (
R NOUN r
) PUNCT )
et CCONJ et
D NOUN d
M3 PROPN M3
( PUNCT (
R NOUN r
) PUNCT )
diagonale ADJ diagonal
) PUNCT )
la DET le
matrice NOUN matrice
suivante ADJ suivant
: PUNCT :
4.1.3 NOUN 4.1.3
Démontrer VERB démontrer inf
que SCONJ que
les DET le
matrices NOUN matrice
suivantes ADJ suivant
sont VERB être ind_pre
semblables ADJ semblable
: PUNCT :
4.1.4 NUM 4.1.4
Diagonaliser PROPN Diagonaliser
l' DET le
endomorphisme NOUN endomorphisme
de ADP de
Kn PROPN Kn
X NOUN x
défini VERB définir par_pas
par ADP par
( PUNCT (
pour ADP pour
n AUX n
N ADJ n
) PUNCT )
: PUNCT :
4.1.5 NUM 4.1.5
Soit VERB être sub_pre
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
diagonalisable ADJ diagonalisable
et CCONJ et
B NOUN b
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
diagonalisable ADJ diagonalisable
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
A ADP à
B NOUN b
est VERB être ind_pre
diagonalisable ADJ diagonalisable
et CCONJ et
préciser VERB préciser inf
les DET le
éléments NOUN élément
propres ADJ propre
de ADP de
A ADP à
B NOUN b
en ADP en
fonction NOUN fonction
de ADP de
ceux PRON celui
de ADP de
A NOUN a
et CCONJ et
de ADP de
B. NOUN b.
4.1.6 CCONJ 4.1.6
Trouver VERB trouver inf
une DET un
condition NOUN condition
nécessaire ADJ nécessaire
et CCONJ et
suffisante ADJ suffisant
sur ADP sur
A NOUN a
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
pour ADP pour
que SCONJ que
soit VERB être sub_pre
diagonalisable ADJ diagonalisable
4.1.7 PUNCT 4.1.7
Démontrer VERB démontrer inf
que SCONJ que
toute DET tout
matrice NOUN matrice
circulante ADJ circulant
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
de ADP de
la DET le
forme NOUN forme
: PUNCT :
est VERB être ind_pre
diagonalisable ADJ diagonalisable
dans ADP dans
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
et CCONJ et
donner VERB donner inf
ses DET son
éléments NOUN élément
propres ADJ propre
. PUNCT .
4.1.8 CCONJ 4.1.8
La DET le
matrice NOUN matrice
suivante ADJ suivant
est-elle CCONJ est-elle
diagonalisable ADJ diagonalisable
( PUNCT (
n NOUN n
2 NUM 2
) PUNCT )
? PUNCT ?
4.1.9 NUM 4.1.9
La DET le
matrice NOUN matrice
suivante ADJ suivant
est-elle CCONJ est-elle
diagonalisable ADJ diagonalisable
( PUNCT (
n NOUN n
2 NUM 2
) PUNCT )
? PUNCT ?
4.1.10 PROPN 4.1.10
Soit VERB être sub_pre
( PUNCT (
a1 NOUN a1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
an NOUN an
) PUNCT )
Cn PRON cn
. PUNCT .
À ADP à
quelle DET quel
condition NOUN condition
nécessaire ADJ nécessaire
et CCONJ et
suffisante ADJ suffisant
la DET le
matrice NOUN matrice
M NOUN m
suivante ADJ suivant
est-elle CCONJ est-elle
diagonalisable ADJ diagonalisable
? PUNCT ?
4.1.11 PROPN 4.1.11
Trouver VERB trouver inf
une DET un
condition NOUN condition
nécessaire ADJ nécessaire
et CCONJ et
suffisante ADJ suffisant
pour ADP pour
que SCONJ que
la DET le
matrice NOUN matrice
suivante ADJ suivant
soit VERB être sub_pre
diagonalisable ADJ diagonalisable
: PUNCT :
4.1.12 NUM 4.1.12
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Démontrer VERB démontrer inf
l' DET le
équivalence NOUN équivalence
de ADP de
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
u X u
diagonalisable ADJ diagonalisable
( PUNCT (
b NOUN b
) PUNCT )
tout DET tout
sous-espace VERB sous-espace
de ADP de
E NOUN e
stable ADJ stable
par ADP par
u PRON u
admet VERB admettre ind_pre
un DET un
supplémentaire ADJ supplémentaire
stable ADJ stable
par ADP par
u. NOUN u.
4.1.13 PROPN 4.1.13
Trouver VERB trouver inf
les DET le
valeurs NOUN valeur
propres ADJ propre
et CCONJ et
vecteurs NOUN vecteur
propres ADJ propre
de ADP de
l' DET le
endomorphisme NOUN endomorphisme
de ADP de
Rn NOUN rn
X NOUN x
défini VERB définir par_pas
par ADP par
: PUNCT :
Trigonalisation X Trigonalisation
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n AUX n
1 NUM 1
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
On PRON on
dit VERB dire ind_pre
que SCONJ que
u NOUN u
est VERB être ind_pre
dit VERB dire par_pas ind_pre
trigonalisable ADJ trigonalisable
si SCONJ si
il PRON il
existe VERB exister ind_pre sub_pre
un DET un
drapeau NOUN drapeau
stable ADJ stable
pour ADP pour
u NOUN u
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire ADV dire
des ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
V1 PROPN V1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Vn NOUN vn
de ADP de
E NOUN e
qui PRON qui
sont VERB être ind_pre
stables ADJ stable
par ADP par
u NOUN u
et CCONJ et
tels ADJ tel
que SCONJ que
: PUNCT :
Nécessairement ADV nécessairement
pour ADP pour
tout ADV tout
k NOUN k
1 NUM 1
, PUNCT ,
n NOUN n
, PUNCT ,
dim ADP dim
Vk NOUN vk
k. NOUN k.
u NOUN u
est VERB être ind_pre
trigonalisable ADJ trigonalisable
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
il PRON il
existe VERB exister ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
dans ADP dans
laquelle PRON lequel
la DET le
matrice NOUN matrice
de ADP de
u NOUN u
est VERB être ind_pre
triangulaire ADJ triangulaire
supérieure ADJ supérieur
( PUNCT (
considérer VERB considérer inf
une DET un
base NOUN base
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en ADP en
) PUNCT )
de ADP de
E PROPN E
adaptée VERB adapter par_pas
au ADP à
drapeau NOUN drapeau
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
telle ADJ tel
La DET le
diagonale NOUN diagonale
de ADP de
cette DET ce
matrice NOUN matrice
est VERB être ind_pre
alors ADV alors
constituée VERB constituer par_pas pas_cop
des ADP de
valeurs NOUN valeur
propres ADJ propre
de ADP de
u PROPN u
( PUNCT (
avec ADP avec
leurs DET leur
multiplicités NOUN multiplicité
) PUNCT )
. PUNCT .
On PRON on
dit VERB dire ind_pre
qu' SCONJ que
une DET un
matrice NOUN matrice
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
est VERB être ind_pre
trigonalisable ADJ trigonalisable
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
son DET son
endomorphisme NOUN endomorphisme
canoniquement ADV canoniquement
associé VERB associer par_pas
l' DET le
est VERB être ind_pre
. PUNCT .
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
une DET un
matrice NOUN matrice
est VERB être ind_pre
trigonalisable ADJ trigonalisable
si SCONJ si
elle PRON lui
est VERB être ind_pre
semblable ADJ semblable
à ADP à
une DET un
matrice NOUN matrice
triangulaire ADJ triangulaire
supérieure ADJ supérieur
. PUNCT .
De ADP de
même ADV même
que SCONJ que
pour ADP pour
la DET le
diagonalisation NOUN diagonalisation
, PUNCT ,
il PRON il
est VERB être ind_pre
indispensable ADJ indispensable
de ADP de
préciser VERB préciser inf
le DET le
corps NOUN corps
K NOUN k
dans ADP dans
lequel PRON lequel
on PRON on
travaille VERB travailler ind_pre
. PUNCT .
Théorème NOUN théorème
4.2 NUM 4.2
Caractérisation NOUN caractérisation
des ADP de
endomorphismes NOUN endomorphisme
trigonalisables ADP trigonalisables
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Alors ADV alors
u NOUN u
est VERB être ind_pre
trigonalisable ADJ trigonalisable
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
u NOUN u
est VERB être ind_pre
scindé VERB scinder par_pas
Démonstration NOUN démonstration
Supposons VERB supposer ind_pre
que SCONJ que
u NOUN u
soit VERB être sub_pre
trigonalisable ADJ trigonalisable
. PUNCT .
Il PRON il
existe VERB exister ind_pre
une DET un
base NOUN base
E NOUN e
de ADP de
E PROPN E
telle ADJ tel
que SCONJ que
A ADP à
MatE PROPN MatE else
( PUNCT (
u NOUN u
) PUNCT )
ai PROPN avoir
, PUNCT ,
j PROPN j
( PUNCT (
i X i
, PUNCT ,
j)1,n2 NOUN j)1,n2
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
( PUNCT (
avec ADP avec
n NOUN n
dim ADP dim
E NOUN e
) PUNCT )
soit VERB être sub_pre
triangulaire ADJ triangulaire
supérieure ADJ supérieur
. PUNCT .
On PRON on
a VERB avoir ind_pre
alors ADV alors
: PUNCT :
donc ADV donc
u NOUN u
est VERB être ind_pre
scindé VERB scinder par_pas
. PUNCT .
Démontrons VERB démontrer ind_pre
la DET le
réciproque NOUN réciproque
par ADP par
récurrence NOUN récurrence
sur ADP sur
n NOUN n
dim ADP dim
E. NUM E.
Pour ADP pour
n AUX n
1 NUM 1
, PUNCT ,
il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
rien PRON rien
à ADP à
démontrer VERB démontrer inf
. PUNCT .
Soit VERB être sub_pre
n AUX n
N ADJ n
. PUNCT .
Supposons VERB supposer ind_pre
le DET le
résultat NOUN résultat
vrai ADJ vrai
au ADP à
rang NOUN rang
n. NOUN n.
Soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
avec ADP avec
dim ADP dim
E NOUN e
n AUX n
1 NUM 1
tel ADJ tel
que SCONJ que
u X u
soit VERB être sub_pre
scindé VERB scinder par_pas
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
il PRON il
admet VERB admettre ind_pre
au ADP à
moins ADV moins
une DET un
racine NOUN racine
donc ADV donc
il PRON il
existe VERB exister ind_pre
un DET un
vecteur NOUN vecteur
propre ADJ propre
e1 PROPN e1
de ADP de
u PROPN u
: PUNCT :
u(e1 PROPN u(e1
) PUNCT )
1 NUM 1
.e1 PROPN .e1
avec ADP avec
1 NUM 1
K NOUN k
la DET le
valeur NOUN valeur
propre ADJ propre
associée VERB associer par_pas
à ADP à
e1 PROPN e1
. PUNCT .
Comme ADP comme
e1 NOUN e1
6 NUM 6
0E NUM 0E
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
compléter VERB compléter inf
( PUNCT (
e1 NOUN e1
) PUNCT )
Puisque SCONJ puisque
u PRON u
est VERB être ind_pre
scindé VERB scinder par_pas
, PUNCT ,
nécessairement ADV nécessairement
N ADJ n
est VERB être ind_pre
aussi ADV aussi
scindé VERB scinder par_pas
. PUNCT .
Or CCONJ or
: PUNCT :
avec ADP avec
H NOUN heure
Vect(e2 NOUN vect(e2
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en1 PROPN en1
) PUNCT )
qui PRON qui
est VERB être ind_pre
de ADP de
dimension NOUN dimension
n NOUN n
, PUNCT ,
H NOUN heure
la DET le
projection NOUN projection
de ADP de
H PROPN H
parallèlement ADV parallèlement
à ADP à
Vect(e1 NOUN vect(e1
) PUNCT )
et CCONJ et
H NOUN heure
u NOUN u
H NOUN heure
L NOUN l
( PUNCT (
H NOUN heure
) PUNCT )
qui PRON qui
a VERB avoir ind_pre
pour ADP pour
polynôme NOUN polynôme
caractéristique ADJ caractéristique
N ADJ n
qui PRON qui
est VERB être ind_pre
scindé VERB scinder par_pas
. PUNCT .
Par ADP par
hypothèse NOUN hypothèse
de ADP de
récurrence NOUN récurrence
, PUNCT ,
H NOUN heure
u NOUN u
H NOUN heure
est VERB être ind_pre
trigonalisable ADJ trigonalisable
donc ADV donc
il PRON il
existe VERB exister ind_pre
une DET un
base NOUN base
( PUNCT (
h2 X h2
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
hn1 NOUN hn1
) PUNCT )
de ADP de
H NOUN heure
telle ADJ tel
que SCONJ que
la DET le
matrice NOUN matrice
de ADP de
H NOUN heure
u NOUN u
H NOUN heure
dans ADP dans
cette DET ce
base NOUN base
soit VERB être sub_pre
triangulaire ADJ triangulaire
supérieure ADJ supérieur
. PUNCT .
Alors ADV alors
, PUNCT ,
par ADP par
construction NOUN construction
, PUNCT ,
la DET le
matrice NOUN matrice
de ADP de
u PROPN u
dans ADP dans
la DET le
base NOUN base
( PUNCT (
e1 PROPN e1
, PUNCT ,
h2 X h2
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
hn1 NOUN hn1
) PUNCT )
est VERB être ind_pre
triangulaire ADJ triangulaire
supérieure ADJ supérieur
, PUNCT ,
donc ADV donc
u PRON u
est VERB être ind_pre
trigonalisable ADJ trigonalisable
. PUNCT .
Par ADP par
principe NOUN principe
de ADP de
récurrence NOUN récurrence
, PUNCT ,
le DET le
résultat NOUN résultat
est VERB être ind_pre
vraie ADJ vrai
pour ADP pour
tout DET tout
n AUX n
N ADJ n
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
tous ADJ tout
les DET le
endomorphismes NOUN endomorphisme
d' ADP de
un DET un
C NOUN c
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
sont VERB être ind_pre
trigonalisables ADJ trigonalisable
( PUNCT (
car CCONJ car
les DET le
polynômes NOUN polynôme
non ADV non
constants ADJ constant
sont VERB être ind_pre
scindés VERB scinder par_pas
sur ADP sur
C NOUN c
) PUNCT )
. PUNCT .
Ils PRON il
possèdent VERB posséder ind_pre
des DET un
espaces NOUN espace
stables ADJ stable
de ADP de
dimension NOUN dimension
quelconque ADJ quelconque
. PUNCT .
La DET le
matrice NOUN matrice
: PUNCT :
se PRON se
trigonalise VERB trigonalise
dans ADP dans
C. PROPN C.
Il PRON il
suffit VERB suffire ind_pre
pour ADP pour
effectuer VERB effectuer inf
la DET le
trigonalisation NOUN trigonalisation
de ADP de
suivre VERB suivre inf
la DET le
démonstration NOUN démonstration
du ADP de
théorème NOUN théorème
. PUNCT .
Soit VERB être sub_pre
u ADP u
L NOUN l
( PUNCT (
R NOUN r
) PUNCT )
tel ADJ tel
que SCONJ que
A ADP à
MatC PROPN MatC
( PUNCT (
u NOUN u
) PUNCT )
où PRON où
C NOUN c
( PUNCT (
c1 PROPN c1
, PUNCT ,
c2 PROPN c2
, PUNCT ,
c3 PROPN c3
) PUNCT )
est VERB être ind_pre
la DET le
base NOUN base
canonique ADJ canonique
de ADP de
R3 PROPN R3
. PUNCT .
1 NUM 1
. PUNCT .
On PRON on
a VERB avoir
vu VERB voir pas_cop
que SCONJ que
le DET le
vecteur NOUN vecteur
e1 PROPN e1
c1 PRON c1
c2 PROPN c2
c3 PROPN c3
est VERB être ind_pre
vecteur NOUN vecteur
propre ADJ propre
de ADP de
u ADJ u
associé VERB associer par_pas
à ADP à
la DET le
valeur NOUN valeur
propre ADJ propre
2 NUM 2
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
compléter VERB compléter inf
en ADP en
une DET un
base NOUN base
B1 ADJ b1
( PUNCT (
e1 PROPN e1
, PUNCT ,
e2 PROPN e2
, PUNCT ,
e3 X e3
) PUNCT )
en ADP en
prenant VERB prendre par_pre
e2 NOUN e2
c1 PROPN c1
et CCONJ et
e3 VERB e3
c2 PROPN c2
. PUNCT .
Bien ADV bien
vérifier VERB vérifier inf
que SCONJ que
l' PRON l'
on PRON on
a VERB avoir ind_pre
une DET un
base NOUN base
! PUNCT !
. PUNCT .
2 NUM 2
. PUNCT .
Pour ADP pour
trouver VERB trouver inf
la DET le
matrice NOUN matrice
de ADP de
u PROPN u
dans ADP dans
la DET le
base NOUN base
B1 ADJ b1
, PUNCT ,
on PRON on
procède VERB procéder ind_pre
comme ADP comme
ceci PRON ceci
: PUNCT :
de ADP de
la DET le
matrice NOUN matrice
A NOUN a
) PUNCT )
. PUNCT .
colonne NOUN colonne
de ADP de
la DET le
matrice NOUN matrice
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
vérifier VERB vérifier inf
en ADP en
Wxmaxima PROPN Wxmaxima
, PUNCT ,
mais CCONJ mais
il PRON il
faut VERB falloir ind_pre
savoir VERB savoir inf
le PRON le
faire VERB faire inf
à ADP à
la DET le
main NOUN main
! PUNCT !
On PRON on
recommence VERB recommencer ind_pre
sur ADP sur
la DET le
sous-matrice NOUN sous-matrice
2 NUM 2
2 NUM 2
: PUNCT :
A1 PROPN A1
est VERB être ind_pre
la DET le
matrice NOUN matrice
d' ADP de
un DET un
endomorphisme NOUN endomorphisme
u1 NOUN u1
de ADP de
E1 PROPN E1
dans ADP dans
la DET le
base NOUN base
( PUNCT (
e2 PROPN e2
, PUNCT ,
e3 X e3
) PUNCT )
, PUNCT ,
où PRON où
E1 PRON e1
Vecte2 NOUN vecte2
, PUNCT ,
e3 X e3
. PUNCT .
1 NUM 1
. PUNCT .
On PRON on
cherche VERB chercher ind_pre
un DET un
vecteur NOUN vecteur
propre ADJ propre
de ADP de
A1 NOUN a1
, PUNCT ,
il PRON il
vérifie VERB vérifier ind_pre
: PUNCT :
ce PRON ce
qui PRON qui
donne VERB donner ind_pre
immédiatement ADV immédiatement
: PUNCT :
x ADP x
a VERB avoir ind_pre
, PUNCT ,
y PRON y
a VERB avoir ind_pre
où ADV où
a VERB avoir ind_pre
6 DET 6
0 PRON 0
, PUNCT ,
par ADP par
exemple NOUN exemple
( PUNCT (
x NOUN x
, PUNCT ,
y PRON y
) PUNCT )
( PUNCT (
1 NUM 1
, PUNCT ,
1 NUM 1
) PUNCT )
. PUNCT .
2 NUM 2
. PUNCT .
Ce DET ce
vecteur NOUN vecteur
est VERB être ind_pre
exprimé VERB exprimer par_pas
dans ADP dans
la DET le
base NOUN base
( PUNCT (
e2 PROPN e2
, PUNCT ,
e3 X e3
) PUNCT )
, PUNCT ,
c' PRON ce
est VERB être ind_pre
donc ADV donc
: PUNCT :
où PRON où
b1 PROPN b1
est VERB être ind_pre
choisi VERB choisir par_pas
pour ADP pour
conserver VERB conserver inf
le DET le
vecteur NOUN vecteur
propre ADJ propre
de ADP de
A NOUN a
et CCONJ et
b3 PRON b3
est VERB être ind_pre
choisi VERB choisir par_pas
pour ADP pour
compléter VERB compléter inf
b2 DET b2
en ADP en
une DET un
base NOUN base
4 NUM 4
. PUNCT .
On PRON on
a VERB avoir ind_pre
alors ADV alors
: PUNCT :
Finalement ADV finalement
: PUNCT :
Vérifions VERB vérifier imper
en ADP en
Wxmaxima PROPN Wxmaxima
: PUNCT :
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
, PUNCT ,
soit VERB être sub_pre
u DET u
E NOUN e
et CCONJ et
soit VERB être sub_pre
F VERB f
6 NUM 6
0E NUM 0E
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
stable ADJ stable
par ADP par
u PROPN u
( PUNCT (
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire ADV dire
u(F ADV u(f
) PUNCT )
F NOUN f
) PUNCT )
. PUNCT .
Alors ADV alors
: PUNCT :
2 NUM 2
. PUNCT .
si SCONJ si
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
, PUNCT ,
alors ADV alors
u NOUN u
F NOUN f
est VERB être ind_pre
diagonalisable ADJ diagonalisable
3 NUM 3
. PUNCT .
si SCONJ si
u NOUN u
est VERB être ind_pre
trigonalisable ADJ trigonalisable
, PUNCT ,
alors ADV alors
u NOUN u
F NOUN f
est VERB être ind_pre
trigonalisable ADJ trigonalisable
. PUNCT .
Démonstration NOUN démonstration
Par ADP par
double ADJ double
inclusions NOUN inclusion
, PUNCT ,
Ev NOUN ev
( PUNCT (
) PUNCT )
Eu PROPN Eu
( PUNCT (
) PUNCT )
F NOUN f
. PUNCT .
diagonalisable ADJ diagonalisable
, PUNCT ,
il PRON il
existe VERB exister ind_pre
une DET un
base NOUN base
de ADP de
vecteurs NOUN vecteur
propres ADJ propre
de ADP de
E NOUN e
donc ADV donc
on PRON on
peut VERB pouvoir ind_pre
écrire VERB écrire inf
: PUNCT :
avec ADP avec
, PUNCT ,
pour ADP pour
tout ADV tout
i NUM i
1 NUM 1
, PUNCT ,
k NOUN k
, PUNCT ,
xi CCONJ xi
Eu PROPN Eu
( PUNCT (
i NOUN i
) PUNCT )
On PRON on
a VERB avoir ind_pre
donc ADV donc
: PUNCT :
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
on PRON on
a VERB avoir ind_pre
un DET un
système NOUN système
linéaire ADJ linéaire
d' ADP de
inconnues ADJ inconnu
x1 PROPN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xk NUM xk
vectorielles ADJ vectoriel
( PUNCT (
éléments NOUN élément
de ADP de
E NOUN e
) PUNCT )
. PUNCT .
Pour ADP pour
se PRON se
ramener VERB ramener inf
à ADP à
un DET un
système NOUN système
linéaire ADJ linéaire
d' ADP de
inconnues ADJ inconnu
scalaires ADJ scalaire
, PUNCT ,
considérons ADJ considéron
E NOUN e
? PUNCT ?
une DET un
forme NOUN forme
linéaire ADJ linéaire
. PUNCT .
On PRON on
a VERB avoir ind_pre
alors ADV alors
On PRON on
a VERB avoir ind_pre
donc ADV donc
un DET un
système NOUN système
linéaire ADJ linéaire
dont PRON dont
le DET le
déterminant NOUN déterminant
de ADP de
la DET le
matrice NOUN matrice
associée VERB associer par_pas
est VERB être ind_pre
un DET un
déterminant NOUN déterminant
de ADP de
Vandermonde PROPN Vandermonde
( PUNCT (
proposition NOUN proposition
3.2 NUM 3.2
, PUNCT ,
page NOUN page
173 NUM 173
) PUNCT )
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
comme ADP comme
les DET le
valeurs NOUN valeur
propres ADJ propre
i PRON i
sont VERB être ind_pre
toutes ADJ tout
différentes ADJ différent
, PUNCT ,
ce DET ce
déterminant ADJ déterminant
est VERB être ind_pre
non ADV non
nul ADJ nul
donc ADV donc
le DET le
système NOUN système
admet VERB admettre ind_pre
une DET un
unique ADJ unique
solution NOUN solution
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
donc ADV donc
écrire VERB écrire inf
: PUNCT :
Puisque SCONJ puisque
que SCONJ que
ceci PRON ceci
est VERB être ind_pre
vrai ADJ vrai
pour ADP pour
toute DET tout
forme NOUN forme
linéaire ADJ linéaire
E NOUN e
? PUNCT ?
et CCONJ et
en ADP en
remarquant VERB remarquer par_pre
que SCONJ que
les DET le
i NOUN i
, PUNCT ,
j PRON j
ne ADV ne
dépendent VERB dépendre ind_pre sub_pre
pas ADV pas
de ADP de
( PUNCT (
formules NOUN formule
de ADP de
Cramer PROPN Cramer
) PUNCT )
, PUNCT ,
on PRON on
a VERB avoir ind_pre
: PUNCT :
en ADP en
utilisant VERB utiliser par_pre
le DET le
fait NOUN fait
que SCONJ que
F NOUN f
est VERB être ind_pre
stable ADJ stable
par ADP par
tous ADJ tout
les DET le
uj PRON uj
. PUNCT .
On PRON on
a VERB avoir
donc ADV donc
démontré VERB démontrer pas_cop
que SCONJ que
tout DET tout
élément NOUN élément
de ADP de
F NOUN f
s' PRON se
écrit VERB écrire par_pas ind_pre
de ADP de
manière NOUN manière
unique ADJ unique
comme ADP comme
une DET un
somme NOUN somme
de ADP de
vecteurs NOUN vecteur
propres ADJ propre
de ADP de
u X u
qui PRON qui
sont VERB être ind_pre
dans ADP dans
F NOUN f
, PUNCT ,
d' ADP de
où PRON où
: PUNCT :
d' ADP de
après ADP après
le DET le
point NOUN point
1 NUM 1
. PUNCT .
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
v NOUN v
u NOUN u
F NOUN f
est VERB être ind_pre
diagonalisable ADJ diagonalisable
. PUNCT .
3 NUM 3
. PUNCT .
Si SCONJ si
F NOUN f
E NOUN e
, PUNCT ,
il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
rien PRON rien
à ADP à
démontrer VERB démontrer inf
. PUNCT .
Supposons VERB supposer imper
F NOUN f
6 NUM 6
E. PROPN E.
Soit VERB être sub_pre
F NOUN f
une DET un
base NOUN base
de ADP de
F NOUN f
que SCONJ que
l' PRON l'
on PRON on
complète ADJ complet
en ADP en
une DET un
base NOUN base
E NOUN e
de ADP de
E. PROPN E.
On PRON on
a VERB avoir ind_pre
alors ADV alors
( PUNCT (
n NOUN n
dim ADP dim
E NOUN e
et CCONJ et
p NOUN p
dim ADV dim
F NOUN f
) PUNCT )
: PUNCT :
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
u DET u
v NOUN v
D NOUN d
. PUNCT .
Or CCONJ or
u PRON u
est VERB être ind_pre
scindé VERB scinder par_pas
car CCONJ car
u NOUN u
est VERB être ind_pre
trigonalisable ADJ trigonalisable
donc ADV donc
nécessairement ADV nécessairement
v NOUN v
est VERB être ind_pre
aussi ADV aussi
scindé VERB scinder par_pas
, PUNCT ,
ce PRON ce
qui PRON qui
démontre VERB démontrer ind_pre
que SCONJ que
v NOUN v
est VERB être ind_pre
trigonalisable ADJ trigonalisable
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
démontrer VERB démontrer inf
le DET le
point NOUN point
2 NUM 2
beaucoup ADV beaucoup
plus ADV plus
rapidement ADV rapidement
avec ADP avec
la DET le
notion NOUN notion
de ADP de
polynôme NOUN polynôme
d' ADP de
endomorphisme NOUN endomorphisme
( PUNCT (
voir VERB voir inf
le DET le
chapitre NOUN chapitre
suivant ADJ suivant
) PUNCT )
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
retenir VERB retenir inf
cette DET ce
idée NOUN idée
: PUNCT :
lorsqu' SCONJ lorsque
on PRON on
a VERB avoir ind_pre
un DET un
système NOUN système
linéaire ADJ linéaire
dont PRON dont
les DET le
inconnues ADJ inconnu
x1 PROPN x1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
xp NOUN xp
sont VERB être ind_pre
des DET un
vecteurs NOUN vecteur
d' ADP de
un DET un
espace NOUN espace
vectoriel NOUN vectoriel
E NOUN e
: PUNCT :
ai PROPN avoir
, PUNCT ,
j PROPN j
.xj X .xj
bi X bi
on PRON on
peut VERB pouvoir ind_pre
utiliser VERB utiliser inf
la DET le
dualité NOUN dualité
. PUNCT .
On PRON on
considère VERB considérer ind_pre
une DET un
forme NOUN forme
linéaire ADJ linéaire
quelconque ADJ quelconque
E NOUN e
? PUNCT ?
et CCONJ et
on PRON on
obtient VERB obtenir ind_pre
le DET le
système NOUN système
dont PRON dont
les DET le
inconnues ADJ inconnu
( PUNCT (
x1 PRON x1
) PUNCT )
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
( PUNCT (
xp NOUN xp
) PUNCT )
sont VERB être ind_pre
des DET un
scalaires ADJ scalaire
, PUNCT ,
que SCONJ que
l' PRON l'
on PRON on
sait VERB savoir ind_pre
résoudre VERB résoudre inf
( PUNCT (
typiquement ADV typiquement
avec ADP avec
l' DET le
al- PRON al-
gorithme PROPN gorithme
du ADP de
pivot NOUN pivot
de ADP de
Gauss PROPN Gauss
) PUNCT )
. PUNCT .
Si SCONJ si
elles PRON lui
existent VERB exister ind_pre
, PUNCT ,
les DET le
solutions NOUN solution
s' PRON se
écrivent VERB écrire ind_pre
sous ADP sous
la DET le
forme NOUN forme
: PUNCT :
Comme SCONJ comme
ceci PRON ceci
est VERB être ind_pre
vrai ADJ vrai
pour ADP pour
toute DET tout
forme NOUN forme
linéaire ADJ linéaire
E NOUN e
? PUNCT ?
et CCONJ et
les DET le
i PROPN i
, PUNCT ,
j PRON j
ne ADV ne
dépendent VERB dépendre ind_pre
pas ADV pas
de ADP de
, PUNCT ,
on PRON on
a VERB avoir ind_pre
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
soit VERB être sub_pre
u PRON u
et CCONJ et
v NOUN v
deux NUM deux
endomorphismes NOUN endomorphisme
de ADP de
E NOUN e
qui PRON qui
commutent VERB commuter ind_pre
Démonstration NOUN démonstration
Soit VERB être sub_pre
Sp(u PROPN Sp(u
) PUNCT )
et CCONJ et
soit VERB être sub_pre
x ADP x
Eu PROPN Eu
( PUNCT (
) PUNCT )
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
u(x PROPN u(x
) PUNCT )
.x VERB .x
donc ADV donc
: PUNCT :
mais CCONJ mais
comme ADP comme
u NOUN u
et CCONJ et
v NOUN v
commutent VERB commuter ind_pre
, PUNCT ,
on PRON on
a VERB avoir ind_pre
v VERB v
u(x PROPN u(x
) PUNCT )
u X u
v(x NOUN v(
) PUNCT )
donc ADV donc
: PUNCT :
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire ADV dire
v(x CCONJ v(x
) PUNCT )
Eu PROPN Eu
( PUNCT (
) PUNCT )
. PUNCT .
Théorème NOUN théorème
4.3 NUM 4.3
Critère NOUN critère
de ADP de
co-diagonalisation NOUN co-diagonalisation
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
soit VERB être sub_pre
u PRON u
et CCONJ et
v NOUN v
deux NUM deux
endomorphismes NOUN endomorphisme
de ADP de
E NOUN e
qui PRON qui
sont VERB être ind_pre
diagonalisables ADJ diagonalisable
. PUNCT .
Alors ADV alors
u NOUN u
et CCONJ et
v NOUN v
commutent VERB commuter ind_pre
( PUNCT (
u X u
v NOUN v
v NOUN v
u NOUN u
) PUNCT )
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
ils PRON il
sont VERB être ind_pre
co-diagonalisables NOUN co-diagonalisable
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
qu' SCONJ que
ils PRON il
se PRON se
diagonalisent VERB diagonaliser
dans ADP dans
une DET un
même ADJ même
base NOUN base
de ADP de
vecteurs NOUN vecteur
propres ADJ propre
. PUNCT .
Démonstration NOUN démonstration
Supposons VERB supposer ind_pre
que SCONJ que
u NOUN u
et CCONJ et
v NOUN v
soient VERB être sub_pre
co-diagonalisables ADV co-diagonalisables
. PUNCT .
Il PRON il
existe VERB exister ind_pre
une DET un
base NOUN base
E NOUN e
de ADP de
E PROPN E
dans ADP dans
laquelle PRON lequel
les DET le
matrices NOUN matrice
MatE PROPN MatE else
( PUNCT (
u NOUN u
) PUNCT )
et CCONJ et
MatE PROPN MatE else
( PUNCT (
v NOUN v
) PUNCT )
sont VERB être ind_pre
diagonales ADJ diagonal
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
elles PRON lui
commutent VERB commuter ind_pre
donc ADV donc
: PUNCT :
MatE PROPN MatE else
( PUNCT (
u X u
v NOUN v
) PUNCT )
MatE PROPN MatE else
( PUNCT (
u NOUN u
) PUNCT )
MatE PROPN MatE else
( PUNCT (
v NOUN v
) PUNCT )
MatE PROPN MatE else
( PUNCT (
v NOUN v
) PUNCT )
MatE PROPN MatE else
( PUNCT (
u NOUN u
) PUNCT )
MatE PROPN MatE else
( PUNCT (
v NOUN v
u NOUN u
) PUNCT )
Supposons VERB supposer ind_pre
que SCONJ que
u DET u
v NOUN v
v NOUN v
u. VERB u.
Soit VERB être sub_pre
Sp(u PROPN Sp(u
) PUNCT )
. PUNCT .
D' ADP de
après ADP après
la DET le
propriété NOUN propriété
4.7 NUM 4.7
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
page NOUN page
, PUNCT ,
Eu PROPN Eu
( PUNCT (
) PUNCT )
est VERB être ind_pre
stable ADJ stable
par ADP par
v. PROPN v.
Comme SCONJ comme
v NOUN v
est VERB être ind_pre
diagonalisable ADJ diagonalisable
, PUNCT ,
on PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
v NOUN v
Eu PROPN Eu
( PUNCT (
) PUNCT )
est VERB être ind_pre
diagonalisable ADJ diagonalisable
( PUNCT (
propriété NOUN propriété
4.6 NUM 4.6
, PUNCT ,
page NOUN page
203 NUM 203
) PUNCT )
. PUNCT .
Il PRON il
existe VERB exister ind_pre
donc ADV donc
une DET un
base NOUN base
de ADP de
vecteurs NOUN vecteur
propres ADJ propre
( PUNCT (
pour ADP pour
v NOUN v
) PUNCT )
de ADP de
Eu PROPN Eu
( PUNCT (
) PUNCT )
. PUNCT .
Mais CCONJ mais
ces DET ce
vecteurs NOUN vecteur
propres ADJ propre
sont VERB être ind_pre
dans ADP dans
Eu PROPN Eu
( PUNCT (
) PUNCT )
, PUNCT ,
donc ADV donc
ce PRON ce
sont VERB être ind_pre
aussi ADV aussi
des DET un
vecteurs NOUN vecteur
propres ADJ propre
pour ADP pour
u. X u.
Puisque SCONJ puisque
u PRON u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
, PUNCT ,
on PRON on
a VERB avoir ind_pre
D' ADP de
après ADP après
ce PRON ce
qui PRON qui
précède VERB précéder ind_pre
, PUNCT ,
pour ADP pour
toute DET tout
Sp(u PROPN Sp(u
) PUNCT )
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
considérer VERB considérer inf
une DET un
base NOUN base
de ADP de
Eu PROPN Eu
( PUNCT (
) PUNCT )
de ADP de
vecteurs NOUN vecteur
propres ADJ propre
à ADP à
la DET le
fois NOUN fois
de ADP de
u NOUN u
et CCONJ et
de ADP de
v PROPN v
, PUNCT ,
donc ADV donc
on PRON on
construit VERB construire ind_pre
par ADP par
somme NOUN somme
directe ADJ direct
une DET un
base NOUN base
de ADP de
E NOUN e
de ADP de
vecteurs NOUN vecteur
propres ADJ propre
à ADP à
la DET le
fois NOUN fois
de ADP de
u NOUN u
et CCONJ et
de ADP de
v NOUN v
, PUNCT ,
donc ADV donc
u ADP u
et CCONJ et
v NOUN v
sont VERB être ind_pre
co-diagonalisables NOUN co-diagonalisable
. PUNCT .
Théorème NOUN théorème
4.4 NUM 4.4
Critère NOUN critère
de ADP de
co-trigonalisation NOUN co-trigonalisation
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
soit VERB être sub_pre
u PRON u
et CCONJ et
v NOUN v
deux NUM deux
endomorphismes NOUN endomorphisme
de ADP de
E NOUN e
qui PRON qui
sont VERB être ind_pre
trigonalisables ADJ trigonalisable
. PUNCT .
Si SCONJ si
u PROPN u
et CCONJ et
v NOUN v
commutent VERB commuter ind_pre
( PUNCT (
u X u
v NOUN v
v NOUN v
u NOUN u
) PUNCT )
alors ADV alors
ils PRON il
sont VERB être ind_pre
co-trigonalisables VERB co-trigonalisabler
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
qu' SCONJ que
ils PRON il
se PRON se
trigonalisent ADV trigonalisent
dans ADP dans
une DET un
même ADJ même
base NOUN base
de ADP de
vecteurs NOUN vecteur
propres ADJ propre
. PUNCT .
Démonstration NOUN démonstration
On PRON on
procède VERB procéder ind_pre
par ADP par
récurrence NOUN récurrence
sur ADP sur
n NOUN n
dim ADP dim
E. NUM E.
Si SCONJ si
n NOUN n
1 NUM 1
, PUNCT ,
il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
rien PRON rien
à ADP à
démontrer VERB démontrer inf
. PUNCT .
Soit VERB être sub_pre
n AUX n
N ADJ n
. PUNCT .
Supposons VERB supposer ind_pre
le DET le
résultat NOUN résultat
vrai ADJ vrai
au ADP à
rang NOUN rang
n NOUN n
et CCONJ et
considérons ADJ considéron
u ADP u
et CCONJ et
v NOUN v
deux NUM deux
endomorphismes NOUN endomorphisme
de ADP de
E NOUN e
trigonalisables ADJ trigonalisable
qui PRON qui
commutent VERB commuter ind_pre
( PUNCT (
avec ADP avec
dim ADP dim
E NOUN e
n NOUN n
1 NUM 1
) PUNCT )
. PUNCT .
On PRON on
démontre VERB démontrer ind_pre
comme ADP comme
dans ADP dans
la DET le
démonstration NOUN démonstration
du ADP de
théorème NOUN théorème
4.3 NUM 4.3
, PUNCT ,
page NOUN page
précédente ADJ précédent
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
un DET un
vecteur NOUN vecteur
propre ADJ propre
x ADP x
commun ADJ commun
à ADP à
u NOUN u
et CCONJ et
v. NOUN v.
En ADP en
particulier ADJ particulier
il PRON il
est VERB être ind_pre
non ADV non
nul ADJ nul
donc ADV donc
on PRON on
peut VERB pouvoir ind_pre
compléter VERB compléter inf
( PUNCT (
x NOUN x
) PUNCT )
en ADP en
une DET un
base NOUN base
E NOUN e
( PUNCT (
x NOUN x
, PUNCT ,
e2 PROPN e2
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en1 PROPN en1
) PUNCT )
de ADP de
E. PROPN E.
Puisque PROPN Puisque
Vect(x ADJ vect(x
) PUNCT )
est VERB être ind_pre
et CCONJ et
MatE PROPN MatE else
( PUNCT (
v NOUN v
) PUNCT )
Comme SCONJ comme
u PROPN u
et CCONJ et
v NOUN v
commutent VERB commuter ind_pre
, PUNCT ,
MatE PROPN MatE else
( PUNCT (
u NOUN u
) PUNCT )
et CCONJ et
MatE PROPN MatE else
( PUNCT (
v NOUN v
) PUNCT )
aussi ADV aussi
et CCONJ et
comme ADP comme
: PUNCT :
commutent VERB commuter ind_pre
aussi ADV aussi
, PUNCT ,
ce PRON ce
qui PRON qui
donne VERB donner ind_pre
MatE PROPN MatE else
( PUNCT (
u NOUN u
) PUNCT )
MatE PROPN MatE else
( PUNCT (
v NOUN v
) PUNCT )
donc ADV donc
M NOUN m
N ADJ n
N NOUN n
M NOUN m
. PUNCT .
De ADP de
plus ADV plus
, PUNCT ,
u PROPN u
( PUNCT (
X NOUN x
) PUNCT )
M NOUN m
et CCONJ et
u NOUN u
est VERB être ind_pre
scindé VERB scinder par_pas
( PUNCT (
car CCONJ car
u NOUN u
est VERB être ind_pre
trigonalisable ADJ trigonalisable
) PUNCT )
donc ADV donc
nécessairement ADV nécessairement
M NOUN m
est VERB être ind_pre
scindé VERB scinder par_pas
donc ADV donc
M NOUN m
est VERB être ind_pre
trigonalisable ADJ trigonalisable
. PUNCT .
De ADP de
même ADV même
, PUNCT ,
N NOUN n
est VERB être ind_pre
trigonalisable ADJ trigonalisable
. PUNCT .
En ADP en
notant VERB noter par_pre
H NOUN heure
Vect(e2 NOUN vect(e2
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en1 PROPN en1
) PUNCT )
, PUNCT ,
u0 PROPN u0
h NOUN heure
uH NOUN uh
et CCONJ et
v NOUN v
0 NUM 0
H NOUN heure
vH X vH
où PRON où
H NOUN heure
est VERB être ind_pre
la DET le
projection NOUN projection
sur ADP sur
N ADJ n
commutent VERB commuter ind_pre
et CCONJ et
sont VERB être ind_pre
trigonalisables ADJ trigonalisable
, PUNCT ,
donc ADV donc
u0 PROPN u0
et CCONJ et
v NOUN v
0 NUM 0
aussi ADV aussi
. PUNCT .
Comme ADP comme
dim ADP dim
H NOUN heure
n NOUN n
, PUNCT ,
d' ADP de
après ADP après
l' DET le
hypothèse NOUN hypothèse
de ADP de
récurrence NOUN récurrence
, PUNCT ,
il PRON il
existe VERB exister ind_pre
une DET un
base NOUN base
H NOUN heure
( PUNCT (
h2 X h2
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
hn1 NOUN hn1
) PUNCT )
de ADP de
H PROPN H
dans ADP dans
laquelle PRON lequel
les DET le
matrices NOUN matrice
de ADP de
u0 PROPN u0
et CCONJ et
v NOUN v
0 NUM 0
sont VERB être ind_pre
triangulaires ADJ triangulaire
supérieures ADJ supérieur
. PUNCT .
Par ADP par
construction NOUN construction
, PUNCT ,
dans ADP dans
la DET le
base NOUN base
( PUNCT (
x NOUN x
, PUNCT ,
h2 X h2
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
hn1 NOUN hn1
) PUNCT )
, PUNCT ,
les DET le
matrices NOUN matrice
de ADP de
u NOUN u
et CCONJ et
v NOUN v
sont VERB être ind_pre
triangulaires ADJ triangulaire
supérieures ADJ supérieur
donc ADV donc
le DET le
résultat NOUN résultat
est VERB être ind_pre
vrai ADJ vrai
au ADP à
rang NOUN rang
n AUX n
1 NUM 1
. PUNCT .
Par ADP par
principe NOUN principe
de ADP de
récurrence NOUN récurrence
, PUNCT ,
le DET le
résultat NOUN résultat
est VERB être ind_pre
vrai ADJ vrai
pour ADP pour
tout DET tout
n NOUN n
dim ADP dim
E NOUN e
N ADJ n
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
généraliser VERB généraliser inf
les DET le
résultats NOUN résultat
des ADP de
théorèmes NOUN théorème
4.3 NUM 4.3
, PUNCT ,
page NOUN page
précédente ADJ précédent
et CCONJ et
4.4 NUM 4.4
, PUNCT ,
page NOUN page
précédente ADJ précédent
à ADP à
un DET un
nombre NOUN nombre
quelconque ADJ quelconque
d' ADP de
endomorphismes NOUN endomorphisme
qui PRON qui
commutent VERB commuter ind_pre
deux NUM deux
à ADP à
deux PRON deux
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
u NOUN u
et CCONJ et
v NOUN v
sont VERB être ind_pre
co-diagonalisables NOUN co-diagonalisable
et CCONJ et
trouver VERB trouver inf
une DET un
base NOUN base
de ADP de
R3 PROPN R3
pour ADP pour
laquelle PRON lequel
MatC PROPN MatC
( PUNCT (
u NOUN u
) PUNCT )
et CCONJ et
MatC PROPN MatC
( PUNCT (
v NOUN v
) PUNCT )
sont VERB être ind_pre
diagonales ADJ diagonal
. PUNCT .
4.2.2 NOUN 4.2.2
Soit VERB être sub_pre
E NOUN e
est VERB être ind_pre
C NOUN c
- ADJ -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
u NOUN u
et CCONJ et
v NOUN v
sont VERB être ind_pre
deux NUM deux
endomorphismes NOUN endomorphisme
de ADP de
E NOUN e
qui PRON qui
vérifient VERB vérifier ind_pre
: PUNCT :
Démontrer VERB démontrer inf
que SCONJ que
u NOUN u
et CCONJ et
v NOUN v
possèdent VERB posséder ind_pre sub_pre
au ADP à
moins ADV moins
un DET un
vecteur NOUN vecteur
propre ADJ propre
commun NOUN commun
. PUNCT .
4.2.3 PRON 4.2.3
Soit VERB être sub_pre
E NOUN e
est VERB être ind_pre
C NOUN c
- ADJ -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
u PROPN u
, PUNCT ,
v X v
et CCONJ et
w NOUN w
trois NUM trois
endomorphismes NOUN endomorphisme
de ADP de
E NOUN e
qui PRON qui
vérifient VERB vérifier ind_pre
: PUNCT :
Démontrer VERB démontrer inf
que SCONJ que
u NOUN u
et CCONJ et
v NOUN v
possèdent VERB posséder ind_pre sub_pre
au ADP à
moins ADV moins
rang(w PROPN rang(w
) PUNCT )
valeurs NOUN valeur
propres ADJ propre
communes NOUN commune
( PUNCT (
en ADP en
comptant VERB compter par_pre
les DET le
multiplicités VERB multipliciter
) PUNCT )
. PUNCT .
4.2.4 NUM 4.2.4
Soit VERB être sub_pre
E NOUN e
un DET un
C NOUN c
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
soit VERB être sub_pre
u PRON u
et CCONJ et
v NOUN v
deux NUM deux
endomorphismes NOUN endomorphisme
de ADP de
E NOUN e
tels ADJ tel
que SCONJ que
u DET u
v NOUN v
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
u NOUN u
et CCONJ et
v NOUN v
sont VERB être ind_pre
co-trigonalisables VERB co-trigonalisabler
. PUNCT .
Applications NOUN application
de ADP de
la DET le
réduction NOUN réduction
Wxmaxima ADJ wxmaxima
Python PRON python
, PUNCT ,
Systèmes NOUN système
linéaires ADJ linéaire
récurrents ADJ récurrent
à ADP à
coefficients NOUN coefficient
constants ADJ constant
On PRON on
appelle VERB appeler ind_pre
système NOUN système
linéaire ADJ linéaire
récurrent VERB récurrer
à ADP à
coefficients NOUN coefficient
constants ADJ constant
tout DET tout
ensemble NOUN ensemble
d' ADP de
équations NOUN équation
récurrentes ADJ récurrent
qui PRON qui
peut VERB pouvoir ind_pre
se PRON se
mettre VERB mettre inf
sous ADP sous
la DET le
forme NOUN forme
: PUNCT :
X0 PRON x0
s' PRON se
appelle VERB appeler ind_pre
la DET le
condition NOUN condition
initiale ADJ initial
et CCONJ et
Bn NOUN bn
le DET le
second ADJ second
membre NOUN membre
. PUNCT .
Le DET le
système NOUN système
: PUNCT :
s' PRON se
appelle VERB appeler ind_pre
le DET le
système NOUN système
homogène ADJ homogène
associé VERB associer par_pas
. PUNCT .
La DET le
résolution NOUN résolution
passe VERB passer ind_pre
par ADP par
: PUNCT :
1 NUM 1
. PUNCT .
La DET le
résolution NOUN résolution
du ADP de
système NOUN système
homogène ADJ homogène
associé VERB associer par_pas
: PUNCT :
2 NUM 2
. PUNCT .
La DET le
recherche NOUN recherche
d' ADP de
une DET un
solution NOUN solution
particulière ADJ particulier
, PUNCT ,
soit VERB être sub_pre
évidente ADJ évident
, PUNCT ,
soit VERB être sub_pre
par ADP par
variation NOUN variation
de ADP de
la DET le
constante NOUN constante
a VERB avoir ind_pre
: PUNCT :
Nous PRON nous
sommes VERB être ind_pre
donc ADV donc
ramenés VERB ramener par_pas pas_cop
au ADP à
calcul NOUN calcul
de ADP de
An NOUN an
. PUNCT .
a. VERB avoir ind_pre
Cette DET ce
méthode NOUN méthode
ne ADV ne
fonctionne VERB fonctionner ind_pre
que SCONJ que
lorsque SCONJ lorsque
A NOUN a
est VERB être ind_pre
inversible ADJ inversible
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
utiliser VERB utiliser inf
la DET le
formule NOUN formule
du ADP de
binôme NOUN binôme
de ADP de
Newton PROPN Newton
, PUNCT ,
notamment ADV notamment
lorsque SCONJ lorsque
A NOUN a
est VERB être ind_pre
somme NOUN somme
d' ADP de
une DET un
matrice NOUN matrice
d' ADP de
homothétie NOUN homothétie
.In PROPN .In
et CCONJ et
d' ADP de
une DET un
matrice NOUN matrice
nilpotente ADJ nilpotent
N ADJ n
( PUNCT (
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
p NOUN p
N NOUN n
tel ADJ tel
que SCONJ que
N NOUN n
p NOUN p
0n NOUN 0n
) PUNCT )
: PUNCT :
On PRON on
a VERB avoir ind_pre
ainsi ADV ainsi
: PUNCT :
Lorsque SCONJ lorsque
la DET le
matrice NOUN matrice
A NOUN a
est VERB être ind_pre
diagonalisable ADJ diagonalisable
, PUNCT ,
il PRON il
suffit VERB suffire ind_pre
de ADP de
la DET le
diagonaliser PROPN diagonaliser
, PUNCT ,
car CCONJ car
si SCONJ si
A VERB avoir ind_pre
P NOUN p
Diag(1 ADJ diag(1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
p NOUN p
) PUNCT )
P NOUN p
1 NUM 1
, PUNCT ,
Par ADP par
exemple NOUN exemple
si SCONJ si
: PUNCT :
alors ADV alors
A NOUN a
est VERB être ind_pre
diagonalisable ADJ diagonalisable
et CCONJ et
on PRON on
trouve VERB trouver ind_pre
: PUNCT :
Dans ADP dans
le DET le
cas NOUN cas
où PRON où
A VERB avoir ind_pre
est VERB être ind_pre
trigonalisable ADJ trigonalisable
( PUNCT (
ce PRON ce
qu' PRON qu'
on PRON on
peut VERB pouvoir ind_pre
toujours ADV toujours
supposer VERB supposer inf
en ADP en
se PRON se
plaçant VERB placer par_pre
dans ADP dans
C NOUN c
) PUNCT )
, PUNCT ,
on PRON on
se PRON se
contente VERB contenter ind_pre
de ADP de
trigonaliser VERB trigonaliser
la DET le
matrice NOUN matrice
et CCONJ et
on PRON on
résout VERB résoudre ind_pre
le DET le
système NOUN système
triangulaire ADJ triangulaire
associé VERB associer par_pas
: PUNCT :
ce PRON ce
qui PRON qui
est VERB être ind_pre
facile ADJ facile
car CCONJ car
il PRON il
est VERB être ind_pre
triangulaire ADJ triangulaire
. PUNCT .
Il PRON il
ne ADV ne
est VERB être ind_pre
alors ADV alors
pas ADV pas
utile ADJ utile
de ADP de
calculer VERB calculer inf
la DET le
matrice NOUN matrice
inverse ADJ inverse
de ADP de
la DET le
matrice NOUN matrice
de ADP de
passage NOUN passage
, PUNCT ,
car CCONJ car
on PRON on
a VERB avoir ind_pre
seulement ADV seulement
Xn DET xn
P NOUN p
Yn PROPN Yn
. PUNCT .
Considérons VERB considérer imper
par ADP par
exemple NOUN exemple
: PUNCT :
et CCONJ et
trigonalisons NOUN trigonalison
- PUNCT -
la DET le
avec ADP avec
Wxmaxima PROPN Wxmaxima
. PUNCT .
Lorsque SCONJ lorsque
l' PRON l'
on PRON on
part NOUN part
d' ADP de
une DET un
suite NOUN suite
récurrente ADJ récurrent
multiple ADJ multiple
( PUNCT (
les DET le
coefficients NOUN coefficient
étant VERB être par_pre
constants ADJ constant
) PUNCT )
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
vectorialiser VERB vectorialiser
et CCONJ et
la PRON le
considérer VERB considérer inf
comme ADP comme
un DET un
système NOUN système
récurrent ADJ récurrent
. PUNCT .
La DET le
recherche NOUN recherche
des ADP de
racines NOUN racine
de ADP de
l' DET le
équation NOUN équation
caractéristique ADJ caractéristique
correspond VERB correspondre ind_pre
au ADP à
calcul NOUN calcul
du ADP de
polynôme NOUN polynôme
caractéristique ADJ caractéristique
de ADP de
la DET le
matrice NOUN matrice
du ADP de
système NOUN système
associé VERB associer par_pas
. PUNCT .
La DET le
forme NOUN forme
générale ADJ général
des ADP de
solutions NOUN solution
s' PRON se
en PRON en
déduit NOUN déduit
( PUNCT (
parfois ADV parfois
difficilement ADV difficilement
) PUNCT )
. PUNCT .
Par ADP par
exemple NOUN exemple
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
transformer VERB transformer inf
: PUNCT :
4.3.1 NOUN 4.3.1
Résoudre VERB résoudre inf
le DET le
système NOUN système
récurrent VERB récurrer
: PUNCT :
4.3.2 NOUN 4.3.2
Calculer VERB calculer inf
les DET le
puissances NOUN puissance
de ADP de
A NOUN a
, PUNCT ,
où PRON où
( PUNCT (
a X avoir
) PUNCT )
A VERB avoir ind_pre
est-elle X est-elle
diagonalisable ADJ diagonalisable
? PUNCT ?
( PUNCT (
b NOUN b
) PUNCT )
Calculer VERB calculer inf
An VERB an
, PUNCT ,
pour ADP pour
n AUX n
N. NOUN n.
4.3.4 NOUN 4.3.4
Calculer VERB calculer inf
An VERB an
, PUNCT ,
n NOUN n
N ADJ n
lorsque SCONJ lorsque
: PUNCT :
( PUNCT (
a X avoir
) PUNCT )
A VERB avoir ind_pre
est-elle X est-elle
diagonalisable ADJ diagonalisable
? PUNCT ?
( PUNCT (
b NOUN b
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
A NOUN a
est VERB être ind_pre
semblable ADJ semblable
à ADP à
( PUNCT (
c NOUN c
) PUNCT )
Calculer VERB calculer inf
An VERB an
pour ADP pour
n AUX n
Z. NOUN z.
Systèmes NOUN système
linéaires ADJ linéaire
différentiels ADJ différentiel
à ADP à
coefficients NOUN coefficient
constants ADJ constant
On PRON on
appelle VERB appeler ind_pre
système NOUN système
linéaire ADJ linéaire
différentiel ADJ différentiel
à ADP à
coefficients NOUN coefficient
constants ADJ constant
tout DET tout
système NOUN système
d' ADP de
équations NOUN équation
différentielles ADJ différentiel
qui PRON qui
peut VERB pouvoir ind_pre
se PRON se
mettre VERB mettre inf
sous ADP sous
la DET le
forme NOUN forme
: PUNCT :
avec ADP avec
I NOUN i
un DET un
intervalle NOUN intervalle
de ADP de
R NOUN r
et CCONJ et
où PRON où
X0 VERB x0
X(t0 PROPN X(t0
) PUNCT )
est VERB être ind_pre
la DET le
condition NOUN condition
initiale ADJ initial
à ADP à
l' DET le
instant NOUN instant
t0 VERB t0
I. NOUN i.
La DET le
résolution NOUN résolution
passe VERB passer ind_pre
par ADP par
: PUNCT :
1 NUM 1
. PUNCT .
La DET le
résolution NOUN résolution
du ADP de
système NOUN système
homogène ADJ homogène
associé VERB associer par_pas
: PUNCT :
2 NUM 2
. PUNCT .
La DET le
recherche NOUN recherche
d' ADP de
une DET un
solution NOUN solution
particulière ADJ particulier
( PUNCT (
par ADP par
exemple NOUN exemple
par ADP par
la DET le
méthode NOUN méthode
de ADP de
variation NOUN variation
de ADP de
la DET le
constante NOUN constante
) PUNCT )
. PUNCT .
Lorsque SCONJ lorsque
l' PRON l'
on PRON on
part NOUN part
d' ADP de
une DET un
équation NOUN équation
différentielle ADJ différentiel
linéaire ADJ linéaire
d' ADP de
ordre NOUN ordre
p NOUN p
, PUNCT ,
à ADP à
coefficients NOUN coefficient
constants ADJ constant
de ADP de
la DET le
forme NOUN forme
: PUNCT :
on PRON on
peut VERB pouvoir ind_pre
la PRON le
vectorialiser VERB vectorialiser
, PUNCT ,
pour ADP pour
se PRON se
ramener VERB ramener inf
à ADP à
un DET un
système NOUN système
en ADP en
posant VERB poser par_pre
Par ADP par
exemple NOUN exemple
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
transformer VERB transformer inf
: PUNCT :
Le DET le
cas NOUN cas
où PRON où
la DET le
matrice NOUN matrice
A NOUN a
est VERB être ind_pre
diagonalisable ADJ diagonalisable
est VERB être ind_pre
facile ADJ facile
car CCONJ car
si SCONJ si
A VERB avoir ind_pre
P NOUN p
D NOUN d
P NOUN p
1 NUM 1
avec ADP avec
D NOUN d
Diag(1 NOUN diag(1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
p NOUN p
) PUNCT )
, PUNCT ,
alors ADV alors
En ADP en
posant VERB poser par_pre
Y NOUN y
( PUNCT (
t NOUN t
) PUNCT )
P NOUN p
1 NUM 1
X(t NOUN x(t
) PUNCT )
, PUNCT ,
on PRON on
est VERB être ind_pre
ramené VERB ramener par_pas pas_cop
au ADP à
système NOUN système
différentiel ADJ différentiel
: PUNCT :
qui PRON qui
est VERB être ind_pre
un DET un
système NOUN système
diagonal ADJ diagonal
. PUNCT .
En ADP en
notant VERB noter par_pre
yi ADP yi
les DET le
composantes NOUN composante
de ADP de
Y NOUN y
, PUNCT ,
on PRON on
a VERB avoir ind_pre
donc ADV donc
: PUNCT :
On PRON on
calcule VERB calculer ind_pre
alors ADV alors
X(t NOUN x(t
) PUNCT )
P NOUN p
Y X Y
( PUNCT (
t NOUN t
) PUNCT )
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
on PRON on
a VERB avoir ind_pre
jamais ADV jamais
besoin NOUN besoin
de ADP de
calculer VERB calculer inf
l' DET le
inverse NOUN inverse
de ADP de
P NOUN p
. PUNCT .
Par ADP par
exemple NOUN exemple
, PUNCT ,
en ADP en
reprenant VERB reprendre par_pre
le DET le
système NOUN système
de ADP de
la DET le
remarque NOUN remarque
précédente ADJ précédent
( PUNCT (
obtenu VERB obtenir par_pas
à ADP à
partir VERB partir inf
de ADP de
00 PRON 00
( PUNCT (
t NOUN t
) PUNCT )
( PUNCT (
t NOUN t
) PUNCT )
0 NUM 0
) PUNCT )
, PUNCT ,
on PRON on
a VERB avoir ind_pre
Il PRON il
ne ADV ne
est VERB être ind_pre
pas ADV pas
difficile ADJ difficile
de ADP de
démontrer VERB démontrer inf
que SCONJ que
A NOUN a
est VERB être ind_pre
diagonalisable ADJ diagonalisable
sur ADP sur
C NOUN c
, PUNCT ,
ses DET son
valeurs NOUN valeur
propres ADJ propre
sont VERB être ind_pre
i ADJ i
et CCONJ et
En ADP en
posant VERB poser par_pre
Y X Y
P NOUN p
1 NUM 1
X NOUN x
, PUNCT ,
on PRON on
a VERB avoir ind_pre
le DET le
système NOUN système
donc ADV donc
il PRON il
existe VERB exister ind_pre
( PUNCT (
c1 NOUN c1
, PUNCT ,
c2 PROPN c2
) PUNCT )
C2 NOUN c2
tel ADJ tel
que SCONJ que
: PUNCT :
Si SCONJ si
on PRON on
ajoute VERB ajouter ind_pre
la DET le
condition NOUN condition
initiale ADJ initial
( PUNCT (
qui PRON qui
correspond VERB correspondre ind_pre
à ADP à
( PUNCT (
0 NUM 0
) PUNCT )
1 NUM 1
et CCONJ et
0 NUM 0
( PUNCT (
0 NUM 0
) PUNCT )
0 NUM 0
) PUNCT )
, PUNCT ,
on PRON on
trouve VERB trouver ind_pre
c1 DET c1
c2 PROPN c2
21 NUM 21
donc ADV donc
en ADP en
particulier ADJ particulier
: PUNCT :
exp(i VERB exp(i
t PROPN t
) PUNCT )
exp(i PROPN exp(i
t PROPN t
) PUNCT )
On PRON on
retrouve VERB retrouver ind_pre
donc ADV donc
la DET le
solution NOUN solution
bien ADV bien
connue VERB connaître par_pas
de ADP de
00 PRON 00
( PUNCT (
t NOUN t
) PUNCT )
( PUNCT (
t NOUN t
) PUNCT )
0 NUM 0
, PUNCT ,
( PUNCT (
0 NUM 0
) PUNCT )
1 NUM 1
et CCONJ et
0 NUM 0
( PUNCT (
0 NUM 0
) PUNCT )
0 NUM 0
. PUNCT .
Dans ADP dans
le DET le
cas NOUN cas
général ADJ général
, PUNCT ,
on PRON on
trigonalise VERB trigonalise
A NOUN a
( PUNCT (
ce PRON ce
qui PRON qui
est VERB être ind_pre
toujours ADV toujours
possible ADJ possible
en ADP en
se PRON se
plaçant VERB placer par_pre
dans ADP dans
C NOUN c
) PUNCT )
par ADP par
A ADP à
P NOUN p
T NOUN t
P NOUN p
1 NUM 1
où PRON où
T NOUN t
est VERB être ind_pre
une DET un
matrice NOUN matrice
triangulaire ADJ triangulaire
supérieure ADJ supérieur
. PUNCT .
On PRON on
est VERB être ind_pre
donc ADV donc
ramené VERB ramener par_pas pas_cop
( PUNCT (
par ADP par
la DET le
même ADJ même
démarche NOUN démarche
qu' SCONJ que
à ADP à
l' DET le
exemple NOUN exemple
précédent ADJ précédent
en ADP en
posant VERB poser par_pre
Y X Y
( PUNCT (
t NOUN t
) PUNCT )
P NOUN p
1 NUM 1
X(t NOUN x(t
) PUNCT )
) PUNCT )
à ADP à
un DET un
système NOUN système
de ADP de
la DET le
forme NOUN forme
où PRON où
T NOUN t
est VERB être ind_pre
une DET un
matrice NOUN matrice
triangulaire ADJ triangulaire
supérieure ADJ supérieur
que SCONJ que
l' PRON l'
on PRON on
peut VERB pouvoir ind_pre
résoudre VERB résoudre inf
facilement ADV facilement
et CCONJ et
on PRON on
revient VERB revenir ind_pre
à ADP à
X NOUN x
grâce NOUN grâce
à ADP à
la DET le
relation NOUN relation
X(t ADJ x(t
) PUNCT )
P NOUN p
Y X Y
( PUNCT (
t NOUN t
) PUNCT )
. PUNCT .
4.4.1 NOUN 4.4.1
Résoudre NUM Résoudre
4.4.2 NOUN 4.4.2
Résoudre NUM Résoudre
4.4.3 VERB 4.4.3
Résoudre VERB résoudre inf
le DET le
système NOUN système
différentiel ADJ différentiel
: PUNCT :
4.4.4 NUM 4.4.4
Soit VERB être sub_pre
A ADP à
M3 PROPN M3
( PUNCT (
R NOUN r
) PUNCT )
non ADV non
inversible ADJ inversible
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
les DET le
solutions NOUN solution
de ADP de
X NOUN x
0 NUM 0
A NOUN a
X NOUN x
sont VERB être ind_pre
des DET un
courbes NOUN courbe
planes ADJ plan
. PUNCT .
4.4.5 PROPN 4.4.5
Résoudre VERB résoudre inf
le DET le
système NOUN système
différentiel ADJ différentiel
4.4.6 NUM 4.4.6
Déterminer VERB déterminer inf
les PRON le
a VERB avoir ind_pre
R NOUN r
tels ADJ tel
que SCONJ que
le DET le
système NOUN système
admette VERB admettre sub_pre
au ADP à
moins ADV moins
une DET un
solution NOUN solution
non ADV non
nulle ADJ nul
bornée VERB borner par_pas
au ADP à
voisinage NOUN voisinage
de ADP de
. PUNCT .
4.4.7 NUM 4.4.7
Quelle ADJ quell
est VERB être ind_pre
la DET le
nature NOUN nature
des ADP de
courbes NOUN courbe
intégrales ADJ intégral
de ADP de
X NOUN x
0 NUM 0
A NOUN a
X NOUN x
avec ADP avec
: PUNCT :
Espaces NOUN espace
stables ADJ stable
La DET le
recherche NOUN recherche
des ADP de
espaces NOUN espace
stables ADJ stable
par ADP par
un DET un
endomorphisme NOUN endomorphisme
u ADP u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
d' ADP de
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
en ADP en
dimension NOUN dimension
finie VERB finir par_pas
repose VERB reposer ind_pre
sur ADP sur
quelques DET quelque
résultats NOUN résultat
: PUNCT :
1 NUM 1
. PUNCT .
Si SCONJ si
u AUX u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
et CCONJ et
E1 NOUN e1
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
stable ADJ stable
par ADP par
u NOUN u
, PUNCT ,
alors ADV alors
: PUNCT :
( PUNCT (
voir VERB voir inf
la DET le
propriété NOUN propriété
4.6 NUM 4.6
, PUNCT ,
page NOUN page
203 NUM 203
) PUNCT )
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
E1 PRON e1
a VERB avoir ind_pre
une DET un
base NOUN base
constituée VERB constituer par_pas
de ADP de
vecteurs NOUN vecteur
propres ADJ propre
de ADP de
u. VERB u.
2 NUM 2
. PUNCT .
Si SCONJ si
u PROPN u
est VERB être ind_pre
trigonalisable ADJ trigonalisable
, PUNCT ,
alors ADV alors
il PRON il
admet VERB admettre ind_pre
des ADP de
espaces NOUN espace
stables ADJ stable
de ADP de
toute DET tout
dimension NOUN dimension
( PUNCT (
donné VERB donner par_pas
par ADP par
le DET le
drapeau NOUN drapeau
) PUNCT )
et CCONJ et
de ADP de
plus ADV plus
, PUNCT ,
si SCONJ si
E1 PRON e1
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
stable ADJ stable
par ADP par
u NOUN u
, PUNCT ,
alors ADV alors
: PUNCT :
3 NUM 3
. PUNCT .
Si SCONJ si
il PRON il
existe VERB exister ind_pre
un DET un
hyperplan NOUN hyperplan
H NOUN heure
de ADP de
E NOUN e
stable ADJ stable
par ADP par
u NOUN u
, PUNCT ,
alors ADV alors
u PRON u
admet VERB admettre ind_pre
un DET un
vecteur NOUN vecteur
propre ADJ propre
. PUNCT .
En ADP en
effet NOUN effet
, PUNCT ,
soit VERB être sub_pre
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en1 PROPN en1
) PUNCT )
une DET un
base NOUN base
de ADP de
H NOUN heure
( PUNCT (
n NOUN n
dim ADP dim
E NOUN e
) PUNCT )
que SCONJ que
l' PRON l'
on PRON on
complète ADJ complet
en ADP en
une DET un
base NOUN base
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en NOUN en
) PUNCT )
de ADP de
E. PROPN E.
Par ADP par
projection NOUN projection
, PUNCT ,
il PRON il
existe VERB exister ind_pre
un DET un
unique ADJ unique
K NOUN k
tel ADJ tel
que SCONJ que
u(en AUX u(en
) PUNCT )
.en PROPN .en
H. PROPN H.
Alors ADV alors
pour ADP pour
tout ADV tout
x NOUN x
E NOUN e
, PUNCT ,
u(x PROPN u(x
) PUNCT )
.x NOUN .
H NOUN heure
( PUNCT (
vrai NOUN vrai
sur ADP sur
Vect(en PROPN Vect(en
) PUNCT )
et CCONJ et
aussi ADV aussi
sur ADP sur
H NOUN heure
car CCONJ car
il PRON il
est VERB être ind_pre
stable ADJ stable
par ADP par
u NOUN u
) PUNCT )
donc ADV donc
Im(u VERB im(u
. PUNCT .
ide NOUN ide
) PUNCT )
H. PROPN H.
I ADJ i
Ces DET ce
résultats NOUN résultat
suffisent VERB suffire ind_pre
en ADP en
général NOUN général
lorsque SCONJ lorsque
l' PRON l'
on PRON on
est VERB être ind_pre
en ADP en
dimension NOUN dimension
3 NUM 3
, PUNCT ,
car CCONJ car
il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
que SCONJ que
les DET le
droites NOUN droite
dirigées VERB diriger par_pas
par ADP par
un DET un
vecteur NOUN vecteur
propre ADJ propre
et CCONJ et
les DET le
hyperplans NOUN hyperplan
qui PRON qui
peuvent VERB pouvoir ind_pre
être VERB être inf
stables ADJ stable
( PUNCT (
avec ADP avec
en ADP en
plus ADV plus
, PUNCT ,
bien ADV bien
évidemment ADV évidemment
, PUNCT ,
0E ADP 0e
Soit VERB être sub_pre
la DET le
matrice NOUN matrice
a VERB avoir ind_pre
: PUNCT :
Le DET le
polynôme NOUN polynôme
caractéristique ADJ caractéristique
est VERB être ind_pre
bien ADV bien
X NOUN x
3 NUM 3
. PUNCT .
Les DET le
espaces NOUN espace
stables ADJ stable
sont VERB être ind_pre
: PUNCT :
( PUNCT (
dimension NOUN dimension
0 NUM 0
) PUNCT )
( PUNCT (
dimension NOUN dimension
1 NUM 1
) PUNCT )
( PUNCT (
dimension NOUN dimension
2 NUM 2
) PUNCT )
( PUNCT (
dimension NOUN dimension
3 NUM 3
) PUNCT )
a. VERB avoir ind_pre
On PRON on
remarquera VERB remarquer fut_sim
que SCONJ que
la DET le
matrice NOUN matrice
est VERB être ind_pre
symétrique ADJ symétrique
et CCONJ et
non ADV non
diagonalisable ADJ diagonalisable
, PUNCT ,
seules ADJ seul
les DET le
matrices NOUN matrice
symétriques ADJ symétrique
réelles ADJ réel
sont VERB être ind_pre
automatiquement ADV automatiquement
diagonalisables ADJ diagonalisable
. PUNCT .
4.5.1 NUM 4.5.1
Soit VERB être sub_pre
u ADP u
un DET un
endomorphisme NOUN endomorphisme
de ADP de
Rn PROPN Rn
( PUNCT (
n NOUN n
2 NUM 2
) PUNCT )
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
u AUX u
laisse VERB laisser ind_pre sub_pre
un DET un
plan NOUN plan
stable ADJ stable
. PUNCT .
4.5.2 NUM 4.5.2
Soit VERB être sub_pre
E NOUN e
Rn PROPN Rn
, PUNCT ,
Sn PROPN Sn
, PUNCT ,
on PRON on
note NOUN note
T ADJ t
l' DET le
application NOUN application
de ADP de
E NOUN e
dans ADP dans
E NOUN e
définie VERB définir par_pas
par ADP par
Démontrer VERB démontrer inf
que SCONJ que
T NOUN t
est VERB être ind_pre
dans ADP dans
GL NOUN gl
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Trouver VERB trouver inf
les DET le
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
F ADJ f
de ADP de
E NOUN e
tels ADJ tel
que SCONJ que
, PUNCT ,
pour ADP pour
tout ADV tout
4.5.3 PROPN 4.5.3
Trouver NOUN trouver
tous ADJ tout
les DET le
sous-espaces NOUN sous-espace
stables ADJ stable
de ADP de
la DET le
matrice NOUN matrice
: PUNCT :
4.5.4 NOUN 4.5.4
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n AUX n
1 NUM 1
et CCONJ et
f AUX f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
telle ADJ tel
que SCONJ que
f NOUN f
n NOUN n
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
et CCONJ et
f ADP f
n1 NOUN n1
6 NUM 6
0L NOUN 0l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
les DET le
sous ADP sous
espaces NOUN espace
stables ADJ stable
par ADP par
f PRON f
sont VERB être ind_pre
les DET le
Ker(f PROPN Ker(f
k NOUN k
) PUNCT )
pour ADP pour
k AUX k
0 NUM 0
, PUNCT ,
n. NOUN n.
4.5.5 NUM 4.5.5
Soit VERB être sub_pre
E NOUN e
un DET un
C NOUN c
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n AUX n
1 NUM 1
et CCONJ et
u PROPN u
L(E NOUN l(e
) PUNCT )
. PUNCT .
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
si SCONJ si
u PROPN u
ne ADV ne
admet VERB admettre ind_pre
qu' SCONJ que
un DET un
nombre NOUN nombre
fini VERB finir par_pas
de ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
stables ADJ stable
alors ADV alors
chaque DET chaque
sous-espace ADJ sous-espac
propre ADJ propre
est VERB être ind_pre
de ADP de
dimension NOUN dimension
1 NUM 1
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Quels ADJ quel
sont VERB être ind_pre
les DET le
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
stables ADJ stable
par ADP par
u ADP u
si SCONJ si
un DET un
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
? PUNCT ?
( PUNCT (
c NOUN c
) PUNCT )
Démontrer VERB démontrer inf
la DET le
réciproque NOUN réciproque
de ADP de
la DET le
question NOUN question
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
. PUNCT .
4.5.6 NUM 4.5.6
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
le DET le
polynôme NOUN polynôme
caractéristique ADJ caractéristique
u NOUN u
de ADP de
u NOUN u
est VERB être ind_pre
scindé VERB scinder par_pas
et CCONJ et
que SCONJ que
tout PRON tout
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
stable ADJ stable
par ADP par
u PRON u
admet VERB admettre ind_pre
un DET un
supplémentaire ADJ supplémentaire
stable ADJ stable
. PUNCT .
4.5.7 PUNCT 4.5.7
On PRON on
considère VERB considérer ind_pre
dans ADP dans
R3 NOUN r3
l' DET le
endomorphisme NOUN endomorphisme
f NOUN f
dont PRON dont
la DET le
matrice NOUN matrice
dans ADP dans
la DET le
base NOUN base
canonique ADJ canonique
est VERB être ind_pre
Déterminer VERB déterminer inf
les DET le
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
de ADP de
R3 PROPN R3
qui PRON qui
sont VERB être ind_pre
stables ADJ stable
par ADP par
f PRON f
. PUNCT .
Chapitre NOUN chapitre else
5 NUM 5
Compléments NOUN complément
sur ADP sur
la DET le
réduction NOUN réduction
des ADP de
endomorphismes ADJ endomorphisme
Polynômes PROPN Polynômes
d' ADP de
endomorphisme NOUN endomorphisme
Polynômes PROPN Polynômes
d' ADP de
endomorphisme NOUN endomorphisme
et CCONJ et
polynômes NOUN polynôme
annulateurs VERB annulateurs
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
soit VERB être sub_pre
ak PROPN ak
X NOUN x
k NOUN k
KX PROPN KX
Si SCONJ si
u PROPN u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
on PRON on
définit VERB définir ind_pre
alors ADV alors
l' DET le
endomorphisme NOUN endomorphisme
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
par ADP par
a VERB avoir ind_pre
: PUNCT :
On PRON on
dit VERB dire ind_pre
que SCONJ que
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
est VERB être ind_pre
un DET un
polynôme NOUN polynôme
d' ADP de
endomorphisme NOUN endomorphisme
en ADP en
u. VERB u.
On PRON on
note VERB noter ind_pre
: PUNCT :
Ku NOUN ku
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
, PUNCT ,
P NOUN p
KX PROPN KX
l' DET le
ensemble NOUN ensemble
des ADP de
polynômes NOUN polynôme
en ADP en
u ADP u
On PRON on
définit VERB définir ind_pre
de ADP de
même ADV même
la DET le
notion NOUN notion
de ADP de
polynôme NOUN polynôme
de ADP de
matrice NOUN matrice
: PUNCT :
Attention PROPN Attention
, PUNCT ,
il PRON il
faut VERB falloir ind_pre
que SCONJ que
la DET le
matrice NOUN matrice
soit VERB être sub_pre
carrée ADJ carré
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
( PUNCT (
en ADP en
dimension NOUN dimension
finie ADJ fini
) PUNCT )
, PUNCT ,
alors ADV alors
: PUNCT :
MatE PROPN MatE else
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
P NOUN p
MatE PROPN MatE else
( PUNCT (
u NOUN u
) PUNCT )
En ADP en
particulier ADJ particulier
, PUNCT ,
Ku NOUN ku
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
et CCONJ et
( PUNCT (
0KX NUM 0KX
) PUNCT )
( PUNCT (
u NOUN u
) PUNCT )
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
De ADP de
plus ADV plus
, PUNCT ,
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
et CCONJ et
Q(u PROPN Q(u
) PUNCT )
commutent VERB commuter ind_pre
car CCONJ car
: PUNCT :
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
soit VERB être sub_pre
P NOUN p
KX PROPN KX
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
On PRON on
dit VERB dire ind_pre
que SCONJ que
P NOUN p
est VERB être ind_pre
un DET un
polynôme NOUN polynôme
annulateur ADJ annulateur
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
et CCONJ et
soit VERB être sub_pre
P NOUN p
KX PROPN KX
un DET un
polynôme NOUN polynôme
annulateur ADJ annulateur
de ADP de
u. NOUN u.
Alors ADV alors
: PUNCT :
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
les DET le
valeurs NOUN valeur
propres ADJ propre
de ADP de
sont VERB être ind_pre
racines VERB raciner ind_pre
de ADP de
tout DET tout
polynôme NOUN polynôme
annulateur ADJ annulateur
de ADP de
P NOUN p
. PUNCT .
Démonstration NOUN démonstration
Soit VERB être sub_pre
Sp(u PROPN Sp(u
) PUNCT )
et CCONJ et
soit VERB être sub_pre
x ADP x
un DET un
vecteur NOUN vecteur
propre ADJ propre
associé VERB associer par_pas
: PUNCT :
u(x NOUN u(
) PUNCT )
.x NOUN .
. PUNCT .
Alors ADV alors
: PUNCT :
( PUNCT (
ce DET ce
calcul NOUN calcul
est VERB être ind_pre
valable ADJ valable
même ADV même
quand SCONJ quand
P NOUN p
ne ADV ne
est VERB être ind_pre
pas ADV pas
annulateur VERB annulateur
de ADP de
u NOUN u
) PUNCT )
. PUNCT .
Puisque SCONJ puisque
P NOUN p
est VERB être ind_pre
annulateur VERB annulateur
de ADP de
u PROPN u
, PUNCT ,
on PRON on
a VERB avoir ind_pre
P NOUN p
( PUNCT (
u)(x X u)(x
) PUNCT )
0E ADP 0e
P NOUN p
( PUNCT (
) PUNCT )
.x ADV .x
. PUNCT .
Mais CCONJ mais
x ADP x
6 NUM 6
0E NUM 0E
( PUNCT (
c' PRON ce
est VERB être ind_pre
un DET un
vecteur NOUN vecteur
propre ADJ propre
) PUNCT )
donc ADV donc
P NOUN p
( PUNCT (
) PUNCT )
0 NUM 0
. PUNCT .
Attention PROPN Attention
, PUNCT ,
la DET le
réciproque PROPN réciproque
est VERB être ind_pre
fausse ADJ faux
: PUNCT :
X NOUN x
( PUNCT (
X NOUN x
1 NUM 1
) PUNCT )
est VERB être ind_pre
un DET un
polynôme NOUN polynôme
annulateur ADJ annulateur
de ADP de
idE NOUN ide
mais CCONJ mais
0 NUM 0
1 NUM 1
. PUNCT .
Ainsi ADV ainsi
, PUNCT ,
connaître VERB connaître inf
les DET le
racines NOUN racine
d' ADP de
un DET un
polynôme NOUN polynôme
annulateur ADJ annulateur
de ADP de
u PRON u
ne ADV ne
donne VERB donner ind_pre
que SCONJ que
des DET un
candidats NOUN candidat
potentiels ADJ potentiel
pour ADP pour
les DET le
valeurs NOUN valeur
propres ADJ propre
de ADP de
u. NOUN u.
Le DET le
lemme NOUN lemme
des ADP de
noyaux NOUN noyau
Théorème NOUN théorème
5.1 NUM 5.1
dit VERB dire par_pas ind_pre
lemme NOUN lemme
des ADP de
noyaux NOUN noyau
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Si SCONJ si
( PUNCT (
P NOUN p
, PUNCT ,
Q NOUN q
) PUNCT )
KX2 VERB kx2
sont VERB être ind_pre
premiers ADJ premier
deux NUM deux
à ADP à
deux PRON deux
, PUNCT ,
alors ADV alors
: PUNCT :
premiers ADJ premier
deux NUM deux
à ADP à
deux NUM deux
Démonstration NOUN démonstration
Puisque SCONJ puisque
P NOUN p
et CCONJ et
Q NOUN q
sont VERB être ind_pre
premiers ADJ premier
deux NUM deux
à ADP à
deux PRON deux
, PUNCT ,
il PRON il
existe VERB exister ind_pre
( PUNCT (
U NOUN u
, PUNCT ,
V NOUN v
) PUNCT )
KX2 VERB kx2
tel ADJ tel
que SCONJ que
( PUNCT (
identité NOUN identité
de ADP de
Bézout NOUN bézout
) PUNCT )
: PUNCT :
Soit VERB être sub_pre
x ADP x
Ker X Ker
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
Ker PROPN Ker
Q(u PROPN Q(u
) PUNCT )
. PUNCT .
D' ADP de
après ADP après
l' DET le
identité NOUN identité
de ADP de
Bézout NOUN bézout
: PUNCT :
donc ADV donc
x ADP x
0E NUM 0E
. PUNCT .
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
Soit VERB être sub_pre
x ADP x
Ker PROPN Ker
( PUNCT (
P NOUN p
Q)(u PROPN Q)(u
) PUNCT )
. PUNCT .
D' ADP de
après ADP après
l' DET le
identité NOUN identité
de ADP de
Bézout NOUN bézout
: PUNCT :
Les DET le
polynômes NOUN polynôme
en ADP en
u PRON u
commutent VERB commuter ind_pre
donc ADV donc
: PUNCT :
donc ADV donc
x1 NOUN x1
Ker PROPN Ker
Q(u PROPN Q(u
) PUNCT )
. PUNCT .
De ADP de
même ADV même
, PUNCT ,
x2 NOUN x2
Ker X Ker
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
donc ADV donc
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
le DET le
résultat NOUN résultat
. PUNCT .
Ce DET ce
résultat NOUN résultat
se PRON se
généralise ADJ généralis
par ADP par
récurrence NOUN récurrence
: PUNCT :
si SCONJ si
P NOUN p
P1 NUM P1
Pk NOUN pk
KX PROPN KX
avec ADP avec
P1 PROPN P1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Pk NOUN pk
des ADP de
polynômes NOUN polynôme
premiers ADJ premier
deux NUM deux
à ADP à
deux PRON deux
, PUNCT ,
alors ADV alors
: PUNCT :
Ker PROPN Ker
Pi X Pi
( PUNCT (
u NOUN u
) PUNCT )
Théorème NOUN théorème
5.2 NUM 5.2
Caractérisation NOUN caractérisation
des ADP de
endomorphismes NOUN endomorphisme
diagonalisables ADJ diagonalisable
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Les DET le
propositions NOUN proposition
suivantes ADJ suivant
sont VERB être ind_pre
équivalentes ADJ équivalent
: PUNCT :
1 NUM 1
. PUNCT .
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
2 NUM 2
. PUNCT .
il PRON il
existe VERB exister ind_pre
un DET un
polynôme NOUN polynôme
annulateur ADJ annulateur
de ADP de
u PRON u
scindé VERB scinder par_pas
à ADP à
racines NOUN racine
simples ADJ simple
a VERB avoir ind_pre
. PUNCT .
a. VERB avoir ind_pre
C' PRON ce
est ADV est
- ADV -
à ADV à
- ADV -
dire ADV dire
P NOUN p
KX PROPN KX
non ADV non
nul ADJ nul
de ADP de
la DET le
forme NOUN forme
P NOUN p
a VERB avoir ind_pre
( PUNCT (
X NOUN x
1 NUM 1
) PUNCT )
( PUNCT (
X NOUN x
k NOUN k
) PUNCT )
où PRON où
a VERB avoir ind_pre
K NOUN k
et CCONJ et
les DET le
j NOUN j
K NOUN k
sont VERB être ind_pre
tous ADJ tout
différents ADJ différent
. PUNCT .
Démonstration NOUN démonstration
Supposons VERB supposer ind_pre
u PRON u
soit VERB être sub_pre
diagonalisable ADJ diagonalisable
et CCONJ et
notons VERB noter ind_pre
Sp(u PROPN Sp(u
) PUNCT )
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
k NOUN k
. PUNCT .
Soit VERB être sub_pre
Le DET le
polynôme NOUN polynôme
P NOUN p
est VERB être ind_pre
scindé VERB scinder par_pas
à ADP à
racines NOUN racine
simples ADJ simple
. PUNCT .
Les DET le
polynômes NOUN polynôme
X NOUN x
i X i
, PUNCT ,
i ADJ i
1 NUM 1
, PUNCT ,
k NOUN k
sont VERB être ind_pre
premiers ADJ premier
deux NUM deux
à ADP à
deux NUM deux
donc ADV donc
d' ADP de
après ADP après
le DET le
lemme NOUN lemme
des ADP de
noyaux NOUN noyau
: PUNCT :
car CCONJ car
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
que SCONJ que
P NOUN p
est VERB être ind_pre
un DET un
polynôme NOUN polynôme
annulateur ADJ annulateur
de ADP de
u NOUN u
scindé VERB scinder par_pas
à ADP à
racines NOUN racine
simples ADJ simple
. PUNCT .
Supposons VERB supposer ind_pre
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
un DET un
polynôme NOUN polynôme
P NOUN p
annulateur ADJ annulateur
de ADP de
u PRON u
scindé VERB scinder par_pas
à ADP à
racines NOUN racine
simples ADJ simple
. PUNCT .
Écrivons VERB écrire imper
- PROPN -
le DET le
sous ADP sous
la DET le
avec ADP avec
a VERB avoir ind_pre
K NOUN k
et CCONJ et
les DET le
i VERB i
KX PROPN KX
tous DET tout
différents ADJ différent
. PUNCT .
Les DET le
polynômes NOUN polynôme
X NOUN x
i X i
, PUNCT ,
i ADJ i
1 NUM 1
, PUNCT ,
k NOUN k
sont VERB être ind_pre
premiers ADJ premier
deux NUM deux
à ADP à
deux NUM deux
donc ADV donc
d' ADP de
après ADP après
le DET le
lemme NOUN lemme
des ADP de
noyaux NOUN noyau
: PUNCT :
Alors ADV alors
I ADJ i
6 NUM 6
( PUNCT (
car CCONJ car
E NOUN e
6 NUM 6
0E NOUN 0e
) PUNCT )
. PUNCT .
Pour ADP pour
tout DET tout
i DET i
I ADJ i
, PUNCT ,
i AUX i
est VERB être ind_pre
une DET un
valeur NOUN valeur
propre ADJ propre
de ADP de
u PROPN u
donc ADV donc
: PUNCT :
donc ADV donc
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
. PUNCT .
Si SCONJ si
F NOUN f
6 NUM 6
0E NUM 0E
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
stable ADJ stable
par ADP par
u ADP u
et CCONJ et
si SCONJ si
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
, PUNCT ,
alors ADV alors
u NOUN u
F NOUN f
est VERB être ind_pre
diagonalisable ADJ diagonalisable
, PUNCT ,
car CCONJ car
tout ADV tout
polynôme NOUN polynôme
scindé VERB scinder par_pas
à ADP à
racines NOUN racine
simples ADJ simple
qui PRON qui
est VERB être ind_pre
annulateur VERB annulateur
de ADP de
u PRON u
est VERB être ind_pre
aussi ADV aussi
annulateur VERB annulateur
de ADP de
u NOUN u
F NOUN f
. PUNCT .
On PRON on
retrouve VERB retrouver ind_pre
ainsi ADV ainsi
le DET le
résultat NOUN résultat
de ADP de
la DET le
propriété NOUN propriété
4.6 NUM 4.6
, PUNCT ,
page NOUN page
203 NUM 203
du ADP de
chapitre NOUN chapitre
4 NUM 4
. PUNCT .
1 NUM 1
. PUNCT .
Toute DET tout
matrice NOUN matrice
A NOUN a
de ADP de
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
telle ADJ tel
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
p NOUN p
N NOUN n
tel ADJ tel
que SCONJ que
Ap PROPN Ap
In X In
est VERB être ind_pre
diagonalisable ADJ diagonalisable
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
les DET le
matrices NOUN matrice
de ADP de
symétries NOUN symétrie
sont VERB être ind_pre
les DET le
seules ADJ seul
qui PRON qui
vérifient VERB vérifier ind_pre
A2 NOUN a2
In X In
. PUNCT .
2 NUM 2
. PUNCT .
Si SCONJ si
une DET un
matrice NOUN matrice
M NOUN m
M2 NOUN m2
n NOUN n
( PUNCT (
K NOUN k
) PUNCT )
de ADP de
la DET le
forme NOUN forme
: PUNCT :
est VERB être ind_pre
diagonalisable ADJ diagonalisable
, PUNCT ,
alors ADV alors
A NOUN a
et CCONJ et
C NOUN c
sont VERB être ind_pre
diagonalisables NOUN diagonalisable
( PUNCT (
la DET le
réciproque NOUN réciproque
est VERB être ind_pre
fausse ADJ faux
) PUNCT )
. PUNCT .
Démonstration NOUN démonstration
1 NUM 1
. PUNCT .
La DET le
polynôme NOUN polynôme
X NOUN x
p NOUN p
1 NUM 1
est VERB être ind_pre
annulateur VERB annulateur
de ADP de
A NOUN a
et CCONJ et
est VERB être ind_pre
scindé VERB scinder par_pas
, PUNCT ,
à ADP à
racines NOUN racine
simples ADJ simple
dans ADP dans
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
. PUNCT .
De ADP de
plus ADV plus
, PUNCT ,
toute DET tout
symétrie NOUN symétrie
( PUNCT (
cas NOUN cas
p NOUN p
2 NUM 2
) PUNCT )
vérifient VERB vérifier ind_pre
par ADP par
définition NOUN définition
A2 NOUN a2
In X In
. PUNCT .
Réciproquement ADV réciproquement
, PUNCT ,
si SCONJ si
A VERB avoir ind_pre
vérifie VERB vérifier ind_pre
A2 PROPN A2
In X In
, PUNCT ,
alors ADV alors
le DET le
polynôme ADJ polynôm
X NOUN x
2 NUM 2
1 DET 1
est VERB être ind_pre
annulateur VERB annulateur
de ADP de
A NOUN a
, PUNCT ,
scindé VERB scinder par_pas
, PUNCT ,
à ADP à
racines NOUN racine
simples ADJ simple
( PUNCT (
dans ADP dans
R PROPN R
ou CCONJ ou
C NOUN c
) PUNCT )
, PUNCT ,
donc ADV donc
A NOUN a
est VERB être ind_pre
semblable ADJ semblable
à ADP à
une DET un
matrice NOUN matrice
diagonale ADJ diagonal
avec ADP avec
des DET un
1 PRON 1
sur ADP sur
la DET le
diagonale NOUN diagonale
. PUNCT .
C' PRON ce
est VERB être ind_pre
une DET un
symétrie NOUN symétrie
par ADP par
rapport NOUN rapport
à ADP à
EA PROPN EA
( PUNCT (
1 NUM 1
) PUNCT )
parallèlement ADV parallèlement
2 NUM 2
. PUNCT .
Si SCONJ si
M NOUN m
est VERB être ind_pre
diagonalisable ADJ diagonalisable
, PUNCT ,
il PRON il
existe VERB exister ind_pre
un DET un
polynôme NOUN polynôme
P NOUN p
non ADV non
nul ADJ nul
, PUNCT ,
scindé VERB scinder par_pas
, PUNCT ,
à ADP à
racines NOUN racine
simples ADJ simple
qui PRON qui
annule VERB annuler ind_pre
M NOUN m
. PUNCT .
Or CCONJ or
donc ADV donc
, PUNCT ,
P NOUN p
( PUNCT (
A NOUN a
) PUNCT )
et CCONJ et
P NOUN p
( PUNCT (
C NOUN c
) PUNCT )
sont VERB être ind_pre
des DET un
matrices NOUN matrice
nulles ADJ nul
, PUNCT ,
donc ADV donc
A ADP à
et CCONJ et
C NOUN c
sont VERB être ind_pre
diagonalisables NOUN diagonalisable
. PUNCT .
Un DET un
contre-exemple NOUN contre-exemple
simple ADJ simple
est VERB être ind_pre
A ADP à
C NOUN c
0 NUM 0
et CCONJ et
B NOUN b
1 NUM 1
. PUNCT .
Polynôme NOUN polynôme
minimal ADJ minimal
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel ADJ vectoriel
, PUNCT ,
soit VERB être sub_pre
P NOUN p
KX PROPN KX
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
L' DET le
idéal ADJ idéal
annulateur NOUN annulateur
de ADP de
u NOUN u
est VERB être ind_pre
défini VERB définir par_pas
par ADP par
: PUNCT :
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Alors ADV alors
: PUNCT :
1 NUM 1
. PUNCT .
Iu VERB iu
est VERB être ind_pre
un DET un
idéal ADJ idéal
de ADP de
KX PROPN KX
2 NUM 2
. PUNCT .
si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
, PUNCT ,
Iu INTJ Iu
6 NUM 6
0KX ADJ 0kx
. PUNCT .
Démonstration NOUN démonstration
1 NUM 1
. PUNCT .
On PRON on
vérifie VERB vérifier ind_pre
immédiatement ADV immédiatement
que SCONJ que
Iu PROPN Iu
est VERB être ind_pre
un DET un
sous-groupe NOUN sous-groupe
de ADP de
KX PROPN KX
et CCONJ et
qu' SCONJ que
il PRON il
est VERB être ind_pre
stable ADJ stable
par ADP par
multiplication NOUN multiplication
par ADP par
un DET un
élément NOUN élément
quelconque ADJ quelconque
de ADP de
KX PROPN KX
. PUNCT .
C' PRON ce
est VERB être ind_pre
donc ADV donc
un DET un
idéal ADJ idéal
de ADP de
KX PROPN KX
. PUNCT .
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
que SCONJ que
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Le DET le
polynôme NOUN polynôme
minimal ADJ minimal
de ADP de
u PRON u
est VERB être ind_pre
l' DET le
unique ADJ unique
polynôme NOUN polynôme
unitaire ADJ unitaire
de ADP de
degré NOUN degré
1 NUM 1
u NOUN u
KX PROPN KX
tel ADJ tel
que SCONJ que
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
si SCONJ si
P NOUN p
KX PROPN KX
est VERB être ind_pre
annulateur VERB annulateur
de ADP de
u PROPN u
, PUNCT ,
alors ADV alors
il PRON il
existe VERB exister ind_pre
Q NOUN q
KX PROPN KX
tel ADJ tel
que SCONJ que
P NOUN p
u X u
Q. X Q.
L' DET le
existence NOUN existence
et CCONJ et
l' DET le
unicité NOUN unicité
du ADP de
polynôme NOUN polynôme
minimal ADJ minimal
sont VERB être ind_pre
assurées VERB assurer par_pas
par ADP par
le DET le
fait NOUN fait
que SCONJ que
KX PROPN KX
est VERB être ind_pre
principal ADJ principal
et CCONJ et
que SCONJ que
Iu PROPN Iu
est VERB être ind_pre
un DET un
idéal ADJ idéal
de ADP de
KX PROPN KX
non ADV non
réduit ADJ réduit
à ADP à
0KX NUM 0KX
( PUNCT (
voir VERB voir inf
le DET le
cours NOUN cours
sur ADP sur
les DET le
anneaux NOUN anneau
) PUNCT )
. PUNCT .
Alors ADV alors
E NOUN e
est VERB être ind_pre
non ADV non
vide ADJ vide
donc ADV donc
admet VERB admettre ind_pre
un DET un
plus ADV plus
petit ADJ petit
élément NOUN élément
d ADP d
N. NOUN n.
On PRON on
pose VERB poser ind_pre
u ADP u
Iu NOUN iu
6 NUM 6
0KX ADJ 0kx
unitaire ADJ unitaire
tel ADJ tel
que SCONJ que
deg NOUN deg
u DET u
d NOUN d
, PUNCT ,
et CCONJ et
d ADP d
6 DET 6
0 NOUN 0
. PUNCT .
Soit VERB être sub_pre
P NOUN p
Iu NOUN iu
. PUNCT .
On PRON on
effectue VERB effectuer ind_pre
la DET le
division NOUN division
euclidienne ADJ euclidien
de ADP de
P NOUN p
par ADP par
u NOUN u
: PUNCT :
Or CCONJ or
Q NOUN q
u NOUN u
Iu NOUN iu
car CCONJ car
Iu PRON iu
est VERB être ind_pre
un DET un
idéal ADJ idéal
de ADP de
KX PROPN KX
donc ADV donc
R NOUN r
P NOUN p
Q NOUN q
u NOUN u
Iu NOUN iu
. PUNCT .
On PRON on
a VERB avoir ind_pre
nécessairement ADV nécessairement
R NOUN r
0KX NOUN 0k
( PUNCT (
sinon ADV sinon
cela PRON cela
contredit VERB contredire par_pas ind_pre
la DET le
définition NOUN définition
de ADP de
d PROPN d
) PUNCT )
donc ADV donc
P NOUN p
Q NOUN q
u NOUN u
, PUNCT ,
autrement ADV autrement
dit VERB dire par_pas ind_pre
Iu DET iu
u NOUN u
KX PROPN KX
( PUNCT (
l' DET le
autre ADJ autre
inclusion NOUN inclusion
est VERB être ind_pre
immédiate ADJ immédiat
puisque SCONJ puisque
u DET u
Iu PROPN Iu
et CCONJ et
que SCONJ que
Iu PROPN Iu
est VERB être ind_pre
un DET un
idéal ADJ idéal
de ADP de
KX PROPN KX
) PUNCT )
. PUNCT .
On PRON on
définit VERB définir ind_pre
de ADP de
même ADV même
pour ADP pour
une DET un
matrice NOUN matrice
carrée ADJ carré
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
la DET le
notion NOUN notion
de ADP de
polynôme NOUN polynôme
annulateur ADJ annulateur
, PUNCT ,
d' ADP de
idéal ADJ idéal
annulateur ADJ annulateur
IA ADJ ia
et CCONJ et
de ADP de
polynôme NOUN polynôme
minimal ADJ minimal
A NOUN a
. PUNCT .
Si SCONJ si
E NOUN e
est VERB être ind_pre
une DET un
base NOUN base
de ADP de
E NOUN e
( PUNCT (
en ADP en
dimension NOUN dimension
finie VERB finir par_pas
) PUNCT )
et CCONJ et
si SCONJ si
A NOUN a
est VERB être ind_pre
la DET le
matrice NOUN matrice
de ADP de
u PROPN u
dans ADP dans
la DET le
base NOUN base
E NOUN e
, PUNCT ,
alors ADV alors
: PUNCT :
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Alors ADV alors
: PUNCT :
En ADP en
particulier ADJ particulier
, PUNCT ,
le DET le
polynôme NOUN polynôme
minimal ADJ minimal
u NOUN u
a VERB avoir ind_pre
les DET le
mêmes ADJ même
racines NOUN racine
que SCONJ que
le DET le
polynôme NOUN polynôme
caractéristique ADJ caractéristique
u PROPN u
. PUNCT .
Démonstration NOUN démonstration
Si SCONJ si
Sp(u PROPN Sp(u
) PUNCT )
, PUNCT ,
alors ADV alors
u NOUN u
( PUNCT (
) PUNCT )
0 NUM 0
car CCONJ car
u NOUN u
est VERB être ind_pre
annulateur VERB annulateur
de ADP de
u PROPN u
( PUNCT (
propriété NOUN propriété
5.1 NUM 5.1
, PUNCT ,
page NOUN page
228 NUM 228
) PUNCT )
. PUNCT .
Supposons VERB supposer ind_pre
que SCONJ que
u PROPN u
( PUNCT (
) PUNCT )
0 NUM 0
. PUNCT .
Il PRON il
existe VERB exister ind_pre
P NOUN p
KX PROPN KX
tel ADJ tel
que SCONJ que
Comme SCONJ comme
u PROPN u
( PUNCT (
u NOUN u
) PUNCT )
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
: PUNCT :
On PRON on
a VERB avoir ind_pre
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
6 NUM 6
0L NOUN 0l
( PUNCT (
E NOUN e
) PUNCT )
car CCONJ car
deg X deg
P NOUN p
deg PROPN deg
u PROPN u
( PUNCT (
sinon ADV sinon
cela PRON cela
contredirait VERB contredire con_pre
le DET le
fait NOUN fait
que SCONJ que
u NOUN u
est VERB être ind_pre
le DET le
polynôme NOUN polynôme
minimal ADJ minimal
de ADP de
u NOUN u
) PUNCT )
. PUNCT .
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
u DET u
. PUNCT .
idE PRON ide
ne ADV ne
est VERB être ind_pre
pas ADV pas
injectif NOUN injectif
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
que SCONJ que
Sp(u PROPN Sp(u
) PUNCT )
. PUNCT .
Proposition NOUN proposition
5.1 NUM 5.1
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Alors ADV alors
: PUNCT :
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
u NOUN u
est VERB être ind_pre
scindé VERB scinder par_pas
à ADP à
racines NOUN racine
simples ADJ simple
Démonstration NOUN démonstration
Si SCONJ si
u AUX u
est VERB être ind_pre
scindé VERB scinder par_pas
à ADP à
racines NOUN racine
simples ADJ simple
, PUNCT ,
comme SCONJ comme
u NOUN u
est VERB être ind_pre
annulateur VERB annulateur
de ADP de
u PROPN u
, PUNCT ,
le DET le
théorème NOUN théorème
5.2 NUM 5.2
, PUNCT ,
page NOUN page
229 NUM 229
démontre VERB démontrer ind_pre
que SCONJ que
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
. PUNCT .
Supposons VERB supposer ind_pre
que SCONJ que
u NOUN u
soit VERB être sub_pre
diagonalisable ADJ diagonalisable
. PUNCT .
Notons VERB noter imper
Sp(u PROPN Sp(u
) PUNCT )
1 NUM 1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
k NOUN k
. PUNCT .
Alors ADV alors
: PUNCT :
est VERB être ind_pre
scindé VERB scinder par_pas
à ADP à
racines NOUN racine
simples ADJ simple
et CCONJ et
est VERB être ind_pre
annulateur VERB annulateur
de ADP de
u PROPN u
car CCONJ car
il PRON il
existe VERB exister ind_pre
une DET un
base NOUN base
une DET un
base NOUN base
E NOUN e
de ADP de
E PROPN E
constituée VERB constituer par_pas
de ADP de
vecteurs NOUN vecteur
propres ADJ propre
de ADP de
u PROPN u
donc ADV donc
pour ADP pour
tout ADV tout
e NUM e
E NOUN e
, PUNCT ,
P NOUN p
( PUNCT (
u)(e NOUN u)(e
) PUNCT )
0E NUM 0E
( PUNCT (
car CCONJ car
e NOUN e
est VERB être ind_pre
associé VERB associer par_pas
à ADP à
une DET un
valeur NOUN valeur
propre ADJ propre
i ADJ i
) PUNCT )
d' ADP de
où PRON où
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
u NOUN u
est VERB être ind_pre
scindé VERB scinder par_pas
à ADP à
racines NOUN racine
simples ADJ simple
car CCONJ car
il PRON il
divise VERB diviser ind_pre sub_pre
P NOUN p
qui PRON qui
est VERB être ind_pre
lui-même PRON lui-même
scindé VERB scinder par_pas
à ADP à
racines NOUN racine
simples ADJ simple
. PUNCT .
Théorème NOUN théorème
de ADP de
Cayley PROPN Cayley
- PROPN -
Hamilton PROPN Hamilton
Soit VERB être sub_pre
P NOUN p
un DET un
polynôme NOUN polynôme
unitaire ADJ unitaire
: PUNCT :
ak PROPN ak
X NOUN x
k NOUN k
X NOUN x
p NOUN p
KX PROPN KX
La DET le
matrice NOUN matrice
compagnon NOUN compagnon
du ADP de
polynôme NOUN polynôme
P NOUN p
est VERB être ind_pre
définie VERB définir par_pas
par ADP par
: PUNCT :
Soit VERB être sub_pre
P NOUN p
KX PROPN KX
un DET un
polynôme NOUN polynôme
unitaire ADJ unitaire
. PUNCT .
Alors ADV alors
: PUNCT :
Démonstration NOUN démonstration
Reprenons VERB reprendre ind_pre
les DET le
notations NOUN notation
de ADP de
la DET le
définition NOUN définition
5.5 NUM 5.5
, PUNCT ,
page NOUN page
précédente ADJ précédent
et CCONJ et
effectuons VERB effectuer ind_pre
l' DET le
opération NOUN opération
élémentaire ADJ élémentaire
: PUNCT :
de ADP de
sorte NOUN sorte
que SCONJ que
( PUNCT (
on PRON on
développe VERB développer ind_pre sub_pre
ensuite ADV ensuite
selon ADP selon
la DET le
première ADJ premier
ligne NOUN ligne
et CCONJ et
on PRON on
reconnaît VERB reconnaître ind_pre
le DET le
déterminant NOUN déterminant
d' ADP de
une DET un
matrice NOUN matrice
triangulaire ADJ triangulaire
) PUNCT )
: PUNCT :
Théorème NOUN théorème
5.3 NUM 5.3
Cayley PROPN Cayley
- PROPN -
Hamilton PROPN Hamilton
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Alors ADV alors
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
le DET le
polynôme NOUN polynôme
caractéristique ADJ caractéristique
u NOUN u
de ADP de
u NOUN u
est VERB être ind_pre
annulateur VERB annulateur
de ADP de
u. VERB u.
Démonstration NOUN démonstration
Soit VERB être sub_pre
x ADP x
E NOUN e
, PUNCT ,
x ADP x
6 NUM 6
0E NUM 0E
( PUNCT (
possible ADJ possible
car CCONJ car
n AUX n
dim ADP dim
E NOUN e
1 NUM 1
) PUNCT )
. PUNCT .
Il PRON il
existe VERB exister ind_pre
un DET un
plus ADV plus
petit ADJ petit
entier ADJ entier
p NOUN p
1 NUM 1
tel ADJ tel
que SCONJ que
la DET le
famille NOUN famille
( PUNCT (
x NOUN x
, PUNCT ,
u(x PRON u(x
) PUNCT )
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
up X up
( PUNCT (
x NOUN x
) PUNCT )
) PUNCT )
soit VERB être sub_pre
liée VERB lier par_pas sub_pas
, PUNCT ,
donc ADV donc
la DET le
famille NOUN famille
( PUNCT (
x NOUN x
, PUNCT ,
u(x PRON u(x
) PUNCT )
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
up1 PRON up1
( PUNCT (
x NOUN x
) PUNCT )
) PUNCT )
est VERB être ind_pre
libre ADJ libre
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
il PRON il
existe VERB exister ind_pre
ak X ak
X NOUN x
k NOUN k
KX PROPN KX
en ADP en
reconnaissant VERB reconnaître par_pre
la DET le
matrice NOUN matrice
compagnon NOUN compagnon
C(P ADJ c(p
) PUNCT )
de ADP de
P PROPN P
( PUNCT (
qui PRON qui
est VERB être ind_pre
unitaire ADJ unitaire
) PUNCT )
. PUNCT .
On PRON on
a VERB avoir ind_pre
alors ADV alors
d' ADP de
après ADP après
la DET le
propriété NOUN propriété
5.4 NUM 5.4
, PUNCT ,
page NOUN page
ci NOUN ci
- NOUN -
contre NOUN contre
: PUNCT :
d' ADP de
où PRON où
, PUNCT ,
puisque SCONJ puisque
P NOUN p
( PUNCT (
u)(x DET u)(x
) PUNCT )
0E NUM 0E
: PUNCT :
Puisque SCONJ puisque
ceci PRON ceci
est VERB être ind_pre
vrai ADJ vrai
pour ADP pour
tout ADV tout
x NOUN x
E NOUN e
( PUNCT (
c' PRON ce
est VERB être ind_pre
aussi ADV aussi
vrai ADJ vrai
pour ADP pour
x NOUN x
0E NUM 0E
) PUNCT )
, PUNCT ,
on PRON on
a VERB avoir ind_pre
u X u
( PUNCT (
u NOUN u
) PUNCT )
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Le DET le
théorème NOUN théorème
de ADP de
Cayley PROPN Cayley
- PROPN -
Hamilton PROPN Hamilton
peut VERB pouvoir ind_pre
se PRON se
reformuler VERB reformuler inf
ainsi ADV ainsi
: PUNCT :
le DET le
polynôme NOUN polynôme
minimal ADJ minimal
u NOUN u
divise VERB diviser ind_pre
le DET le
polynôme NOUN polynôme
caractéristique ADJ caractéristique
u PROPN u
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
puisque SCONJ puisque
deg X deg
u DET u
dim ADP dim
E NOUN e
et CCONJ et
u NOUN u
6 NUM 6
0KX ADJ 0kx
, PUNCT ,
on PRON on
a VERB avoir ind_pre
: PUNCT :
1 NUM 1
deg X deg
u DET u
dim ADP dim
E NOUN e
On PRON on
peut VERB pouvoir ind_pre
également ADV également
démontrer VERB démontrer inf
ce DET ce
théorème NOUN théorème
sans ADP sans
passer VERB passer inf
par ADP par
la DET le
notion NOUN notion
de ADP de
matrice NOUN matrice
compagnon NOUN compagnon
, PUNCT ,
en ADP en
le DET le
démontrant VERB démontrer par_pre
d' ADP de
abord ADV abord
dans ADP dans
le DET le
cas NOUN cas
d' ADP de
une DET un
matrice NOUN matrice
trigonalisable ADJ trigonalisable
( PUNCT (
en ADP en
utilisant VERB utiliser par_pre
notamment ADV notamment
le DET le
fait NOUN fait
que SCONJ que
dans ADP dans
ce DET ce
cas NOUN cas
son DET son
polynôme NOUN polynôme
caractéristique ADJ caractéristique
est VERB être ind_pre
scindé VERB scinder par_pas
) PUNCT )
. PUNCT .
Mais CCONJ mais
on PRON on
peut VERB pouvoir ind_pre
toujours ADV toujours
s' PRON se
y PRON y
ramener VERB ramener inf
en ADP en
se PRON se
plaçant VERB placer par_pre
dans ADP dans
le DET le
corps NOUN corps
des ADP de
racines NOUN racine
de ADP de
A ADP à
u NOUN u
avec ADP avec
A ADP à
la DET le
matrice NOUN matrice
de ADP de
u PROPN u
dans ADP dans
une DET un
base NOUN base
de ADP de
E NOUN e
( PUNCT (
dans ADP dans
le DET le
cas NOUN cas
où PRON où
K NOUN k
R NOUN r
, PUNCT ,
cela PRON cela
revient VERB revenir ind_pre
à ADP à
considérer VERB considérer inf
A ADP à
comme ADP comme
une DET un
matrice NOUN matrice
à ADP à
coefficients NOUN coefficient
dans ADP dans
C NOUN c
) PUNCT )
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
également ADV également
, PUNCT ,
dans ADP dans
le DET le
cas NOUN cas
K NOUN k
R NOUN r
ou CCONJ ou
C NOUN c
utiliser VERB utiliser inf
un DET un
argument NOUN argument
topologique ADJ topologique
( PUNCT (
voir VERB voir inf
la DET le
partie NOUN partie
suivante ADJ suivant
) PUNCT )
. PUNCT .
Théorème NOUN théorème
5.4 NUM 5.4
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Les DET le
propositions NOUN proposition
suivantes ADJ suivant
sont VERB être ind_pre
équivalentes ADJ équivalent
: PUNCT :
1 NUM 1
. PUNCT .
u NOUN u
est VERB être ind_pre
trigonalisable ADJ trigonalisable
2 NUM 2
. PUNCT .
il PRON il
existe VERB exister ind_pre
un DET un
polynôme NOUN polynôme
annulateur ADJ annulateur
de ADP de
u PRON u
scindé VERB scinder par_pas
3 NUM 3
. PUNCT .
u NOUN u
est VERB être ind_pre
scindé VERB scinder par_pas
4 NUM 4
. PUNCT .
u NOUN u
est VERB être ind_pre
scindé VERB scinder par_pas
. PUNCT .
Retour NOUN retour
sur ADP sur
le DET le
calcul NOUN calcul
de ADP de
puissances NOUN puissance
de ADP de
matrices NOUN matrice
Lorsqu' SCONJ lorsque
on PRON on
connaît VERB connaître ind_pre
un DET un
polynôme NOUN polynôme
annulateur ADJ annulateur
P NOUN p
KX PROPN KX
d' ADP de
une DET un
matrice NOUN matrice
A NOUN a
Mp PROPN Mp
( PUNCT (
K NOUN k
) PUNCT )
, PUNCT ,
pour ADP pour
calculer VERB calculer inf
An NOUN an
on PRON on
peut VERB pouvoir ind_pre
utiliser VERB utiliser inf
la DET le
division NOUN division
euclidienne ADJ euclidien
de ADP de
X NOUN x
n NOUN n
par ADP par
P NOUN p
: PUNCT :
La DET le
matrice NOUN matrice
: PUNCT :
a VERB avoir ind_pre
pour ADP pour
polynôme ADJ polynôm
annulateur ADJ annulateur
( PUNCT (
X NOUN x
2)3 NUM 2)3
donc ADV donc
: PUNCT :
5.1.1 PROPN 5.1.1
Pour ADP pour
les DET le
matrices NOUN matrice
suivantes ADJ suivant
, PUNCT ,
préciser VERB préciser inf
les DET le
polynômes NOUN polynôme
caractéristiques NOUN caractéristique
, PUNCT ,
minimaux ADJ minimal
, PUNCT ,
espaces NOUN espace
propres ADJ propre
et CCONJ et
préciser VERB préciser inf
si SCONJ si
elles PRON lui
sont VERB être ind_pre
diagonalisables NOUN diagonalisable
( PUNCT (
dans ADP dans
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
) PUNCT )
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Dk NOUN dk
( PUNCT (
) PUNCT )
( PUNCT (
matrice NOUN matrice
de ADP de
dilatation NOUN dilatation
) PUNCT )
( PUNCT (
b NOUN b
) PUNCT )
Tk ADV tk
, PUNCT ,
( PUNCT (
) PUNCT )
( PUNCT (
matrice NOUN matrice
de ADP de
transvection NOUN transvection
) PUNCT )
( PUNCT (
c NOUN c
) PUNCT )
P NOUN p
( PUNCT (
matrice NOUN matrice
de ADP de
permutation NOUN permutation
) PUNCT )
. PUNCT .
5.1.2 NOUN 5.1.2
Soit VERB être sub_pre
E NOUN e
l' DET le
ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
2 NUM 2
2 NUM 2
à ADP à
coefficients NOUN coefficient
dans ADP dans
Z NOUN z
de ADP de
déterminant VERB déterminer par_pre
égal ADJ égal
à ADP à
1 PRON 1
. PUNCT .
Quelle ADJ quell
est VERB être ind_pre
la DET le
structure NOUN structure
algébrique ADJ algébrique
de ADP de
E NOUN e
? PUNCT ?
Démontrer VERB démontrer inf
que SCONJ que
si SCONJ si
A VERB avoir ind_pre
E NOUN e
vérifie VERB vérifier ind_pre
Ap DET ap
I2 VERB i2
pour ADP pour
un DET un
p NOUN p
N ADJ n
, PUNCT ,
alors ADV alors
A12 NUM A12
I2 VERB i2
. PUNCT .
5.1.4 NUM 5.1.4
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n AUX n
1 NUM 1
, PUNCT ,
x ADP x
E NOUN e
et CCONJ et
f CCONJ f
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
un DET un
unique ADJ unique
polynôme NOUN polynôme
unitaire ADJ unitaire
P NOUN p
KX PROPN KX
vérifiant VERB vérifier par_pre
: PUNCT :
On PRON on
note NOUN note
mx ADP mx
ce DET ce
polynôme NOUN polynôme
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Soit VERB être sub_pre
mx SYM mx
et CCONJ et
my PROPN my
premiers ADJ premier
deux NUM deux
à ADP à
deux PRON deux
, PUNCT ,
démontrer VERB démontrer inf
que SCONJ que
mxy NOUN mxy
mx PRON mx
my PROPN my
. PUNCT .
( PUNCT (
c NOUN c
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
le DET le
polynôme NOUN polynôme
minimal ADJ minimal
f PUNCT f
de ADP de
f PRON f
vérifie VERB vérifier ind_pre sub_pre
: PUNCT :
iii CCONJ iii
. PUNCT .
Il PRON il
existe VERB exister ind_pre
un DET un
x NOUN x
E NOUN e
tel ADJ tel
que SCONJ que
f DET f
mx X mx
. PUNCT .
5.1.5 PROPN 5.1.5
Soit VERB être sub_pre
E NOUN e
un DET un
C NOUN c
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
donner VERB donner inf
une DET un
condition NOUN condition
nécessaire ADJ nécessaire
et CCONJ et
suffisante ADJ suffisant
pour ADP pour
que SCONJ que
: PUNCT :
u2 PROPN u2
diagonalisable ADJ diagonalisable
u X u
diagonalisable ADJ diagonalisable
Que PRON que
devient VERB devenir ind_pre
ce DET ce
résultat NOUN résultat
lorsque SCONJ lorsque
le DET le
corps NOUN corps
est VERB être ind_pre
R VERB r
? PUNCT ?
5.1.6 NUM 5.1.6
Soit VERB être sub_pre
A ADP à
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
telle ADJ tel
que SCONJ que
A3 DET a3
3 NUM 3
A NOUN a
2 NUM 2
In DET in
0n NOUN 0n
. PUNCT .
A NOUN a
est-elle CCONJ est-elle
diagonalisable ADJ diagonalisable
? PUNCT ?
Calculer VERB calculer inf
Ap PROPN Ap
pour ADP pour
p NOUN p
Z. NOUN z.
Topologie NOUN topologie
sur ADP sur
les DET le
endomorphismes NOUN endomorphisme
Soit VERB être sub_pre
( PUNCT (
E NOUN e
, PUNCT ,
k NOUN k
k NOUN k
) PUNCT )
un DET un
espace NOUN espace
vectoriel VERB vectoriel
normé ADJ normer
a VERB avoir ind_pre
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
munir VERB munir inf
Lc PROPN Lc
( PUNCT (
E NOUN e
) PUNCT )
( PUNCT (
l' DET le
espace NOUN espace
des ADP de
endomorphismes NOUN endomorphisme
continus VERB continus
de ADP de
E NOUN e
) PUNCT )
de ADP de
la DET le
norme NOUN norme
subordonnée ADJ subordonner
donnée VERB donner par_pas
par ADP par
: PUNCT :
On PRON on
a VERB avoir ind_pre
alors ADV alors
: PUNCT :
De ADP de
plus ADV plus
, PUNCT ,
est VERB être ind_pre
une DET un
norme NOUN norme
d' ADP de
algèbre NOUN algèbre
: PUNCT :
Si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
tous ADJ tout
les DET le
endomorphismes NOUN endomorphisme
sont VERB être ind_pre
continues ADJ continu
: PUNCT :
Lc PROPN Lc
( PUNCT (
E NOUN e
) PUNCT )
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
( PUNCT (
c' PRON ce
est VERB être ind_pre
faux ADJ faux
en ADP en
dimension NOUN dimension
infinie ADJ infini
) PUNCT )
. PUNCT .
On PRON on
se PRON se
placera VERB placer fut_sim
dans ADP dans
ce DET ce
cadre NOUN cadre
dans ADP dans
la DET le
suite NOUN suite
. PUNCT .
a. VERB avoir ind_pre
Dans ADP dans
cette DET ce
partie NOUN partie
, PUNCT ,
quand SCONJ quand
on PRON on
parle VERB parler ind_pre
d' ADP de
un DET un
espace NOUN espace
vectoriel VERB vectoriel
normé ADJ normer
( PUNCT (
E NOUN e
, PUNCT ,
k NOUN k
k NOUN k
) PUNCT )
, PUNCT ,
on PRON on
se PRON se
place VERB placer ind_pre
toujours ADV toujours
dans ADP dans
le DET le
corps NOUN corps
K NOUN k
R NOUN r
ou CCONJ ou
C. NOUN c.
Proposition NOUN proposition
5.2 NUM 5.2
Densité NOUN densité
des ADP de
endomorphismes NOUN endomorphisme
inversibles ADJ inversible
et CCONJ et
diagonalisables ADJ diagonalisable
Soit VERB être sub_pre
( PUNCT (
E NOUN e
, PUNCT ,
k NOUN k
k NOUN k
) PUNCT )
un DET un
espace NOUN espace
vectoriel VERB vectoriel
normé ADJ normer
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
. PUNCT .
Alors ADV alors
: PUNCT :
1 NUM 1
. PUNCT .
GL NOUN gl
( PUNCT (
E NOUN e
) PUNCT )
est VERB être ind_pre
un DET un
ouvert NOUN ouvert
dense ADJ dense
dans ADP dans
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
2 NUM 2
. PUNCT .
si SCONJ si
K NOUN k
C NOUN c
, PUNCT ,
l' DET le
ensemble NOUN ensemble
des ADP de
endomorphismes NOUN endomorphisme
de ADP de
E NOUN e
diagonalisables ADJ diagonalisable
est VERB être ind_pre
dense ADJ dense
dans ADP dans
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Démonstration NOUN démonstration
1 NUM 1
. PUNCT .
GL NOUN gl
( PUNCT (
E NOUN e
) PUNCT )
est VERB être ind_pre
un DET un
ouvert NOUN ouvert
de ADP de
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
car CCONJ car
GL NOUN gl
( PUNCT (
E NOUN e
) PUNCT )
det1 PROPN det1
( PUNCT (
K NOUN k
) PUNCT )
avec ADP avec
det PROPN det
: PUNCT :
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
K NOUN k
continue VERB continuer ind_pre
et CCONJ et
K NOUN k
ouvert ADP ouvert
de ADP de
K. PROPN K.
Soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Son DET son
polynôme NOUN polynôme
caractéristique ADJ caractéristique
u NOUN u
ne ADV ne
a VERB avoir ind_pre
qu' SCONJ que
un DET un
nombre NOUN nombre
fini VERB finir par_pas
de ADP de
racines NOUN racine
( PUNCT (
car CCONJ car
deg X deg
u PROPN u
dim ADP dim
E NOUN e
1 NUM 1
) PUNCT )
donc ADV donc
il PRON il
existe VERB exister ind_pre
r ADP r
0 NUM 0
tel ADJ tel
que SCONJ que
u PROPN u
ne ADV ne
s' PRON se
annule VERB annuler ind_pre sub_pre
pas ADV pas
sur ADP sur
B(0 NOUN b(0
, PUNCT ,
r X r
) PUNCT )
0 NUM 0
. PUNCT .
Autrement PROPN Autrement
dit VERB dire par_pas ind_pre
, PUNCT ,
pour ADP pour
tout DET tout
B(0 PROPN B(0
, PUNCT ,
r X r
) PUNCT )
0 NUM 0
, PUNCT ,
u X u
. PUNCT .
idE VERB ide
GL NOUN gl
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Comme SCONJ comme
u PROPN u
. PUNCT .
idE VERB ide
u X u
quand ADV quand
0 NUM 0
, PUNCT ,
u AUX u
est VERB être ind_pre
bien ADV bien
la DET le
limite NOUN limite
d' ADP de
une DET un
suite NOUN suite
d' ADP de
endomorphismes NOUN endomorphisme
inversibles ADJ inversible
, PUNCT ,
donc ADV donc
GL NOUN gl
( PUNCT (
E NOUN e
) PUNCT )
est VERB être ind_pre
dense ADJ dense
dans ADP dans
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
2 NUM 2
. PUNCT .
Puisque SCONJ puisque
K NOUN k
C NOUN c
, PUNCT ,
il PRON il
existe VERB exister ind_pre
une DET un
base NOUN base
E NOUN e
dans ADP dans
laquelle PRON lequel
T NOUN t
MatE PROPN MatE else
( PUNCT (
u NOUN u
) PUNCT )
est VERB être ind_pre
triangulaire ADJ triangulaire
supérieure ADJ supérieur
( PUNCT (
n NOUN n
dim ADP dim
E NOUN e
) PUNCT )
: PUNCT :
si SCONJ si
les DET le
valeurs NOUN valeur
propres ADJ propre
i PRON i
sont VERB être ind_pre
toutes ADJ tout
égales ADJ égal
Alors ADV alors
, PUNCT ,
pour ADP pour
tout DET tout
p NOUN p
N ADJ n
, PUNCT ,
p NOUN p
2 NUM 2
, PUNCT ,
Tp PROPN Tp
est VERB être ind_pre
diagonalisable ADJ diagonalisable
car CCONJ car
elle PRON lui
a VERB avoir ind_pre
n ADV n
valeurs NOUN valeur
propres ADJ propre
distinctes ADJ distinct
par ADP par
construction NOUN construction
et CCONJ et
Tp NOUN tp
T NOUN t
quand SCONJ quand
p NOUN p
, PUNCT ,
donc ADV donc
u PRON u
est VERB être ind_pre
bien ADV bien
la DET le
limite NOUN limite
d' ADP de
une DET un
suite NOUN suite
d' ADP de
endomorphismes NOUN endomorphisme
diagonalisables NOUN diagonalisable
de ADP de
E NOUN e
( PUNCT (
les DET le
up NOUN up
correspondant VERB correspondre par_pre
aux ADP à
matrices NOUN matrice
Tp PROPN Tp
dans ADP dans
la DET le
base NOUN base
E NOUN e
de ADP de
E NOUN e
) PUNCT )
. PUNCT .
Tp NOUN tp
T NOUN t
Diag PROPN Diag
Le DET le
deuxième ADJ deuxième
résultat NOUN résultat
est VERB être ind_pre
faux ADJ faux
sur ADP sur
R NOUN r
, PUNCT ,
par ADP par
exemple NOUN exemple
la DET le
matrice NOUN matrice
: PUNCT :
ne ADV ne
est VERB être ind_pre
pas ADV pas
la DET le
limite NOUN limite
d' ADP de
une DET un
suite NOUN suite
de ADP de
matrices NOUN matrice
de ADP de
M2 NOUN m2
( PUNCT (
R NOUN r
) PUNCT )
diagonalisables NOUN diagonalisable
. PUNCT .
Cependant ADV cependant
, PUNCT ,
la DET le
démonstration NOUN démonstration
ci NOUN ci
- PRON -
dessus PRON dessus
ne ADV ne
utilise VERB utiliser ind_pre
que SCONJ que
le DET le
fait NOUN fait
que SCONJ que
u NOUN u
est VERB être ind_pre
trigonalisable ADJ trigonalisable
donc ADV donc
on PRON on
a VERB avoir
démontré VERB démontrer pas_cop
que SCONJ que
tout DET tout
endomorphisme NOUN endomorphisme
trigonalisable ADJ trigonalisable
est VERB être ind_pre
limite NOUN limite
d' ADP de
une DET un
suite NOUN suite
d' ADP de
endomorphismes NOUN endomorphisme
diagonalisables ADJ diagonalisable
. PUNCT .
Ces DET ce
propriétés NOUN propriété
de ADP de
densité NOUN densité
sont VERB être ind_pre
utiles ADJ utile
pour ADP pour
démontrer VERB démontrer inf
des DET un
résultats NOUN résultat
sur ADP sur
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
: PUNCT :
on PRON on
démontre VERB démontrer ind_pre
le DET le
résultat NOUN résultat
pour ADP pour
les DET le
endomorphismes NOUN endomorphisme
inversibles ADJ inversible
ou CCONJ ou
digonalisables NOUN digonalisable
, PUNCT ,
puis CCONJ puis
on PRON on
étend VERB étendre ind_pre
le DET le
résultat NOUN résultat
par ADP par
densité NOUN densité
( PUNCT (
voir VERB voir inf
les DET le
exercices NOUN exercice
5.2 NUM 5.2
, PUNCT ,
page NOUN page
244 NUM 244
) PUNCT )
. PUNCT .
Soit VERB être sub_pre
( PUNCT (
E NOUN e
, PUNCT ,
k NOUN k
k NOUN k
) PUNCT )
un DET un
espace NOUN espace
vectoriel VERB vectoriel
normé ADJ normer
et CCONJ et
u NOUN u
Lc PROPN Lc
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Alors ADV alors
: PUNCT :
pour ADP pour
toute DET tout
valeur NOUN valeur
propre ADJ propre
de ADP de
u NOUN u
, PUNCT ,
u X u
Démonstration NOUN démonstration
Si SCONJ si
est VERB être ind_pre
une DET un
valeur NOUN valeur
propre ADJ propre
de ADP de
u NOUN u
, PUNCT ,
en ADP en
notant VERB noter par_pre
x ADP x
E NOUN e
0E NUM 0E
un DET un
vecteur NOUN vecteur
propre ADJ propre
associé VERB associer par_pas
, PUNCT ,
on PRON on
a VERB avoir ind_pre
ku(x)k NOUN ku(x)k
u NOUN u
kxk ADP kxk
ku(x)k NOUN ku(x)k
k.xk VERB k.xk
kxk ADP kxk
d' ADP de
où PRON où
u NOUN u
en PRON en
divisant VERB diviser par_pre
par ADP par
kxk PRON kxk
6 PRON 6
0E VERB 0e
. PUNCT .
Soit VERB être sub_pre
A ADP à
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
. PUNCT .
Le DET le
rayon NOUN rayon
spectral NOUN spectral
de ADP de
A NOUN a
est VERB être ind_pre
défini VERB définir par_pas
par ADP par
: PUNCT :
D' ADP de
après ADP après
la DET le
propriété NOUN propriété
précédente ADJ précédent
, PUNCT ,
pour ADP pour
ne ADV ne
importe VERB importer ind_pre
quelle DET quel
norme NOUN norme
d' ADP de
algèbre NOUN algèbre
sur ADP sur
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
, PUNCT ,
on PRON on
a VERB avoir ind_pre
: PUNCT :
Soit VERB être sub_pre
A ADP à
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
et CCONJ et
soit VERB être sub_pre
0 NUM 0
. PUNCT .
Il PRON il
existe VERB exister ind_pre
une DET un
norme NOUN norme
subordonnée ADJ subordonner
A NOUN a
, PUNCT ,
sur ADP sur
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
telle ADJ tel
que SCONJ que
Démonstration NOUN démonstration
On PRON on
trigonalise NOUN trigonalise
A NOUN a
P NOUN p
T NOUN t
P NOUN p
1 NUM 1
avec ADP avec
T NOUN t
ti NOUN ti
, PUNCT ,
j PROPN j
( PUNCT (
i X i
, PUNCT ,
j)1,n2 NOUN j)1,n2
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
triangulaire ADJ triangulaire
supérieure ADJ supérieur
et CCONJ et
P NOUN p
GLn PROPN GLn
( PUNCT (
C NOUN c
) PUNCT )
. PUNCT .
On PRON on
Un DET un
calcul NOUN calcul
démontre VERB démontrer ind_pre
que SCONJ que
: PUNCT :
donc ADV donc
en ADP en
particulier ADJ particulier
: PUNCT :
Posons VERB poser ind_pre
alors ADV alors
: PUNCT :
D' ADP de
après ADP après
ce PRON ce
qui PRON qui
précède VERB précéder ind_pre
: PUNCT :
Par ADP par
conséquent NOUN conséquent
, PUNCT ,
pour ADP pour
tout DET tout
0 NUM 0
, PUNCT ,
si SCONJ si
0 NUM 0
est VERB être ind_pre
assez ADV assez
petit ADJ petit
: PUNCT :
Il PRON il
reste VERB rester ind_pre
alors ADV alors
à ADP à
vérifier VERB vérifier inf
que SCONJ que
A NOUN a
, PUNCT ,
est VERB être ind_pre
une DET un
norme NOUN norme
subordonnée ADJ subordonner
( PUNCT (
ce PRON ce
qui PRON qui
donne VERB donner ind_pre
alors ADV alors
l' DET le
inégalité NOUN inégalité
AA PROPN AA
, PUNCT ,
( PUNCT (
A NOUN a
) PUNCT )
d' ADP de
après ADP après
la DET le
remarque NOUN remarque
5.10 NUM 5.10
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
page NOUN page
) PUNCT )
. PUNCT .
Pour ADP pour
cela PRON cela
, PUNCT ,
on PRON on
démontre VERB démontrer ind_pre
que SCONJ que
X NOUN x
7 NUM 7
k(P NOUN k(p
D NOUN d
) PUNCT )
1 NUM 1
Xk NOUN xk
est VERB être ind_pre
une DET un
norme NOUN norme
sur ADP sur
Mn,1 PROPN Mn,1
( PUNCT (
C NOUN c
) PUNCT )
et CCONJ et
que SCONJ que
N NOUN n
est VERB être ind_pre
sa DET son
norme NOUN norme
subordonnée ADJ subordonner
sur ADP sur
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
( PUNCT (
en ADP en
exercice NOUN exercice
) PUNCT )
. PUNCT .
Dans ADP dans
beaucoup ADV beaucoup
d' ADP de
applications NOUN application
, PUNCT ,
on PRON on
s' PRON se
intéresse VERB intéresser ind_pre
à ADP à
des DET un
suites NOUN suite
récurrentes ADJ récurrent
de ADP de
la DET le
forme NOUN forme
: PUNCT :
par ADP par
exemple NOUN exemple
pour ADP pour
résoudre VERB résoudre inf
de ADP de
manière NOUN manière
approchée ADJ approché
des ADP de
équations NOUN équation
différentielles ADJ différentiel
ou CCONJ ou
des ADP de
équations NOUN équation
aux ADP à
dérivées VERB dériver par_pas
partielles ADJ partiel
. PUNCT .
Il PRON il
est VERB être ind_pre
souvent ADV souvent
crucial ADJ crucial
que SCONJ que
la DET le
suite NOUN suite
( PUNCT (
Uk NOUN uk
) PUNCT )
kN PRON kn
soit VERB être sub_pre
bornée VERB borner par_pas
( PUNCT (
par ADP par
exemple NOUN exemple
pour ADP pour
garantir VERB garantir inf
la DET le
stabilité NOUN stabilité
du ADP de
schéma NOUN schéma
numérique ADJ numérique
considéré VERB considérer par_pas
) PUNCT )
. PUNCT .
Comme SCONJ comme
: PUNCT :
il PRON il
faut VERB falloir ind_pre
que SCONJ que
( PUNCT (
Ak NUM Ak
) PUNCT )
kN PRON kn
soit VERB être sub_pre
borné ADJ borné
. PUNCT .
La DET le
propriété NOUN propriété
précédente ADJ précédent
implique VERB impliquer ind_pre
que SCONJ que
: PUNCT :
( PUNCT (
Ak NUM Ak
) PUNCT )
kN NOUN kn
est VERB être ind_pre
bornée VERB borner par_pas
, PUNCT ,
alors ADV alors
( PUNCT (
A NOUN a
) PUNCT )
1 NUM 1
et CCONJ et
si SCONJ si
( PUNCT (
A NOUN a
) PUNCT )
1 PRON 1
alors ADV alors
( PUNCT (
Ak NUM Ak
) PUNCT )
kN NOUN kn
est VERB être ind_pre
bornée VERB borner par_pas
Ainsi ADV ainsi
, PUNCT ,
le DET le
calcul NOUN calcul
du ADP de
rayon NOUN rayon
spectral ADJ spectral
de ADP de
A NOUN a
( PUNCT (
souvent ADV souvent
calculé VERB calculer par_pas
de ADP de
manière NOUN manière
approchée ADJ approché
dans ADP dans
les DET le
applications NOUN application
) PUNCT )
nous PRON nous
permet VERB permettre ind_pre
de ADP de
démontrer VERB démontrer inf
la DET le
stabilité NOUN stabilité
d' ADP de
une DET un
méthode NOUN méthode
numérique ADJ numérique
. PUNCT .
Soit VERB être sub_pre
( PUNCT (
E NOUN e
, PUNCT ,
k NOUN k
k NOUN k
) PUNCT )
un DET un
espace NOUN espace
vectoriel VERB vectoriel
normé ADJ normer
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
soit VERB être sub_pre
k NOUN k
ak NOUN ak
z NOUN z
kPune VERB kpune
série NOUN série
entière ADJ entier
de ADP de
rayon NOUN rayon
de ADP de
convergence NOUN convergence
R NOUN r
0 NUM 0
, PUNCT ,
. PUNCT .
Pour ADP pour
tout ADV tout
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
telle ADJ tel
que SCONJ que
u DET u
R NOUN r
, PUNCT ,
la DET le
série NOUN série
k NOUN k
an NOUN an
uk NOUN uk
est VERB être ind_pre
convergente VERB convergente
et CCONJ et
sa DET son
somme NOUN somme
définit VERB définir ind_pre
un DET un
endomorphisme NOUN endomorphisme
de ADP de
E. PROPN E.
De ADP de
plus ADV plus
, PUNCT ,
l' DET le
application NOUN application
est VERB être ind_pre
continue VERB continuer ind_pre
sur ADP sur
u NOUN u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
u X u
R. NOUN r.
Démonstration NOUN démonstration
La DET le
série NOUN série
converge NOUN converge
absolument ADV absolument
car CCONJ car
, PUNCT ,
pour ADP pour
tout ADJ tout
k NUM k
N ADJ n
, PUNCT ,
ak PROPN ak
.uk NOUN .uk
ak DET ak
uk CCONJ uk
et CCONJ et
que SCONJ que
k VERB k
ak PRON ak
uk VERB uk
converge NOUN converge
( PUNCT (
on PRON on
est VERB être ind_pre
dans ADP dans
le DET le
disque NOUN disque
de ADP de
convergence NOUN convergence
D(0 PROPN D(0
, PUNCT ,
R NOUN r
) PUNCT )
) PUNCT )
. PUNCT .
Puisque SCONJ puisque
L VERB l
( PUNCT (
E NOUN e
) PUNCT )
est VERB être ind_pre
fermé ADJ fermé
( PUNCT (
car CCONJ car
de ADP de
dimension NOUN dimension
finie ADJ fini
) PUNCT )
, PUNCT ,
la DET le
somme NOUN somme
définit VERB définir ind_pre
bien ADV bien
un DET un
élément NOUN élément
de ADP de
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
k NOUN k
est VERB être ind_pre
normale ADJ normal
sur ADP sur
tous ADJ tout
les DET le
disques NOUN disque
u X u
L' DET le
argument NOUN argument
ci PRON ci
- ADJ -
dessus PRON dessus
démontre VERB démontrer ind_pre
que SCONJ que
la DET le
convergence NOUN convergence
de ADP de
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
u X u
r NOUN r
avec ADP avec
r X r
0 NUM 0
, PUNCT ,
R. PROPN R.
Pour ADP pour
tout ADV tout
k NUM k
N ADJ n
, PUNCT ,
u ADP u
7 NUM 7
ak NOUN ak
.uk NOUN .uk
est VERB être ind_pre
continue VERB continuer ind_pre
, PUNCT ,
donc ADV donc
u ADP u
7 NUM 7
k0 PROPN k0
ak DET ak
.u PROPN .u
est VERB être ind_pre
continu PROPN continu
sur ADP sur
u NOUN u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
u X u
r NOUN r
pour ADP pour
tout ADV tout
r NUM r
0 NUM 0
, PUNCT ,
R NOUN r
, PUNCT ,
donc ADV donc
sur ADP sur
u NOUN u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
u X u
R. NOUN r.
On PRON on
peut VERB pouvoir ind_pre
ainsi ADV ainsi
parler VERB parler inf
d' ADP de
exponentielle NOUN exponentielle
, PUNCT ,
de ADP de
sinus NOUN sinus
, PUNCT ,
de ADP de
logarithmes NOUN logarithme
, PUNCT ,
etc. ADV etc.
d' ADP de
endomorphismes NOUN endomorphisme
ou CCONJ ou
de ADP de
matrices NOUN matrice
. PUNCT .
partielles ADJ partiel
qui PRON qui
sont VERB être ind_pre
des DET un
k0 PROPN k0
ak DET ak
.u PROPN .u
est VERB être ind_pre
un DET un
polynôme NOUN polynôme
en ADP en
u NOUN u
car CCONJ car
c' PRON ce
est VERB être ind_pre
la DET le
limite NOUN limite
de ADP de
la DET le
suite NOUN suite
des DET un
sommes NOUN somme
polynômes ADJ polynôme
en ADP en
u ADJ u
et CCONJ et
Ku NOUN ku
est VERB être ind_pre
fermé VERB fermer par_pas
car CCONJ car
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
k0 NOUN k0
ak PROPN ak
.uk NOUN .uk
commute VERB commuter ind_pre
avec ADP avec
Soit VERB être sub_pre
u ADP u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
tel ADJ tel
que SCONJ que
u DET u
1 NUM 1
. PUNCT .
Alors ADV alors
idE ADJ id
u PRON u
est VERB être ind_pre
inversible ADJ inversible
et CCONJ et
En ADP en
effet NOUN effet
, PUNCT ,
cette DET ce
somme NOUN somme
existe VERB exister ind_pre
d' ADP de
après ADP après
la DET le
propriété NOUN propriété
ci ADV ci
- NUM -
dessus ADJ dessu
et CCONJ et
: PUNCT :
et CCONJ et
de ADP de
même ADV même
: PUNCT :
uk CCONJ uk
( PUNCT (
idE PROPN idE
u VERB u
) PUNCT )
idE INTJ idE
Soit VERB être sub_pre
( PUNCT (
E NOUN e
, PUNCT ,
k NOUN k
k NOUN k
) PUNCT )
un DET un
espace NOUN espace
vectoriel VERB vectoriel
normé ADJ normer
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
L' DET le
exponentielle NOUN exponentielle
de ADP de
u NOUN u
est VERB être ind_pre
défini VERB définir par_pas
exp(u PROPN exp(u
) PUNCT )
eu VERB avoir par_pas
Soit VERB être sub_pre
( PUNCT (
E NOUN e
, PUNCT ,
k NOUN k
k NOUN k
) PUNCT )
un DET un
espace NOUN espace
vectoriel VERB vectoriel
normé ADJ normer
de ADP de
dimension NOUN dimension
finie ADJ fini
et CCONJ et
soit VERB être sub_pre
( PUNCT (
u X u
, PUNCT ,
v NOUN v
) PUNCT )
L NOUN l
( PUNCT (
E)2 NOUN e)2
. PUNCT .
Alors ADV alors
: PUNCT :
3 NUM 3
. PUNCT .
pour ADP pour
tout DET tout
p NOUN p
GL PROPN GL
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
exp(p1 VERB exp(p1
u NOUN u
p NOUN p
) PUNCT )
p1 NOUN p1
exp(u PROPN exp(u
) PUNCT )
p NOUN p
( PUNCT (
en ADP en
particulier ADJ particulier
, PUNCT ,
deux NUM deux
matrices NOUN matrice
semblables ADJ semblable
ont VERB avoir ind_pre
des DET un
exponentielles ADJ exponentiel
semblables ADJ semblable
) PUNCT )
Démonstration NOUN démonstration
1 NUM 1
. PUNCT .
Immédiat PROPN Immédiat
à ADP à
partir VERB partir inf
de ADP de
la DET le
définition NOUN définition
. PUNCT .
2 NUM 2
. PUNCT .
Puisque SCONJ puisque
est VERB être ind_pre
une DET un
norme NOUN norme
d' ADP de
algèbre NOUN algèbre
: PUNCT :
uk CCONJ uk
exp(u PROPN exp(u
) PUNCT )
3 NUM 3
. PUNCT .
C' PRON ce
est VERB être ind_pre
un DET un
produit NOUN produit
de ADP de
Cauchy NOUN cauchy
. PUNCT .
Soit VERB être sub_pre
N NOUN n
N ADJ n
, PUNCT ,
posons NOUN poson
: PUNCT :
Comme SCONJ comme
u PROPN u
et CCONJ et
v NOUN v
commutent VERB commuter ind_pre
: PUNCT :
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
puisque PRON puisque
N ADJ n
exp(u PROPN exp(u
) PUNCT )
exp(v PROPN exp(v
) PUNCT )
exp(u PROPN exp(u
v NOUN v
) PUNCT )
quand ADP quand
N NOUN n
. PUNCT .
4 NUM 4
. PUNCT .
D' ADP de
après ADP après
ce PRON ce
qui PRON qui
précède VERB précéder ind_pre
, PUNCT ,
comme ADP comme
u ADP u
et CCONJ et
u NOUN u
commutent VERB commuter ind_pre
: PUNCT :
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
. PUNCT .
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
en ADP en
passant VERB passer par_pre
à ADP à
la DET le
limite NOUN limite
N ADJ n
. PUNCT .
L' DET le
exponentielle NOUN exponentielle
de ADP de
matrices NOUN matrice
sert VERB servir ind_pre
notamment ADV notamment
pour ADP pour
étudier VERB étudier inf
les DET le
systèmes NOUN système
linéaires ADJ linéaire
différentiels ADJ différentiel
à ADP à
coefficients NOUN coefficient
constants ADJ constant
( PUNCT (
voir VERB voir inf
le DET le
chapitre NOUN chapitre
4 NUM 4
) PUNCT )
: PUNCT :
La DET le
solution NOUN solution
vérifiant VERB vérifier par_pre
la DET le
condition NOUN condition
initiale ADJ initial
X(t0 NOUN x(t0
) PUNCT )
X0 NOUN x0
est VERB être ind_pre
donnée VERB donner par_pas
par ADP par
: PUNCT :
exp(s PROPN exp(s
. PUNCT .
A NOUN a
) PUNCT )
B(s PROPN B(s
) PUNCT )
ds X ds
Nous PRON nous
sommes VERB être ind_pre
donc ADV donc
ramenés VERB ramener par_pas pas_cop
au ADP à
calcul NOUN calcul
de ADP de
exp(t PRON exp(t
. PUNCT .
A NOUN a
) PUNCT )
Pour ADP pour
calculer VERB calculer inf
exp(t PRON exp(t
. PUNCT .
A NOUN a
) PUNCT )
on PRON on
peut VERB pouvoir ind_pre
: PUNCT :
1 NUM 1
. PUNCT .
Calculer VERB calculer inf
An VERB an
puis CCONJ puis
sommer VERB sommer inf
la DET le
série NOUN série
n NOUN n
t NOUN t
n!.A VERB n!.er
( PUNCT (
c' PRON ce
est VERB être ind_pre
rarement ADV rarement
une DET un
méthode NOUN méthode
efficace ADJ efficace
) PUNCT )
. PUNCT .
Si SCONJ si
la DET le
matrice NOUN matrice
A NOUN a
est VERB être ind_pre
diagonalisable ADJ diagonalisable
: PUNCT :
A NOUN a
P NOUN p
Diag(1 ADJ diag(1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
p NOUN p
) PUNCT )
P NOUN p
1 NUM 1
, PUNCT ,
on PRON on
a VERB avoir ind_pre
: PUNCT :
( PUNCT (
voir VERB voir inf
le DET le
code NOUN code
ci-dessous ADV ci-dessous
) PUNCT )
. PUNCT .
3 NUM 3
. PUNCT .
Dans ADP dans
le DET le
cas NOUN cas
général ADJ général
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
utiliser VERB utiliser inf
la DET le
décomposition NOUN décomposition
de ADP de
Dunford PROPN Dunford
( PUNCT (
voir VERB voir inf
la DET le
partie NOUN partie
suivante ADJ suivant
) PUNCT )
. PUNCT .
I X I
Cependant ADV cependant
, PUNCT ,
si SCONJ si
la DET le
matrice NOUN matrice
ne ADV ne
est VERB être ind_pre
pas ADV pas
diagonalisable ADJ diagonalisable
, PUNCT ,
il PRON il
est VERB être ind_pre
souvent ADV souvent
plus ADV plus
efficace ADJ efficace
pour ADP pour
résoudre VERB résoudre inf
un DET un
système NOUN système
linéaire ADJ linéaire
différentielle NOUN différentielle
de ADP de
trigonaliser VERB trigonaliser
la DET le
matrice NOUN matrice
A NOUN a
et CCONJ et
de ADP de
résoudre VERB résoudre inf
un DET un
système NOUN système
différentiel ADJ différentiel
triangulaire ADJ triangulaire
( PUNCT (
voir VERB voir inf
le DET le
chapitre NOUN chapitre
4 NUM 4
) PUNCT )
. PUNCT .
5.2.1 NOUN 5.2.1
Soit VERB être sub_pre
( PUNCT (
E NOUN e
, PUNCT ,
k NOUN k
k NOUN k
) PUNCT )
un DET un
espace NOUN espace
vectoriel VERB vectoriel
normé ADJ normer
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n AUX n
1 NUM 1
. PUNCT .
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
u ADP u
7 NUM 7
u NOUN u
est VERB être ind_pre
continue VERB continuer ind_pre sub_pre
de ADP de
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
dans ADP dans
Kn PROPN Kn
X. NOUN x.
( PUNCT (
b NOUN b
) PUNCT )
En ADP en
déduire VERB déduire inf
par ADP par
un DET un
argument NOUN argument
de ADP de
densité NOUN densité
que SCONJ que
: PUNCT :
( PUNCT (
c NOUN c
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
le DET le
résultat NOUN résultat
est VERB être ind_pre
encore ADV encore
vrai ADJ vrai
dans ADP dans
ne ADV ne
importe VERB importer ind_pre sub_pre
quel DET quel
corps NOUN corps
K NOUN k
et CCONJ et
ne ADV ne
importe VERB importer ind_pre
quel DET quel
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
E NOUN e
( PUNCT (
par ADP par
un DET un
argument NOUN argument
algébrique ADJ algébrique
) PUNCT )
. PUNCT .
5.2.2 NOUN 5.2.2
Démontrer VERB démontrer inf
le DET le
théorème NOUN théorème
de ADP de
Cayley PROPN Cayley
- PROPN -
Hamilton PROPN Hamilton
pour ADP pour
K NOUN k
C NOUN c
par ADP par
un DET un
argument NOUN argument
de ADP de
densité NOUN densité
. PUNCT .
5.2.3 NUM 5.2.3
Soit VERB être sub_pre
( PUNCT (
E NOUN e
, PUNCT ,
k NOUN k
k NOUN k
) PUNCT )
un DET un
espace NOUN espace
vectoriel VERB vectoriel
normé ADJ normer
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n AUX n
1 NUM 1
. PUNCT .
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
l' DET le
intérieur NOUN intérieur
de ADP de
l' DET le
ensemble NOUN ensemble
des ADP de
endomorphismes NOUN endomorphisme
de ADP de
E NOUN e
diagonalisables ADJ diagonalisable
est VERB être ind_pre
l' DET le
ensemble NOUN ensemble
des ADP de
endomorphismes NOUN endomorphisme
de ADP de
E NOUN e
diagonalisables ADJ diagonalisable
avec ADP avec
n NOUN n
valeurs NOUN valeur
propres ADJ propre
distinctes ADJ distinct
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
l' DET le
adhérence NOUN adhérence
des ADP de
endomorphismes NOUN endomorphisme
de ADP de
E NOUN e
diagonalisables ADJ diagonalisable
est VERB être ind_pre
l' DET le
ensemble NOUN ensemble
des ADP de
endomorphismes NOUN endomorphisme
de ADP de
E NOUN e
trigonalisables ADJ trigonalisable
. PUNCT .
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
p NOUN p
A X A
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
, PUNCT ,
rang NOUN rang
A NOUN a
p NOUN p
est VERB être ind_pre
fermé VERB fermer par_pas
dans ADP dans
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Déterminer VERB déterminer inf
l' DET le
adhérence NOUN adhérence
de ADP de
p NOUN p
A X A
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
, PUNCT ,
rang NOUN rang
A NOUN a
p NOUN p
dans ADP dans
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
. PUNCT .
5.2.5 NUM 5.2.5
Soit VERB être sub_pre
( PUNCT (
E NOUN e
, PUNCT ,
k NOUN k
k NOUN k
) PUNCT )
un DET un
espace NOUN espace
vectoriel VERB vectoriel
normé ADJ normer
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
5.2.6 NUM 5.2.6
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
A NOUN a
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
, PUNCT ,
det(exp(A NOUN det(exp(a
) PUNCT )
) PUNCT )
exp(trace(A NOUN exp(trace(a
) PUNCT )
) PUNCT )
Décomposition NOUN décomposition
de ADP de
Dunford PROPN Dunford
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
nilpotent VERB nilpoter
a VERB avoir ind_pre
. PUNCT .
Alors ADV alors
: PUNCT :
u DET u
( PUNCT (
1)dim CCONJ 1)dim
E NOUN e
X NOUN x
dim ADP dim
E NOUN e
a. VERB avoir ind_pre
C' PRON ce
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
p NOUN p
N NOUN n
tel ADJ tel
que SCONJ que
up X up
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Démonstration NOUN démonstration
Par ADP par
récurrence NOUN récurrence
sur ADP sur
n NOUN n
dim ADP dim
E NOUN e
N ADJ n
. PUNCT .
Si SCONJ si
n NOUN n
1 NUM 1
, PUNCT ,
c' PRON ce
est VERB être ind_pre
évident ADJ évident
. PUNCT .
Soit VERB être sub_pre
N ADJ n
, PUNCT ,
on PRON on
suppose VERB supposer ind_pre
que SCONJ que
le DET le
résultat NOUN résultat
est VERB être ind_pre
vrai ADJ vrai
au ADP à
rang NOUN rang
n. NOUN n.
Soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
nilpotent VERB nilpoter
( PUNCT (
avec ADP avec
dim ADP dim
E NOUN e
n NOUN n
1 NUM 1
) PUNCT )
, PUNCT ,
soit VERB être sub_pre
p DET p
N ADJ n
tel ADJ tel
que SCONJ que
up X up
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
On PRON on
a VERB avoir ind_pre
det(u)p VERB det(u)p
det(up NOUN det(up
) PUNCT )
0 NUM 0
donc ADV donc
det(u PROPN det(u
) PUNCT )
0 NUM 0
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
Ker(u PROPN Ker(u
) PUNCT )
6 NUM 6
0E NUM 0E
donc ADV donc
il PRON il
existe VERB exister ind_pre
e1 NUM e1
Ker(u PROPN Ker(u
) PUNCT )
. PUNCT .
On PRON on
complète ADJ complet
en ADP en
une DET un
base NOUN base
E NOUN e
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en1 PROPN en1
) PUNCT )
de ADP de
E. PROPN E.
On PRON on
a VERB avoir ind_pre
Mais CCONJ mais
u AUX u
est VERB être ind_pre
nilpotent VERB nilpoter
: PUNCT :
il PRON il
existe VERB exister ind_pre
p NOUN p
N NOUN n
tel ADJ tel
que SCONJ que
up X up
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
donc ADV donc
donc ADV donc
C NOUN c
p NOUN p
0n ADJ 0n
. PUNCT .
L' DET le
hypothèse NOUN hypothèse
de ADP de
récurrence NOUN récurrence
démontre VERB démontrer ind_pre
que SCONJ que
C NOUN c
( PUNCT (
1)n PROPN 1)n
X NOUN x
n NOUN n
d' ADP de
où PRON où
donc ADV donc
le DET le
résultat NOUN résultat
est VERB être ind_pre
vrai ADJ vrai
au ADP à
rang NOUN rang
n AUX n
1 NUM 1
. PUNCT .
Par ADP par
principe NOUN principe
de ADP de
récurrence NOUN récurrence
, PUNCT ,
le DET le
résultat NOUN résultat
est VERB être ind_pre
vrai ADJ vrai
pour ADP pour
tout DET tout
N ADJ n
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n AUX n
1 NUM 1
et CCONJ et
u NOUN u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Si SCONJ si
le DET le
polynôme NOUN polynôme
caractéristique ADJ caractéristique
u NOUN u
de ADP de
u NOUN u
est VERB être ind_pre
scindé VERB scinder par_pas
: PUNCT :
où PRON où
les DET le
k PROPN k
sont VERB être ind_pre
distincts ADJ distinct
, PUNCT ,
on PRON on
appelle VERB appeler ind_pre
espace NOUN espace
caractéristique ADJ caractéristique
associé VERB associer par_pas
à ADP à
la DET le
valeur NOUN valeur
propre ADJ propre
k NOUN k
: PUNCT :
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
tel ADJ tel
que SCONJ que
u NOUN u
soit VERB être sub_pre
scindé VERB scinder par_pas
: PUNCT :
où PRON où
les DET le
k PROPN k
sont VERB être ind_pre
distincts ADJ distinct
1 NUM 1
. PUNCT .
pour ADP pour
tout ADJ tout
k NOUN k
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
Fu PROPN Fu
( PUNCT (
k NOUN k
) PUNCT )
est VERB être ind_pre
stable ADJ stable
par ADP par
u NOUN u
4 NUM 4
. PUNCT .
pour ADP pour
tout ADJ tout
k NOUN k
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
la DET le
projection NOUN projection
k NOUN k
sur ADP sur
Fu PROPN Fu
( PUNCT (
k NOUN k
) PUNCT )
parallèlement ADV parallèlement
à ADP à
nôme PROPN nôme
en ADP en
u. NOUN u.
Démonstration NOUN démonstration
2 NUM 2
. PUNCT .
C' PRON ce
est VERB être ind_pre
une DET un
conséquence NOUN conséquence
immédiate ADJ immédiat
du ADP de
lemme NOUN lemme
des ADP de
noyaux NOUN noyau
car CCONJ car
les DET le
( PUNCT (
X NOUN x
k NOUN k
) PUNCT )
k NOUN k
sont VERB être ind_pre
premiers ADJ premier
deux NUM deux
à ADP à
deux NUM deux
et CCONJ et
du ADP de
fait NOUN fait
que SCONJ que
Ker PROPN Ker
u PROPN u
( PUNCT (
u NOUN u
) PUNCT )
E NOUN e
( PUNCT (
théorème NOUN théorème
de ADP de
Cayley PROPN Cayley
- PROPN -
Hamilton PROPN Hamilton
) PUNCT )
. PUNCT .
3 NUM 3
. PUNCT .
Soit VERB être sub_pre
k NOUN k
1 NUM 1
, PUNCT ,
p. AUX p.
Notons VERB noter ind_pre
uk CCONJ uk
la DET le
restriction NOUN restriction
de ADP de
u PROPN u
à ADP à
Fu NOUN fu
( PUNCT (
k NOUN k
) PUNCT )
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
uk CCONJ uk
k NOUN k
. PUNCT .
idFu NOUN idfu
( PUNCT (
k NOUN k
) PUNCT )
k NOUN k
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
donc ADV donc
uk CCONJ uk
k NOUN k
. PUNCT .
idFu NOUN idfu
( PUNCT (
k NOUN k
) PUNCT )
est VERB être ind_pre
nilpotent VERB nilpoter
. PUNCT .
Son DET son
polynôme NOUN polynôme
caractéristique ADJ caractéristique
est VERB être ind_pre
( PUNCT (
X)dim ADJ x)dim
Fu PROPN Fu
( PUNCT (
k NOUN k
) PUNCT )
( PUNCT (
propriété NOUN propriété
5.9 NUM 5.9
, PUNCT ,
page NOUN page
précédente ADJ précédent
) PUNCT )
. PUNCT .
Mais CCONJ mais
uk CCONJ uk
divise VERB diviser ind_pre
u PROPN u
, PUNCT ,
donc ADV donc
dim ADP dim
Fu NOUN fu
( PUNCT (
k NOUN k
) PUNCT )
i NOUN i
. PUNCT .
D' ADP de
après ADP après
le DET le
point NOUN point
2 NUM 2
on PRON on
a VERB avoir ind_pre
: PUNCT :
d' ADP de
où PRON où
dim ADP dim
Fu NOUN fu
( PUNCT (
k NOUN k
) PUNCT )
k NOUN k
. PUNCT .
Alors ADV alors
les DET le
Qk NOUN qk
sont VERB être ind_pre
premiers ADJ premier
deux NUM deux
à ADP à
deux PRON deux
, PUNCT ,
donc ADV donc
d' ADP de
après ADP après
l' DET le
identité NOUN identité
de ADP de
Bézout NOUN bézout
, PUNCT ,
il PRON il
existe VERB exister ind_pre
des DET un
polynômes NOUN polynôme
Posons VERB poser imper
, PUNCT ,
pour ADP pour
tout ADV tout
k NOUN k
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
Pk NOUN pk
Uk PROPN Uk
Qk NOUN qk
et CCONJ et
k NOUN k
Pk PROPN Pk
( PUNCT (
u NOUN u
) PUNCT )
. PUNCT .
On PRON on
a VERB avoir ind_pre
: PUNCT :
Pour ADP pour
tout ADV tout
( PUNCT (
i NOUN i
, PUNCT ,
j PROPN j
) PUNCT )
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
i ADP i
6 NUM 6
j NOUN j
, PUNCT ,
Qi VERB qi
Qj PROPN Qj
divise VERB diviser ind_pre
u PROPN u
donc ADV donc
( PUNCT (
Qi VERB qi
Qj PROPN Qj
) PUNCT )
( PUNCT (
u NOUN u
) PUNCT )
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
( PUNCT (
théorème NOUN théorème
de ADP de
CayleyHamilton NOUN cayleyhamilton
) PUNCT )
. PUNCT .
On PRON on
a VERB avoir ind_pre
donc ADV donc
: PUNCT :
donc ADV donc
i PRON i
est VERB être ind_pre
un DET un
projecteur NOUN projecteur
. PUNCT .
On PRON on
conclut VERB conclure ind_pre
en ADP en
démontrant VERB démontrer par_pre
que SCONJ que
Im PUNCT im
i VERB i
Fu PROPN Fu
( PUNCT (
i NOUN i
) PUNCT )
et CCONJ et
Ker PROPN Ker
i ADJ i
( PUNCT (
en ADP en
exercice NOUN exercice
) PUNCT )
. PUNCT .
Si SCONJ si
u NOUN u
est VERB être ind_pre
diagonalisable ADJ diagonalisable
, PUNCT ,
alors ADV alors
pour ADP pour
tout ADV tout
k NOUN k
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
Fu PROPN Fu
( PUNCT (
k NOUN k
) PUNCT )
Eu PROPN Eu
( PUNCT (
k NOUN k
) PUNCT )
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
les DET le
projecteurs NOUN projecteur
sur ADP sur
les DET le
espaces NOUN espace
propres ADJ propre
sont VERB être ind_pre
des DET un
polynômes NOUN polynôme
en ADP en
u. VERB u.
Il PRON il
est VERB être ind_pre
toujours ADV toujours
possible ADJ possible
de ADP de
se PRON se
ramener VERB ramener inf
au ADP à
cas NOUN cas
où PRON où
u NOUN u
est VERB être ind_pre
scindé VERB scinder par_pas
en ADP en
se PRON se
plaçant VERB placer par_pre
dans ADP dans
le DET le
corps NOUN corps
des ADP de
racines NOUN racine
de ADP de
u PROPN u
( PUNCT (
si SCONJ si
K NOUN k
R NOUN r
, PUNCT ,
on PRON on
se PRON se
place VERB placer ind_pre
dans ADP dans
K NOUN k
C NOUN c
) PUNCT )
. PUNCT .
Le DET le
point NOUN point
2 NUM 2
démontre VERB démontrer ind_pre
que SCONJ que
si SCONJ si
u NOUN u
est VERB être ind_pre
scindé VERB scinder par_pas
, PUNCT ,
alors ADV alors
dans ADP dans
une DET un
base NOUN base
E NOUN e
de ADP de
E PROPN E
adaptée VERB adapter par_pas
à ADP à
la DET le
décomposition NOUN décomposition
E NOUN e
Fu PROPN Fu
( PUNCT (
1 NUM 1
) PUNCT )
Fu PROPN Fu
( PUNCT (
p NOUN p
) PUNCT )
, PUNCT ,
la DET le
matrice NOUN matrice
de ADP de
u NOUN u
est VERB être ind_pre
diagonale VERB diagonale
par ADP par
blocs NOUN bloc
: PUNCT :
Théorème NOUN théorème
5.5 NUM 5.5
Décomposition NOUN décomposition
de ADP de
Dunford PROPN Dunford
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
tel ADJ tel
que SCONJ que
u NOUN u
soit VERB être sub_pre
scindé VERB scinder par_pas
. PUNCT .
Il PRON il
existe VERB exister ind_pre
un DET un
unique ADJ unique
couple NOUN couple
( PUNCT (
d NOUN d
, PUNCT ,
n NOUN n
) PUNCT )
L NOUN l
( PUNCT (
E)2 NOUN e)2
tel ADJ tel
que SCONJ que
: PUNCT :
et CCONJ et
qui PRON qui
commutent VERB commuter ind_pre sub_pre
( PUNCT (
d ADP d
n NOUN n
n AUX n
d NOUN d
) PUNCT )
. PUNCT .
avec ADP avec
d X d
diagonalisable NOUN diagonalisable
et CCONJ et
n NOUN n
nilpotent VERB nilpoter
Démonstration NOUN démonstration
On PRON on
reprend VERB reprendre ind_pre
les DET le
notations NOUN notation
de ADP de
la DET le
propriété NOUN propriété
5.10 NUM 5.10
, PUNCT ,
page NOUN page
245 NUM 245
. PUNCT .
Existence NOUN existence
. PUNCT .
D' ADP de
après ADP après
le DET le
point NOUN point
2 NUM 2
, PUNCT ,
il PRON il
suffit VERB suffire ind_pre
de ADP de
définir VERB définir inf
d ADP d
et CCONJ et
n AUX n
sur ADP sur
chacun PRON chacun
des ADP de
Fu PROPN Fu
( PUNCT (
k NOUN k
) PUNCT )
: PUNCT :
Par ADP par
construction NOUN construction
d ADP d
est VERB être ind_pre
diagonalisable ADJ diagonalisable
. PUNCT .
Pour ADP pour
tout ADJ tout
k NOUN k
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
( PUNCT (
nFu PROPN nFu
( PUNCT (
k NOUN k
) PUNCT )
) PUNCT )
k NOUN k
0L NUM 0L
( PUNCT (
Fu PROPN Fu
( PUNCT (
k NOUN k
) PUNCT )
donc ADV donc
n NOUN n
De ADP de
plus ADV plus
, PUNCT ,
n NOUN n
et CCONJ et
d ADP d
commutent VERB commuter ind_pre
sur ADP sur
chaque DET chaque
Fu NOUN fu
( PUNCT (
k NOUN k
) PUNCT )
, PUNCT ,
donc ADV donc
sur ADP sur
E. NOUN e.
Unicité PROPN Unicité
. PUNCT .
Voir VERB voir inf
la DET le
remarque NOUN remarque
ci-dessous ADV ci-dessous
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
démontrer VERB démontrer inf
que SCONJ que
d ADP d
et CCONJ et
n NOUN n
sont VERB être ind_pre
des DET un
polynômes NOUN polynôme
en ADP en
u NOUN u
, PUNCT ,
puisque SCONJ puisque
( PUNCT (
en ADP en
reprenant VERB reprendre par_pre
les DET le
notations NOUN notation
de ADP de
la DET le
En ADP en
particulier ADJ particulier
, PUNCT ,
le DET le
couple NOUN couple
( PUNCT (
d NOUN d
, PUNCT ,
n NOUN n
) PUNCT )
est VERB être ind_pre
unique ADJ unique
. PUNCT .
Si SCONJ si
( PUNCT (
d0 NOUN d0
, PUNCT ,
n0 NOUN n0
) PUNCT )
est VERB être ind_pre
un DET un
autre ADJ autre
couple NOUN couple
convenant ADJ convenant
, PUNCT ,
alors ADV alors
d0 NOUN d0
et CCONJ et
n0 PROPN n0
( PUNCT (
qui PRON qui
sont VERB être ind_pre
des DET un
polynômes NOUN polynôme
en ADP en
u NOUN u
) PUNCT )
commutent VERB commuter ind_pre
avec ADP avec
u NOUN u
donc ADV donc
avec ADP avec
d ADP d
et CCONJ et
n. NOUN n.
Ainsi ADV ainsi
, PUNCT ,
d SYM d
et CCONJ et
d0 NOUN d0
sont VERB être ind_pre
co-diagonalisables ADV co-diagonalisables
( PUNCT (
voir VERB voir inf
le DET le
théorème NOUN théorème
4.3 NUM 4.3
, PUNCT ,
page NOUN page
205 NUM 205
du ADP de
chapitre NOUN chapitre
4 NUM 4
) PUNCT )
donc ADV donc
d ADP d
d0 NOUN d0
n AUX n
n0 PRON n0
est VERB être ind_pre
diagonalisable ADJ diagonalisable
. PUNCT .
Or CCONJ or
le DET le
seul ADJ seul
endomorphisme NOUN endomorphisme
à ADP à
la DET le
fois NOUN fois
nilpotent VERB nilpoter
et CCONJ et
diagonalisable ADJ diagonalisable
est VERB être ind_pre
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
d' ADP de
où PRON où
l' DET le
unicité NOUN unicité
. PUNCT .
La DET le
décomposition NOUN décomposition
de ADP de
Dunford PROPN Dunford
: PUNCT :
u NOUN u
7 NUM 7
( PUNCT (
d NOUN d
, PUNCT ,
n NOUN n
) PUNCT )
ne ADV ne
est VERB être ind_pre
pas ADV pas
continue VERB continuer ind_pre
( PUNCT (
K NOUN k
C NOUN c
) PUNCT )
. PUNCT .
En ADP en
effet NOUN effet
, PUNCT ,
on PRON on
a VERB avoir ind_pre
( PUNCT (
u X u
) PUNCT )
( PUNCT (
u NOUN u
, PUNCT ,
0L PROPN 0L
( PUNCT (
E NOUN e
) PUNCT )
) PUNCT )
pour ADP pour
tout ADV tout
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
diagonalisable ADJ diagonalisable
donc ADV donc
si SCONJ si
était VERB être impar
continue VERB continuer ind_pre
, PUNCT ,
par ADP par
densité NOUN densité
des ADP de
endomorphismes NOUN endomorphisme
diagonalisables ADJ diagonalisable
( PUNCT (
proposition NOUN proposition
5.2 NUM 5.2
, PUNCT ,
page NOUN page
238 NUM 238
) PUNCT )
, PUNCT ,
on PRON on
aurait VERB avoir con_pre
( PUNCT (
u NOUN u
) PUNCT )
( PUNCT (
u X u
, PUNCT ,
0L PROPN 0L
( PUNCT (
E NOUN e
) PUNCT )
) PUNCT )
pour ADP pour
tout ADV tout
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
que SCONJ que
tout DET tout
endomorphisme NOUN endomorphisme
serait VERB être con_pre
diagonalisable ADJ diagonalisable
. PUNCT .
La DET le
décomposition NOUN décomposition
de ADP de
Dunford PROPN Dunford
ne ADV ne
est VERB être ind_pre
donc ADV donc
pas ADV pas
un DET un
outil NOUN outil
adapté VERB adapter par_pas
au ADP à
calcul NOUN calcul
numérique ADJ numérique
approché VERB approcher par_pas
. PUNCT .
Attention NOUN attention
: PUNCT :
ne ADV ne
est VERB être ind_pre
pas ADV pas
la DET le
décomposition NOUN décomposition
de ADP de
Dunford PROPN Dunford
de ADP de
A NOUN a
car CCONJ car
A NOUN a
est VERB être ind_pre
diagonalisable ADJ diagonalisable
( PUNCT (
elle PRON lui
a VERB avoir ind_pre
deux NUM deux
valeurs NOUN valeur
propres ADJ propre
distinctes ADJ distinct
1 NUM 1
et CCONJ et
2 NUM 2
) PUNCT )
. PUNCT .
Sa DET son
décomposition NOUN décomposition
de ADP de
Dunford PROPN Dunford
est VERB être ind_pre
elle-même PRON lui-même
: PUNCT :
A NOUN a
A NOUN a
02 NOUN 02
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
se PRON se
servir VERB servir inf
de ADP de
la DET le
décomposition NOUN décomposition
de ADP de
Dunford PROPN Dunford
pour ADP pour
calculer VERB calculer inf
les DET le
puissances NOUN puissance
An NOUN an
ou CCONJ ou
l' DET le
exponentielle NOUN exponentielle
exp(A PROPN exp(A
) PUNCT )
d' ADP de
une DET un
matrice NOUN matrice
carrée ADJ carré
A. PROPN A.
Soit VERB être sub_pre
A ADP à
D NOUN d
N ADJ n
avec ADP avec
D NOUN d
diagonalisable ADJ diagonalisable
et CCONJ et
N NOUN n
nilpotent VERB nilpoter
la DET le
décomposition NOUN décomposition
de ADP de
Dunford PROPN Dunford
de ADP de
A. PROPN A.
On PROPN On
note VERB noter ind_pre
q NUM q
l' DET le
indice NOUN indice
de ADP de
nilpotence NOUN nilpotence
de ADP de
N NOUN n
( PUNCT (
le DET le
plus ADV plus
petit ADJ petit
entier ADJ entier
q PRON q
N ADJ n
tel ADJ tel
que SCONJ que
N ADJ n
q NOUN q
0n NOUN 0n
) PUNCT )
. PUNCT .
Puisque SCONJ puisque
D NOUN d
et CCONJ et
N NOUN n
commutent VERB commuter ind_pre
, PUNCT ,
on PRON on
a VERB avoir ind_pre
d' ADP de
après ADP après
la DET le
formule NOUN formule
du ADP de
binôme NOUN binôme
de ADP de
Newton PROPN Newton
: PUNCT :
Puisque X Puisque
D NOUN d
et CCONJ et
N NOUN n
commutent VERB commuter ind_pre
, PUNCT ,
on PRON on
a VERB avoir ind_pre
: PUNCT :
exp(A PROPN exp(A
) PUNCT )
exp(D ADJ exp(d
) PUNCT )
exp(N VERB exp(n
) PUNCT )
On PRON on
a VERB avoir
déjà ADV déjà
vu VERB voir pas_cop
comment ADV comment
calculer VERB calculer inf
l' DET le
exponentielle NOUN exponentielle
d' ADP de
une DET un
matrice NOUN matrice
diagonalisable ADJ diagonalisable
. PUNCT .
Pour ADP pour
N NOUN n
, PUNCT ,
on PRON on
a VERB avoir ind_pre
simplement ADV simplement
: PUNCT :
En ADP en
pratique NOUN pratique
: PUNCT :
1 NUM 1
. PUNCT .
on PRON on
prend VERB prendre ind_pre
une DET un
base NOUN base
E NOUN e
de ADP de
E PROPN E
adaptée VERB adapter par_pas
à ADP à
la DET le
décomposition NOUN décomposition
de ADP de
E NOUN e
en ADP en
espaces NOUN espace
caractéristiques NOUN caractéristique
, PUNCT ,
pour ADP pour
obtenir VERB obtenir inf
la DET le
matrice NOUN matrice
A NOUN a
de ADP de
u PROPN u
dans ADP dans
cette DET ce
base NOUN base
sous ADP sous
la DET le
forme NOUN forme
d' ADP de
une DET un
matrice NOUN matrice
diagonale ADJ diagonal
par ADP par
blocs NOUN bloc
: PUNCT :
2 NUM 2
. PUNCT .
on PRON on
trigonalise NOUN trigonalise
Bk NOUN bk
de ADP de
manière NOUN manière
à ADP à
la PRON le
mettre VERB mettre inf
sous ADP sous
la DET le
forme NOUN forme
: PUNCT :
Bk NOUN bk
k NOUN k
.Ink NUM .Ink
Nk PROPN Nk
où PRON où
Nk NOUN nk
est VERB être ind_pre
triangulaire ADJ triangulaire
supérieure ADJ supérieur
nilpotente ADJ nilpotent
. PUNCT .
I ADJ i
Mais CCONJ mais
ces DET ce
méthodes NOUN méthode
sont VERB être ind_pre
fastidieuses ADJ fastidieux
( PUNCT (
et CCONJ et
peu ADV peu
adaptées VERB adapter par_pas
au ADP à
calcul NOUN calcul
numérique ADJ numérique
approchée NOUN approchée
, PUNCT ,
voir VERB voir inf
la DET le
remarque NOUN remarque
5.15 NUM 5.15
, PUNCT ,
page NOUN page
précédente ADJ précédent
) PUNCT )
. PUNCT .
On PRON on
préfère VERB préférer ind_pre
donc ADV donc
passer VERB passer inf
par ADP par
la DET le
trigonalisation NOUN trigonalisation
de ADP de
A NOUN a
et CCONJ et
résoudre VERB résoudre inf
des DET un
systèmes NOUN système
triangulaires ADJ triangulaire
. PUNCT .
Commutant ADJ commutant
et CCONJ et
réduction NOUN réduction
de ADP de
Jordan PROPN Jordan
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Le DET le
commutant NOUN commutant
de ADP de
u PRON u
est VERB être ind_pre
défini VERB définir par_pas
par ADP par
: PUNCT :
1 NUM 1
. PUNCT .
C NOUN c
( PUNCT (
u NOUN u
) PUNCT )
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
L(E NOUN l(e
) PUNCT )
. PUNCT .
2 NUM 2
. PUNCT .
Pour ADP pour
tout DET tout
polynôme NOUN polynôme
P NOUN p
KX PROPN KX
, PUNCT ,
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
C NOUN c
( PUNCT (
u NOUN u
) PUNCT )
. PUNCT .
3 NUM 3
. PUNCT .
Les DET le
sous-espaces NOUN sous-espace
propres ADJ propre
de ADP de
u NOUN u
sont VERB être ind_pre
stables ADJ stable
par ADP par
les DET le
endomorphismes NOUN endomorphisme
de ADP de
C NOUN c
( PUNCT (
u NOUN u
) PUNCT )
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n AUX n
1 NUM 1
et CCONJ et
u NOUN u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
diagonalisable ADJ diagonalisable
. PUNCT .
Alors ADV alors
: PUNCT :
C NOUN c
( PUNCT (
u NOUN u
) PUNCT )
est VERB être ind_pre
isomorphe NOUN isomorphe
à ADP à
En ADP en
particulier ADJ particulier
: PUNCT :
u NOUN u
a VERB avoir ind_pre
n AUX n
valeurs NOUN valeur
propres ADJ propre
distinctes ADJ distinct
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
Ku NOUN ku
C NOUN c
( PUNCT (
u NOUN u
) PUNCT )
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
dim NOUN dim
C NOUN c
( PUNCT (
u NOUN u
) PUNCT )
n NOUN n
Démonstration NOUN démonstration
Considérons VERB considérer imper
l' DET le
application NOUN application
linéaire ADJ linéaire
de ADP de
C NOUN c
( PUNCT (
u NOUN u
) PUNCT )
dans ADP dans
pk1 PROPN pk1
L NOUN l
Eu PROPN Eu
( PUNCT (
k NOUN k
) PUNCT )
définie VERB définir par_pas
par ADP par
: PUNCT :
On PRON on
vérifie VERB vérifier ind_pre
alors ADV alors
que SCONJ que
est VERB être ind_pre
bien ADV bien
définie VERB définir par_pas
et CCONJ et
bijective ADJ bijectif
( PUNCT (
car CCONJ car
les DET le
espaces NOUN espace
propres ADJ propre
Eu PROPN Eu
( PUNCT (
k NOUN k
) PUNCT )
sont VERB être ind_pre
stables ADJ stable
par ADP par
les DET le
éléments NOUN élément
de ADP de
C NOUN c
( PUNCT (
u NOUN u
) PUNCT )
et CCONJ et
que SCONJ que
E NOUN e
Eu PROPN Eu
( PUNCT (
1 NUM 1
) PUNCT )
Eu PROPN Eu
( PUNCT (
p NOUN p
) PUNCT )
) PUNCT )
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
. PUNCT .
En ADP en
particulier ADJ particulier
, PUNCT ,
on PRON on
a VERB avoir ind_pre
: PUNCT :
dim ADP dim
Ku NOUN ku
p NOUN p
dim ADP dim
Eu PROPN Eu
( PUNCT (
k NOUN k
) PUNCT )
Alors ADV alors
u NOUN u
a VERB avoir ind_pre
n ADV n
valeurs NOUN valeur
propres ADJ propre
distinctes ADJ distinct
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
dim ADP dim
Ku NOUN ku
n NOUN n
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
pour ADP pour
tout DET tout
k NOUN k
1 NUM 1
, PUNCT ,
p NOUN p
, PUNCT ,
dim ADP dim
Eu PROPN Eu
( PUNCT (
k NOUN k
) PUNCT )
1 PRON 1
( PUNCT (
donc ADV donc
l' DET le
inégalité NOUN inégalité
ci ADV ci
- ADV -
dessus ADJ dessu
est VERB être ind_pre
une DET un
égalité NOUN égalité
) PUNCT )
, PUNCT ,
d' ADP de
où PRON où
le DET le
résultat NOUN résultat
( PUNCT (
on PRON on
a VERB avoir ind_pre
déjà ADV déjà
l' DET le
inclusion NOUN inclusion
Ku NOUN ku
C NOUN c
( PUNCT (
u NOUN u
) PUNCT )
) PUNCT )
. PUNCT .
Si SCONJ si
on PRON on
veut VERB vouloir ind_pre
déterminer VERB déterminer inf
C NOUN c
( PUNCT (
u NOUN u
) PUNCT )
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
utiliser VERB utiliser inf
la DET le
décomposition NOUN décomposition
de ADP de
Dunford PROPN Dunford
: PUNCT :
u DET u
d ADP d
n NOUN n
, PUNCT ,
d ADP d
diagonalisable NOUN diagonalisable
, PUNCT ,
n NOUN n
nilpotent VERB nilpoter
, PUNCT ,
et CCONJ et
qui PRON qui
commutent VERB commuter ind_pre
ce PRON ce
qui PRON qui
revient VERB revenir ind_pre
à ADP à
trouver VERB trouver inf
C NOUN c
( PUNCT (
d NOUN d
) PUNCT )
( PUNCT (
on PRON on
utilise VERB utiliser ind_pre
ce PRON ce
qui PRON qui
précède VERB précéder ind_pre
) PUNCT )
et CCONJ et
C NOUN c
( PUNCT (
n NOUN n
) PUNCT )
. PUNCT .
On PRON on
doit VERB devoir ind_pre
donc ADV donc
maintenant ADV maintenant
étudier VERB étudier inf
ce PRON ce
qui PRON qui
se PRON se
passe VERB passer ind_pre
pour ADP pour
un DET un
endomorphisme NOUN endomorphisme
nilpotent VERB nilpoter
. PUNCT .
Proposition NOUN proposition
5.3 NUM 5.3
Réduction NOUN réduction
de ADP de
Jordan PROPN Jordan
d' ADP de
un DET un
endomorphisme NOUN endomorphisme
nilpotent VERB nilpoter
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n AUX n
1 NUM 1
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
nilpotent VERB nilpoter
. PUNCT .
Alors ADV alors
il PRON il
existe VERB exister ind_pre
une DET un
base NOUN base
E NOUN e
de ADP de
E PROPN E
pour ADP pour
laquelle PRON lequel
: PUNCT :
où PRON où
les DET le
blocs NOUN bloc
Bk NOUN bk
, PUNCT ,
appelés VERB appeler par_pas
blocs NOUN bloc
de ADP de
Jordan PROPN Jordan
, PUNCT ,
sont VERB être ind_pre
soit VERB être sub_pre
nuls ADV nuls
, PUNCT ,
soit VERB être sub_pre
de ADP de
la DET le
forme NOUN forme
: PUNCT :
Démonstration NOUN démonstration
On PRON on
passe VERB passer ind_pre
par ADP par
les DET le
invariants NOUN invariant
de ADP de
similitude NOUN similitude
( PUNCT (
voir VERB voir inf
la DET le
dernière ADJ dernier
partie NOUN partie
) PUNCT )
: PUNCT :
si SCONJ si
( PUNCT (
P1 PROPN P1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Pr PROPN Pr
) PUNCT )
est VERB être ind_pre
la DET le
suite NOUN suite
des ADP de
invariants NOUN invariant
de ADP de
similitude NOUN similitude
de ADP de
u PROPN u
alors ADV alors
le DET le
produit NOUN produit
P1 NUM P1
Pr PROPN Pr
est VERB être ind_pre
égal ADJ égal
au ADP à
signe NOUN signe
près ADV près
à ADP à
u VERB u
, PUNCT ,
qui PRON qui
vaut VERB valoir ind_pre
( PUNCT (
1)n PROPN 1)n
X NOUN x
n NOUN n
( PUNCT (
propriété NOUN propriété
5.9 NUM 5.9
, PUNCT ,
page NOUN page
245 NUM 245
) PUNCT )
. PUNCT .
Les DET le
Pi NOUN pi
sont VERB être ind_pre
donc ADV donc
de ADP de
la DET le
forme NOUN forme
X NOUN x
ni CCONJ ni
. PUNCT .
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
les DET le
matrices NOUN matrice
compagnons NOUN compagnon
C(Pi PROPN C(Pi
) PUNCT )
des ADP de
Pi NOUN pi
sont VERB être ind_pre
des ADP de
transposées NOUN transposée
de ADP de
blocs NOUN bloc
de ADP de
Jordan PROPN Jordan
. PUNCT .
On PRON on
conclut VERB conclure ind_pre
alors ADV alors
en ADP en
appliquant VERB appliquer par_pre
la DET le
réduction NOUN réduction
de ADP de
Frobenius NOUN frobeniu
à ADP à
u. NOUN u.
On PRON on
peut VERB pouvoir ind_pre
aussi ADV aussi
le PRON le
démontrer VERB démontrer inf
directement ADV directement
( PUNCT (
voir VERB voir inf
l' DET le
exercice NOUN exercice
5.3.11 NUM 5.3.11
, PUNCT ,
page NOUN page
251 NUM 251
) PUNCT )
. PUNCT .
Théorème NOUN théorème
5.6 NUM 5.6
Réduction NOUN réduction
de ADP de
Jordan PROPN Jordan
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n AUX n
1 NUM 1
et CCONJ et
soit VERB être sub_pre
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
tel ADJ tel
que SCONJ que
son DET son
polynôme NOUN polynôme
caractéristique ADJ caractéristique
u NOUN u
soit VERB être sub_pre
scindé VERB scinder par_pas
. PUNCT .
Alors ADV alors
il PRON il
existe VERB exister ind_pre
une DET un
base NOUN base
E NOUN e
de ADP de
E PROPN E
pour ADP pour
laquelle PRON lequel
: PUNCT :
où PRON où
les DET le
blocs NOUN bloc
Bk NOUN bk
, PUNCT ,
appelés VERB appeler par_pas
blocs NOUN bloc
de ADP de
Jordan PROPN Jordan
, PUNCT ,
sont VERB être ind_pre
soit VERB être sub_pre
diagonales ADJ diagonal
, PUNCT ,
soit VERB être sub_pre
de ADP de
la DET le
forme NOUN forme
: PUNCT :
Démonstration NOUN démonstration
On PRON on
reprend VERB reprendre ind_pre
les DET le
notations NOUN notation
de ADP de
la DET le
définition NOUN définition
5.8 NUM 5.8
, PUNCT ,
page NOUN page
245 NUM 245
. PUNCT .
Sur ADP sur
chaque DET chaque
espace NOUN espace
caractéristique ADJ caractéristique
Fu PROPN Fu
( PUNCT (
k NOUN k
) PUNCT )
, PUNCT ,
on PRON on
décompose VERB décomposer ind_pre
uFu NOUN ufu
( PUNCT (
k NOUN k
) PUNCT )
en ADP en
la DET le
somme NOUN somme
d' ADP de
un DET un
endomorphisme NOUN endomorphisme
nilpotent VERB nilpoter
et CCONJ et
d' ADP de
un DET un
endomorphisme NOUN endomorphisme
diagonalisable ADJ diagonalisable
. PUNCT .
On PRON on
utilise VERB utiliser ind_pre
alors ADV alors
la DET le
réduction NOUN réduction
de ADP de
Jordan PROPN Jordan
pour ADP pour
les DET le
endomorphismes NOUN endomorphisme
nilpotents NOUN nilpotent
et CCONJ et
le DET le
fait NOUN fait
que SCONJ que
E NOUN e
est VERB être ind_pre
la DET le
somme NOUN somme
directe ADJ direct
des ADP de
espaces NOUN espace
caractéristiques NOUN caractéristique
de ADP de
u. VERB u.
1 NUM 1
. PUNCT .
Lorsque SCONJ lorsque
les DET le
valeurs NOUN valeur
propres ADJ propre
sont VERB être ind_pre
séparées VERB séparer par_pas
, PUNCT ,
tout PRON tout
se PRON se
passe VERB passer ind_pre
bien ADV bien
: PUNCT :
2 NUM 2
. PUNCT .
Lorsque SCONJ lorsque
les DET le
valeurs NOUN valeur
propres ADJ propre
sont VERB être ind_pre
confondues VERB confondre par_pas
, PUNCT ,
il PRON il
y PRON y
a VERB avoir ind_pre
de DET de
mauvaises NOUN mauvais
surprises NOUN surprise
, PUNCT ,
ainsi ADV ainsi
: PUNCT :
5.3.1 NOUN 5.3.1
Trouver VERB trouver inf
le DET le
commutant NOUN commutant
de ADP de
la DET le
matrice NOUN matrice
: PUNCT :
5.3.2 NUM 5.3.2
Soit VERB être sub_pre
E NOUN e
un DET un
C NOUN c
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n AUX n
1 NUM 1
et CCONJ et
soit VERB être sub_pre
u DET u
L(E NOUN l(e
) PUNCT )
. PUNCT .
Démontrer VERB démontrer inf
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
des DET un
entiers ADJ entier
n1 NOUN n1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
np PROPN np
( PUNCT (
avec ADP avec
p NOUN p
à ADP à
déterminer VERB déterminer inf
) PUNCT )
tels ADJ tel
que SCONJ que
: PUNCT :
5.3.3 NUM 5.3.3
Soit VERB être sub_pre
E NOUN e
un DET un
C NOUN c
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie ADJ fini
de ADP de
dimension NOUN dimension
n NOUN n
, PUNCT ,
soit VERB être sub_pre
f1 VERB f1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
fn NOUN fn
des ADP de
endomorphismes NOUN endomorphisme
nilpotents NOUN nilpotent
de ADP de
E NOUN e
qui PRON qui
commutent VERB commuter ind_pre
deux NUM deux
à ADP à
deux PRON deux
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
5.3.4 NUM 5.3.4
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
n AUX n
1 NUM 1
et CCONJ et
f PUNCT f
L(E NOUN l(e
) PUNCT )
telle ADJ tel
que SCONJ que
f NUM f
n1 NOUN n1
6 NUM 6
0L NOUN 0l
( PUNCT (
E NOUN e
) PUNCT )
et CCONJ et
f NOUN f
n NOUN n
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
l' DET le
ensemble NOUN ensemble
des ADP de
endomorphismes NOUN endomorphisme
qui PRON qui
commutent VERB commuter ind_pre sub_pre
avec ADP avec
f PRON f
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
de ADP de
base NOUN base
5.3.5 NUM 5.3.5
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
2 NUM 2
et CCONJ et
u NOUN u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
qui PRON qui
ne ADV ne
est VERB être ind_pre
pas ADV pas
une DET un
homothétie NOUN homothétie
. PUNCT .
Déterminer VERB déterminer inf
la DET le
dimension NOUN dimension
du ADP de
commutant NOUN commutant
de ADP de
u. VERB u.
5.3.6 NUM 5.3.6
Soit VERB être sub_pre
( PUNCT (
a VERB avoir ind_pre
, PUNCT ,
b NOUN b
, PUNCT ,
c NOUN c
) PUNCT )
K3 VERB k3
. PUNCT .
Calculer VERB calculer inf
la DET le
dimension NOUN dimension
du ADP de
commutant NOUN commutant
de ADP de
5.3.7 PROPN 5.3.7
Soit VERB être sub_pre
A ADP à
une DET un
matrice NOUN matrice
réelle ADJ réel
triangulaire ADJ triangulaire
supérieure ADJ supérieur
. PUNCT .
Démontrer VERB démontrer inf
qu' SCONJ que
elle PRON lui
commute VERB commuter ind_pre
avec ADP avec
sa DET son
transposée VERB transposer par_pas
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
elle PRON lui
est VERB être ind_pre
diagonale ADJ diagonal
. PUNCT .
n NOUN n
( PUNCT (
C NOUN c
) PUNCT )
( PUNCT (
l' DET le
ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
de ADP de
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
triangulaires NOUN triangulaire
supérieures ADJ supérieur
) PUNCT )
. PUNCT .
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
est VERB être ind_pre
de ADP de
dimension NOUN dimension
au ADP à
moins ADV moins
n. NOUN n.
( PUNCT (
b NOUN b
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
si SCONJ si
A ADP à
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
alors ADV alors
son DET son
commutant NOUN commutant
est VERB être ind_pre
de ADP de
dimension NOUN dimension
au ADP à
moins ADV moins
n. NOUN n.
( PUNCT (
c NOUN c
) PUNCT )
Que ADV que
dire VERB dire inf
d' ADP de
une DET un
matrice NOUN matrice
A NOUN a
de ADP de
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
dont PRON dont
le DET le
commutant NOUN commutant
est VERB être ind_pre
égal ADJ égal
à ADP à
l' DET le
ensemble NOUN ensemble
CA PROPN CA
? PUNCT ?
5.3.9 NOUN 5.3.9
Pour ADP pour
quels DET quel
entiers NOUN entier
n NOUN n
le DET le
groupe NOUN groupe
GLn PROPN GLn
( PUNCT (
R NOUN r
) PUNCT )
admet VERB admettre ind_pre
-il PRON il
un DET un
sous-groupe NOUN sous-groupe
isomorphe NOUN isomorphe
à ADP à
Z4 NOUN z4
Z NOUN z
? PUNCT ?
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
A NOUN a
est VERB être ind_pre
semblable ADJ semblable
à ADP à
: PUNCT :
( PUNCT (
b NOUN b
) PUNCT )
Trouver VERB trouver inf
les DET le
matrices NOUN matrice
réelles ADJ réel
qui PRON qui
commutent VERB commuter ind_pre
avec ADP avec
A. PROPN A.
5.3.11 PROPN 5.3.11
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace PROPN espace
vectoriel NOUN vectoriel
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
un DET un
endomorphisme NOUN endomorphisme
nilpotent VERB nilpoter
de ADP de
E. PROPN E.
Soit VERB être sub_pre
q ADJ q
l' DET le
indice NOUN indice
de ADP de
nilpotence NOUN nilpotence
de ADP de
u PROPN u
: PUNCT :
Soit VERB être sub_pre
x ADP x
E NOUN e
tel ADJ tel
que SCONJ que
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
la DET le
famille NOUN famille
x NOUN x
, PUNCT ,
u(x PRON u(x
) PUNCT )
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
uq1 NOUN uq1
( PUNCT (
x NOUN x
) PUNCT )
est VERB être ind_pre
libre ADJ libre
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
En ADP en
déduire VERB déduire inf
que SCONJ que
si SCONJ si
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
alors ADV alors
dim ADP dim
E NOUN e
q. PROPN q.
I ADJ i
On PRON on
pose VERB poser ind_pre
E1 DET e1
Vect PROPN Vect
x NOUN x
, PUNCT ,
u(x PRON u(x
) PUNCT )
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
uq1 NOUN uq1
( PUNCT (
x NOUN x
) PUNCT )
et CCONJ et
on PRON on
suppose VERB supposer ind_pre
que SCONJ que
E NOUN e
est VERB être ind_pre
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
n AUX n
p. NOUN p.
I ADJ i
Par ADP par
ailleurs ADV ailleurs
, PUNCT ,
soit VERB être sub_pre
E NOUN e
? PUNCT ?
une DET un
forme NOUN forme
linéaire ADJ linéaire
telle ADJ tel
que SCONJ que
: PUNCT :
On PRON on
pose VERB poser ind_pre
alors ADV alors
: PUNCT :
I ADJ i
Finalement ADV finalement
, PUNCT ,
on PRON on
pose VERB poser ind_pre
: PUNCT :
( PUNCT (
c NOUN c
) PUNCT )
Justifier VERB justifier inf
l' DET le
existence NOUN existence
de ADP de
. PUNCT .
( PUNCT (
d NOUN d
) PUNCT )
Quelle ADJ quell
est VERB être ind_pre
la DET le
dimension NOUN dimension
de ADP de
? PUNCT ?
( PUNCT (
Justifier VERB justifier inf
) PUNCT )
. PUNCT .
( PUNCT (
e NOUN e
) PUNCT )
Quelle ADJ quell
est VERB être ind_pre
la DET le
dimension NOUN dimension
de ADP de
G PROPN G
? PUNCT ?
( PUNCT (
Justifier VERB justifier inf
) PUNCT )
. PUNCT .
( PUNCT (
f NOUN f
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
( PUNCT (
g NOUN gramme
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
( PUNCT (
h NOUN heure
) PUNCT )
En ADP en
déduire VERB déduire inf
la DET le
proposition NOUN proposition
5.3 NUM 5.3
, PUNCT ,
page NOUN page
249 NUM 249
Résolution NOUN résolution
d' ADP de
équations NOUN équation
matricielles ADJ matriciel
Nous PRON nous
allons VERB aller ind_pre
nous PRON nous
intéresser VERB intéresser inf
à ADP à
deux NUM deux
types NOUN type
d' ADP de
équations NOUN équation
: PUNCT :
1 NUM 1
. PUNCT .
Extraction NOUN extraction
de ADP de
racine NOUN racine
: PUNCT :
soit VERB être sub_pre
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
et CCONJ et
p NOUN p
N ADJ n
, PUNCT ,
existe VERB exister ind_pre
-t PRON -t
-il PRON il
des ADP de
matrices NOUN matrice
B ADJ b
telles ADJ tel
que SCONJ que
B NOUN b
p NOUN p
A NOUN a
? PUNCT ?
Et CCONJ et
si SCONJ si
c' PRON ce
est VERB être ind_pre
le DET le
cas NOUN cas
, PUNCT ,
comment ADV comment
les PRON le
trouver VERB trouver inf
toutes ADJ tout
? PUNCT ?
2 NUM 2
. PUNCT .
Logarithme PROPN Logarithme
: PUNCT :
soit VERB être sub_pre
A NOUN a
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
( PUNCT (
K NOUN k
R NOUN r
ou CCONJ ou
C NOUN c
) PUNCT )
, PUNCT ,
existe VERB exister ind_pre
-t PRON -t
-il PRON il
des ADP de
matrices NOUN matrice
B ADJ b
telles ADJ tel
que SCONJ que
B NOUN b
p NOUN p
A NOUN a
? PUNCT ?
Et CCONJ et
si SCONJ si
c' PRON ce
est VERB être ind_pre
le DET le
cas NOUN cas
, PUNCT ,
comment ADV comment
les PRON le
trouver VERB trouver inf
toutes ADJ tout
? PUNCT ?
L' DET le
extraction NOUN extraction
de ADP de
racine NOUN racine
possède VERB posséder ind_pre
deux NUM deux
propriétés NOUN propriété
immédiates ADJ immédiat
: PUNCT :
1 NUM 1
. PUNCT .
Si SCONJ si
B NOUN b
existe VERB exister ind_pre
, PUNCT ,
alors ADV alors
det(B)p NOUN det(b)p
det(A ADJ det(a
) PUNCT )
donc ADV donc
une DET un
condition NOUN condition
nécessaire ADJ nécessaire
d' ADP de
existence NOUN existence
est VERB être ind_pre
que ADV que
det(A ADJ det(a
) PUNCT )
admette VERB admettre sub_pre
une DET un
racine NOUN racine
p NOUN p
- NOUN -
ième NOUN ième
dans ADP dans
le DET le
corps NOUN corps
K. NOUN k.
2 NUM 2
. PUNCT .
Si SCONJ si
B NOUN b
existe VERB exister ind_pre
, PUNCT ,
alors ADV alors
B NOUN b
commute VERB commuter ind_pre
avec ADP avec
A NOUN a
( PUNCT (
A X A
B NOUN b
B NOUN b
A NOUN a
) PUNCT )
, PUNCT ,
donc ADV donc
B NOUN b
est VERB être ind_pre
nécessairement ADV nécessairement
un DET un
élément NOUN élément
du ADP de
commutant ADJ commutant
C NOUN c
( PUNCT (
A NOUN a
) PUNCT )
de ADP de
A. PROPN A.
C' PRON ce
est VERB être ind_pre
facile ADJ facile
lorsque SCONJ lorsque
A NOUN a
est VERB être ind_pre
diagonalisable ADJ diagonalisable
. PUNCT .
On PRON on
est VERB être ind_pre
alors ADV alors
ramené VERB ramener par_pas pas_cop
à ADP à
la DET le
résolution NOUN résolution
de ADP de
B NOUN b
p NOUN p
.In PROPN .In
, PUNCT ,
ce DET ce
qui PRON qui
est VERB être ind_pre
aisée ADJ aisé
. PUNCT .
Lorsque SCONJ lorsque
A NOUN a
ne ADV ne
est VERB être ind_pre
plus ADV plus
diagonalisable ADJ diagonalisable
, PUNCT ,
il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
plus ADV plus
de DET de
méthode NOUN méthode
générale ADJ général
. PUNCT .
Soit VERB être sub_pre
la DET le
matrice NOUN matrice
: PUNCT :
résolvons VERB résoudre ind_pre
B NOUN b
A NOUN a
, PUNCT ,
pour ADP pour
p NOUN p
2 NUM 2
, PUNCT ,
3 NUM 3
, PUNCT ,
d' ADP de
inconnue NOUN inconnue
B NOUN b
M3 PROPN M3
( PUNCT (
R NOUN r
) PUNCT )
. PUNCT .
1 NUM 1
. PUNCT .
On PRON on
a VERB avoir ind_pre
det(A VERB det(er
) PUNCT )
2 NUM 2
, PUNCT ,
donc ADV donc
il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
pas ADV pas
de ADP de
solution NOUN solution
pour ADP pour
p NOUN p
2 NUM 2
( PUNCT (
car CCONJ car
on PRON on
est VERB être ind_pre
dans ADP dans
le DET le
cas NOUN cas
K NOUN k
R NOUN r
, PUNCT ,
mais CCONJ mais
il PRON il
en ADP en
existe VERB exister ind_pre
dans ADP dans
C NOUN c
) PUNCT )
. PUNCT .
2 NUM 2
. PUNCT .
Pour ADP pour
p NOUN p
3 NUM 3
, PUNCT ,
on PRON on
peut VERB pouvoir ind_pre
diagonaliser VERB diagonaliser
A NOUN a
: PUNCT :
il PRON il
existe VERB exister ind_pre
P NOUN p
GL3 ADJ gl3
( PUNCT (
R NOUN r
) PUNCT )
telle ADJ tel
que SCONJ que
: PUNCT :
Les DET le
matrices NOUN matrice
qui PRON qui
commutent VERB commuter ind_pre
avec ADP avec
cette DET ce
dernière ADJ dernier
matrice NOUN matrice
sont VERB être ind_pre
de ADP de
la DET le
forme NOUN forme
Diag(B1 ADJ diag(b1
) PUNCT )
avec ADP avec
B1 PROPN B1
M2 NOUN m2
( PUNCT (
R NOUN r
) PUNCT )
. PUNCT .
On PRON on
doit VERB devoir ind_pre
donc ADV donc
résoudre VERB résoudre inf
B13 PROPN B13
I2 VERB i2
et CCONJ et
3 NUM 3
2 NUM 2
. PUNCT .
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
B1 PROPN B1
est VERB être ind_pre
diagonalisable ADJ diagonalisable
dans ADP dans
C NOUN c
, PUNCT ,
égale ADJ égal
à ADP à
I2 ADJ i2
ou CCONJ ou
semblable ADJ semblable
à ADP à
Diag(j ADV diag(j
, PUNCT ,
j NOUN j
2 NUM 2
) PUNCT )
avec ADP avec
j NOUN j
exp(2 PROPN exp(2
i NOUN i
3 NUM 3
) PUNCT )
, PUNCT ,
ce PRON ce
qui PRON qui
ramené VERB ramener par_pas
dans ADP dans
R PROPN R
nous PRON nous
donne VERB donner ind_pre
: PUNCT :
Finalement ADV finalement
, PUNCT ,
les DET le
B NOUN b
qui PRON qui
conviennent VERB convenir ind_pre
vérifient VERB vérifier ind_pre
: PUNCT :
Le DET le
calcul NOUN calcul
brutal ADJ brutal
ne ADV ne
est VERB être ind_pre
pas ADV pas
efficace ADJ efficace
! PUNCT !
Même ADV même
si SCONJ si
l' PRON l'
on PRON on
pense VERB penser ind_pre
à ADP à
montrer VERB montrer inf
que SCONJ que
B NOUN b
C NOUN c
( PUNCT (
A NOUN a
) PUNCT )
. PUNCT .
Si SCONJ si
la DET le
matrice NOUN matrice
ne ADV ne
est VERB être ind_pre
plus ADV plus
diagonalisable ADJ diagonalisable
( PUNCT (
mais CCONJ mais
est VERB être ind_pre
inversible ADJ inversible
) PUNCT )
, PUNCT ,
on PRON on
considère VERB considérer ind_pre
la DET le
décomposition NOUN décomposition
de ADP de
Dunford PROPN Dunford
de ADP de
A NOUN a
: PUNCT :
A NOUN a
D NOUN d
N ADJ n
avec ADP avec
D NOUN d
diagonalisable ADJ diagonalisable
et CCONJ et
N NOUN n
nilpotente ADJ nilpotent
, PUNCT ,
et CCONJ et
on PRON on
cherche VERB chercher ind_pre
B NOUN b
également ADV également
sous ADP sous
la DET le
forme NOUN forme
B NOUN b
D0 NOUN d0
N ADJ n
0 NUM 0
avec ADP avec
D0 NOUN d0
diagonalisable ADJ diagonalisable
et CCONJ et
N ADJ n
0 NUM 0
nilpotente ADJ nilpotent
. PUNCT .
On PRON on
obtient VERB obtenir ind_pre
: PUNCT :
Il PRON il
vient VERB venir ind_pre
alors ADV alors
: PUNCT :
que SCONJ que
l' PRON l'
on PRON on
peut VERB pouvoir ind_pre
résoudre VERB résoudre inf
en ADP en
utilisant VERB utiliser par_pre
le DET le
développement NOUN développement
en ADP en
série NOUN série
entière ADJ entier
de ADP de
x ADP x
7 NUM 7
( PUNCT (
1 NUM 1
x)1p PROPN x)1p
et CCONJ et
le DET le
fait NOUN fait
que PRON que
la DET le
matrice NOUN matrice
D0 NOUN d0
N ADJ n
0 NUM 0
est VERB être ind_pre
nilpotente ADJ nilpotent
. PUNCT .
Soit VERB être sub_pre
A ADP à
la DET le
matrice NOUN matrice
: PUNCT :
Elle PRON lui
est VERB être ind_pre
de ADP de
déterminant VERB déterminer par_pre
2 NUM 2
0 NUM 0
. PUNCT .
Donc ADV donc
, PUNCT ,
par ADP par
exemple NOUN exemple
: PUNCT :
vérifie VERB vérifier ind_pre
exp(B PROPN exp(B
) PUNCT )
A NOUN a
( PUNCT (
ce PRON ce
ne ADV ne
est VERB être ind_pre
pas ADV pas
la DET le
seule ADJ seul
car CCONJ car
plusieurs DET plusieurs
matrices NOUN matrice
B NOUN b
0 NUM 0
vérifient VERB vérifier ind_pre
exp(B PROPN exp(B
0 NUM 0
) PUNCT )
I2 VERB i2
) PUNCT )
. PUNCT .
Si SCONJ si
exp(B PROPN exp(B
) PUNCT )
A NOUN a
et CCONJ et
si SCONJ si
considère VERB considérer ind_pre
les DET le
décompositions NOUN décomposition
de ADP de
Dunford PROPN Dunford
A ADP à
D NOUN d
N ADJ n
et CCONJ et
B NOUN b
D0 NOUN d0
N ADJ n
0 NUM 0
alors ADV alors
exp(D0 PROPN exp(D0
) PUNCT )
exp(N VERB exp(n
0 NUM 0
) PUNCT )
D NOUN d
N ADJ n
donc ADV donc
exp(D0 PROPN exp(D0
) PUNCT )
D NOUN d
et CCONJ et
exp(N VERB exp(n
0 NUM 0
) PUNCT )
In X In
D1 NOUN d1
N ADJ n
. PUNCT .
En ADP en
utilisant VERB utiliser par_pre
la DET le
série NOUN série
entière ADJ entier
du ADP de
logarithme NOUN logarithme
, PUNCT ,
on PRON on
a VERB avoir ind_pre
donc ADV donc
: PUNCT :
où PRON où
p NOUN p
est VERB être ind_pre
l' DET le
indice NOUN indice
de ADP de
nilpotence NOUN nilpotence
de ADP de
N NOUN n
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
le DET le
plus ADV plus
petit ADJ petit
entier ADJ entier
p NOUN p
N ADJ n
tel ADJ tel
que SCONJ que
N NOUN n
p NOUN p
0n ADJ 0n
. PUNCT .
Avec ADP avec
Wxmaxima PROPN Wxmaxima
: PUNCT :
Soit VERB être sub_pre
n AUX n
N ADJ n
, PUNCT ,
existe VERB exister ind_pre
-t PRON -t
-il PRON il
h NOUN heure
L NOUN l
( PUNCT (
RX NOUN r
) PUNCT )
tel ADJ tel
que SCONJ que
hn VERB hn
T NOUN t
? PUNCT ?
Si SCONJ si
oui NOUN oui
, PUNCT ,
déterminer VERB déterminer inf
h. NOUN h.
5.4.2 NUM 5.4.2
Quelles ADJ quelle
sont VERB être ind_pre
les DET le
A NOUN a
GL2 NOUN gl2
( PUNCT (
R NOUN r
) PUNCT )
telles ADJ tel
qu' SCONJ que
il PRON il
existe VERB exister ind_pre
X NOUN x
GL2 VERB gl2
( PUNCT (
R NOUN r
) PUNCT )
telle ADJ tel
que SCONJ que
A ADP à
X NOUN x
3 NUM 3
? PUNCT ?
5.4.3 CCONJ 5.4.3
Démontrer VERB démontrer inf
que SCONJ que
exp CCONJ exp
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
GLn PROPN GLn
( PUNCT (
C NOUN c
) PUNCT )
5.4.4 PROPN 5.4.4
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
Démontrer VERB démontrer inf
que SCONJ que
si SCONJ si
A ADP à
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
vérifie VERB vérifier ind_pre
exp(A PROPN exp(A
) PUNCT )
In X In
, PUNCT ,
alors ADV alors
A NOUN a
est VERB être ind_pre
diagonalisable ADJ diagonalisable
. PUNCT .
( PUNCT (
b NOUN b
) PUNCT )
Résoudre VERB résoudre inf
l' DET le
équation NOUN équation
exp(X PROPN exp(X
) PUNCT )
In X In
. PUNCT .
5.4.5 NUM 5.4.5
Résoudre VERB résoudre inf
l' DET le
équation NOUN équation
5.4.6 NUM 5.4.6
Soit VERB être sub_pre
n DET n
N ADJ n
, PUNCT ,
résoudre VERB résoudre inf
l' DET le
équation NOUN équation
5.4.7 NUM 5.4.7
Soit VERB être sub_pre
A ADP à
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
, PUNCT ,
donner VERB donner inf
une DET un
condition NOUN condition
nécessaire ADJ nécessaire
et CCONJ et
suffisante ADJ suffisant
pour ADP pour
que SCONJ que
l' DET le
équation NOUN équation
suivante ADJ suivant
ait VERB avoir sub_pre
une DET un
solution NOUN solution
dans ADP dans
Mn NOUN minute
( PUNCT (
R NOUN r
) PUNCT )
: PUNCT :
5.4.8 NUM 5.4.8
Soit VERB être sub_pre
A ADP à
la DET le
matrice NOUN matrice
de ADP de
l' DET le
exemple NOUN exemple
5.5 NUM 5.5
, PUNCT ,
page NOUN page
252 NUM 252
. PUNCT .
Trouver VERB trouver inf
toutes ADJ tout
les DET le
solutions NOUN solution
dans ADP dans
M3 NOUN m3
( PUNCT (
R NOUN r
) PUNCT )
de ADP de
l' DET le
équation NOUN équation
: PUNCT :
5.4.9 NUM 5.4.9
Soit VERB être sub_pre
A ADP à
la DET le
matrice NOUN matrice
de ADP de
l' DET le
exemple NOUN exemple
5.7 NUM 5.7
, PUNCT ,
page NOUN page
259 NUM 259
. PUNCT .
Trouver VERB trouver inf
toutes ADJ tout
les DET le
solutions NOUN solution
dans ADP dans
M3 NOUN m3
( PUNCT (
R NOUN r
) PUNCT )
de ADP de
l' DET le
équation NOUN équation
: PUNCT :
Invariants PROPN Invariants
de ADP de
similitudes NOUN similitude
Quand SCONJ quand
on PRON on
a VERB avoir ind_pre
une DET un
relation NOUN relation
d' ADP de
équivalence NOUN équivalence
, PUNCT ,
il PRON il
est VERB être ind_pre
naturel ADJ naturel
d' ADP de
essayer VERB essayer inf
de ADP de
caractériser VERB caractériser inf
ses DET son
classes NOUN classe
d' ADP de
équivalence NOUN équivalence
. PUNCT .
Nous PRON nous
nous PRON nous
intéressons VERB intéresser ind_pre
ici ADV ici
à ADP à
la DET le
relation NOUN relation
de ADP de
similitude NOUN similitude
. PUNCT .
Soit VERB être sub_pre
( PUNCT (
A NOUN a
, PUNCT ,
B NOUN b
) PUNCT )
Mn NOUN minute
( PUNCT (
K)2 VERB k)2
tel ADJ tel
que SCONJ que
A VERB avoir ind_pre
B. NOUN b.
Alors ADV alors
: PUNCT :
1 NUM 1
. PUNCT .
rang(A NOUN rang(a
) PUNCT )
rang(B PRON rang(b
) PUNCT )
, PUNCT ,
trace(A PROPN trace(A
) PUNCT )
trace(B ADJ trace(b
) PUNCT )
et CCONJ et
det(A ADJ det(a
) PUNCT )
det(B PROPN det(B
) PUNCT )
Malheureusement ADV malheureusement
, PUNCT ,
ce PRON ce
ne ADV ne
sont VERB être ind_pre
que ADV que
des DET un
conditions NOUN condition
nécessaires ADJ nécessaire
. PUNCT .
Les DET le
matrices NOUN matrice
ont VERB avoir ind_pre
le DET le
même ADJ même
rang NOUN rang
( PUNCT (
4 NUM 4
) PUNCT )
, PUNCT ,
la DET le
même ADJ même
trace NOUN trace
( PUNCT (
0 NUM 0
) PUNCT )
, PUNCT ,
le DET le
même ADV même
déterminant VERB déterminer par_pre
( PUNCT (
0 NUM 0
) PUNCT )
, PUNCT ,
le DET le
même ADJ même
polynôme NOUN polynôme
caractéristique ADJ caractéristique
( PUNCT (
( PUNCT (
X)7 NOUN x)7
) PUNCT )
, PUNCT ,
le DET le
même ADJ même
polynôme NOUN polynôme
minimal ADJ minimal
( PUNCT (
X NOUN x
3 NUM 3
) PUNCT )
, PUNCT ,
le DET le
même ADJ même
spectre NOUN spectre
( PUNCT (
0 NUM 0
) PUNCT )
, PUNCT ,
la DET le
même ADJ même
dimension NOUN dimension
des ADP de
espaces NOUN espace
propres ADJ propre
( PUNCT (
3 NUM 3
) PUNCT )
et CCONJ et
la DET le
même ADJ même
dimension NOUN dimension
des ADP de
espaces NOUN espace
caractéristiques NOUN caractéristique
( PUNCT (
7 NUM 7
) PUNCT )
. PUNCT .
Mais CCONJ mais
elles PRON lui
ne ADV ne
sont VERB être ind_pre
pas ADV pas
semblables ADJ semblable
car CCONJ car
A2 PROPN A2
et CCONJ et
B NOUN b
2 NUM 2
ne ADV ne
ont VERB avoir ind_pre
pas ADV pas
même ADV même
rang NOUN rang
! PUNCT !
Cependant ADV cependant
, PUNCT ,
si SCONJ si
A ADP à
et CCONJ et
B NOUN b
sont VERB être ind_pre
diagonalisables VERB diagonalisabler
, PUNCT ,
alors ADV alors
: PUNCT :
1 NUM 1
. PUNCT .
Si SCONJ si
K NOUN k
C NOUN c
et CCONJ et
n AUX n
2 NUM 2
les DET le
classes NOUN classe
de ADP de
similitude NOUN similitude
sont VERB être ind_pre
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
les DET le
homothéties NOUN homothétie
de ADP de
rapport NOUN rapport
C NOUN c
( PUNCT (
avec ADP avec
( PUNCT (
X NOUN x
) PUNCT )
2 NUM 2
et CCONJ et
X NOUN x
) PUNCT )
( PUNCT (
c NOUN c
) PUNCT )
les DET le
matrices NOUN matrice
non ADV non
diagonalisables ADJ diagonalisable
semblables ADJ semblable
à ADP à
2 NUM 2
. PUNCT .
Si SCONJ si
K NOUN k
C NOUN c
et CCONJ et
n AUX n
3 NUM 3
, PUNCT ,
les DET le
classes NOUN classe
de ADP de
similitude NOUN similitude
sont VERB être ind_pre
: PUNCT :
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
les DET le
homothéties NOUN homothétie
( PUNCT (
avec ADP avec
( PUNCT (
X NOUN x
) PUNCT )
3 NUM 3
et CCONJ et
X NOUN x
) PUNCT )
( PUNCT (
b NOUN b
) PUNCT )
les DET le
matrices NOUN matrice
semblables ADJ semblable
à ADP à
( PUNCT (
c NOUN c
) PUNCT )
les DET le
matrices NOUN matrice
semblables ADJ semblable
à ADP à
( PUNCT (
d NOUN d
) PUNCT )
les DET le
matrices NOUN matrice
semblables ADJ semblable
à ADP à
( PUNCT (
e NOUN e
) PUNCT )
les DET le
matrices NOUN matrice
semblables ADJ semblable
à ADP à
( PUNCT (
f NOUN f
) PUNCT )
les DET le
matrices NOUN matrice
semblables ADJ semblable
à ADP à
La DET le
méthode NOUN méthode
générale ADJ général
pour ADP pour
montrer VERB montrer inf
que SCONJ que
A VERB avoir ind_pre
B NOUN b
est VERB être ind_pre
de ADP de
ramener VERB ramener inf
A NOUN a
et CCONJ et
B NOUN b
à ADP à
la DET le
même ADJ même
forme NOUN forme
réduite ADJ réduit
: PUNCT :
diagonale ADJ diagonal
, PUNCT ,
Dunford PROPN Dunford
, PUNCT ,
Frobenius PROPN Frobenius
( PUNCT (
voir VERB voir inf
plus ADV plus
loin ADV loin
) PUNCT )
, PUNCT ,
etc. ADJ etc.
Cela PRON cela
revient VERB revenir ind_pre
souvent ADV souvent
à ADP à
résoudre VERB résoudre inf
des DET un
systèmes NOUN système
linéaires ADJ linéaire
. PUNCT .
Les DET le
matrices NOUN matrice
suivantes ADJ suivant
sont VERB être ind_pre
semblables ADJ semblable
: PUNCT :
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
, PUNCT ,
u DET u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
et CCONJ et
x ADP x
E. PROPN E.
On PRON on
définit VERB définir ind_pre
: PUNCT :
Ix NUM Ix
l' DET le
idéal ADJ idéal
des ADP de
polynômes NOUN polynôme
annulateurs VERB annulateurs
x ADP x
, PUNCT ,
c' ADV c'
est ADV est
- ADV -
à ADV à
- ADV -
dire VERB dire inf
le DET le
noyau NOUN noyau
de ADP de
: PUNCT :
KX PROPN KX
E NOUN e
définie VERB définir par_pas
par ADP par
( PUNCT (
P NOUN p
) PUNCT )
x ADP x
le DET le
polynôme NOUN polynôme
minimal ADJ minimal
de ADP de
x NOUN x
( PUNCT (
le DET le
polynôme NOUN polynôme
unitaire ADJ unitaire
engendrant VERB engendrer par_pre
l' DET le
idéal ADJ idéal
Ix VERB ix
) PUNCT )
. PUNCT .
Le DET le
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
hxi VERB hxi
de ADP de
E NOUN e
est VERB être ind_pre
stable ADJ stable
par ADP par
u PROPN u
et CCONJ et
: PUNCT :
dim(hxi PRON dim(hxi
) PUNCT )
deg X deg
x NOUN x
par ADP par
factorisation NOUN factorisation
de ADP de
. PUNCT .
Si SCONJ si
: PUNCT :
alors ADV alors
hxi VERB hxi
Vect(x ADJ vect(x
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
uq1 NOUN uq1
( PUNCT (
x NOUN x
) PUNCT )
) PUNCT )
et CCONJ et
la DET le
matrice NOUN matrice
de ADP de
la DET le
restriction NOUN restriction
de ADP de
u PROPN u
à ADP à
hxi VERB hxi
dans ADP dans
la DET le
base NOUN base
( PUNCT (
x NOUN x
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
uq1 NOUN uq1
( PUNCT (
x NOUN x
) PUNCT )
) PUNCT )
est VERB être ind_pre
la DET le
matrice NOUN matrice
compagnon NOUN compagnon
de ADP de
x NOUN x
( PUNCT (
voir VERB voir inf
la DET le
définition NOUN définition
5.5 NUM 5.5
, PUNCT ,
page NOUN page
232 NUM 232
) PUNCT )
: PUNCT :
Il PRON il
existe VERB exister ind_pre
x NOUN x
E NOUN e
tel ADJ tel
que SCONJ que
x ADP x
u NOUN u
( PUNCT (
voir VERB voir inf
l' DET le
exercice NOUN exercice
4 NUM 4
de ADP de
la DET le
série NOUN série
d' ADP de
exercices NOUN exercice
5.1 NUM 5.1
, PUNCT ,
page NOUN page
236 NUM 236
) PUNCT )
. PUNCT .
Théorème NOUN théorème
5.7 NUM 5.7
Théorème NOUN théorème
de ADP de
Frobenius NOUN frobeniu
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Alors ADV alors
il PRON il
existe VERB exister ind_pre
r ADP r
N ADJ n
et CCONJ et
hxi VERB hxi
i ADJ i
et CCONJ et
, PUNCT ,
pour ADP pour
tout ADV tout
i NUM i
1 NUM 1
, PUNCT ,
r ADP r
1 NUM 1
, PUNCT ,
xi PROPN xi
xi1 ADJ xi1
et CCONJ et
xr CCONJ xr
u X u
Démonstration NOUN démonstration
Soit VERB être sub_pre
x ADP x
E NOUN e
tel ADJ tel
que SCONJ que
x ADP x
u NOUN u
( PUNCT (
voir VERB voir inf
la DET le
remarque NOUN remarque
précédente ADJ précédent
) PUNCT )
. PUNCT .
Alors ADV alors
dim(hxi PRON dim(hxi
) PUNCT )
deg X deg
u ADP u
et CCONJ et
en ADP en
particulier ADJ particulier
x ADP x
6 NUM 6
0E NOUN 0e
. PUNCT .
En ADP en
notant VERB noter par_pre
k NOUN k
deg PROPN deg
u NOUN u
, PUNCT ,
une DET un
base NOUN base
de ADP de
hxi PROPN hxi
est VERB être ind_pre
donnée VERB donner par_pas
par ADP par
: PUNCT :
On DET on
complète ADJ complet
en ADP en
une DET un
base NOUN base
( PUNCT (
e1 PROPN e1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
en ADP en
) PUNCT )
de ADP de
E. PROPN E.
Si SCONJ si
( PUNCT (
e?1 PROPN e?1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
e?n PUNCT e?n
) PUNCT )
est VERB être ind_pre
la DET le
base NOUN base
duale ADJ dual
associée VERB associer par_pas
, PUNCT ,
posons NOUN poson
: PUNCT :
Alors ADV alors
G NOUN gramme
est VERB être ind_pre
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
de ADP de
E NOUN e
stable ADJ stable
par ADP par
u. NOUN u.
Démontrons VERB démontrer ind_pre
que SCONJ que
E NOUN e
hxi VERB hxi
G. NOUN g.
ce PRON ce
qui PRON qui
contredit VERB contredire par_pas ind_pre
y PRON y
G. PROPN G.
On PRON on
a VERB avoir ind_pre
donc ADV donc
y PRON y
0E ADJ 0
d' ADP de
où PRON où
hx VERB hx
G NOUN gramme
0E NUM 0E
. PUNCT .
Par ADP par
dualité NOUN dualité
, PUNCT ,
pour ADP pour
montrer VERB montrer inf
que SCONJ que
dim ADP dim
G NOUN gramme
n NOUN n
dim(hxi PRON dim(hxi
) PUNCT )
n VERB n
k NOUN k
, PUNCT ,
il PRON il
suffit VERB suffire ind_pre
de ADP de
montrer VERB montrer inf
que SCONJ que
Considérons VERB considérer ind_pre
l' DET le
application NOUN application
de ADP de
Ku NOUN ku
dans ADP dans
Vect PROPN Vect
qui PRON qui
a VERB avoir ind_pre
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
Ku NOUN ku
associe VERB associer ind_pre
e?k ADJ e?k
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
. PUNCT .
Par ADP par
définition NOUN définition
de ADP de
, PUNCT ,
est VERB être ind_pre
surjective ADJ surjectif
. PUNCT .
Elle PRON lui
est VERB être ind_pre
de ADP de
plus ADV plus
injective NOUN injective
car CCONJ car
si SCONJ si
e?k VERB e?k
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
avec ADP avec
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
Ku NOUN ku
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
, PUNCT ,
ce PRON ce
qui PRON qui
est VERB être ind_pre
une DET un
contradiction NOUN contradiction
, PUNCT ,
donc ADV donc
P NOUN p
( PUNCT (
u NOUN u
) PUNCT )
0L NUM 0L
( PUNCT (
E NOUN e
) PUNCT )
donc ADV donc
est VERB être ind_pre
injective VERB injective
. PUNCT .
Finalement ADV finalement
, PUNCT ,
Ku NOUN ku
et CCONJ et
Vect PROPN Vect
( PUNCT (
) PUNCT )
sont VERB être ind_pre
isomorphes VERB isomorpher
donc ADV donc
la DET le
même ADJ même
dimension NOUN dimension
: PUNCT :
dim ADP dim
Vect PROPN Vect
( PUNCT (
) PUNCT )
dim ADP dim
Ku NOUN ku
deg X deg
u PRON u
k. NOUN k.
On PRON on
a VERB avoir ind_pre
donc ADV donc
bien ADV bien
E NOUN e
hxi VERB hxi
G NOUN gramme
avec ADP avec
G PROPN G
stable ADJ stable
par ADP par
u. VERB u.
Le DET le
polynôme NOUN polynôme
minimal ADJ minimal
de ADP de
uhxi NOUN uhxi
est VERB être ind_pre
x ADP x
u X u
donc ADV donc
divise VERB diviser ind_pre
le DET le
polynôme ADJ polynôm
minimal ADJ minimal
de ADP de
uG X uG
On PRON on
recommence VERB recommencer ind_pre
alors ADV alors
la DET le
démonstration NOUN démonstration
avec ADP avec
G NOUN gramme
à ADP à
la DET le
place NOUN place
de ADP de
E NOUN e
et CCONJ et
uG X uG
G NOUN gramme
à ADP à
la DET le
place NOUN place
de ADP de
u. NOUN u.
En ADP en
un DET un
nombre NOUN nombre
fini VERB finir par_pas
r ADP r
d' ADP de
étapes NOUN étape
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
la DET le
décomposition NOUN décomposition
voulue ADJ vouloir
. PUNCT .
Cette DET ce
décomposition NOUN décomposition
est VERB être ind_pre
unique ADJ unique
, PUNCT ,
dans ADP dans
le DET le
sens NOUN sens
où PRON où
si SCONJ si
( PUNCT (
y1 PROPN y1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
ys PROPN ys
) PUNCT )
E NOUN e
s NUM s
( PUNCT (
0E X 0E
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
0E NUM 0E
) PUNCT )
vérifie VERB vérifier ind_pre
: PUNCT :
hyi PROPN hyi
i ADJ i
et CCONJ et
, PUNCT ,
pour ADP pour
tout ADV tout
i NUM i
1 NUM 1
, PUNCT ,
r ADP r
1 NUM 1
, PUNCT ,
yi PROPN yi
yi1 PROPN yi1
et CCONJ et
ys DET ys
u X u
alors ADV alors
s X s
r NOUN r
et CCONJ et
pour ADP pour
tout ADV tout
i NUM i
1 NUM 1
, PUNCT ,
s X s
, PUNCT ,
yi DET yi
xi PRON xi
. PUNCT .
Soit VERB être sub_pre
E NOUN e
un DET un
K NOUN k
- NOUN -
espace NOUN espace
vectoriel NOUN vectoriel
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
non ADV non
nulle ADJ nul
et CCONJ et
u AUX u
L NOUN l
( PUNCT (
E NOUN e
) PUNCT )
. PUNCT .
Les DET le
polynômes NOUN polynôme
P1 NUM P1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Pr PROPN Pr
où PRON où
, PUNCT ,
pour ADP pour
tout ADV tout
i NUM i
1 NUM 1
, PUNCT ,
r X r
, PUNCT ,
Pi NOUN pi
xi PRON xi
donné VERB donner par_pas
par ADP par
le DET le
théorème NOUN théorème
5.7 NUM 5.7
, PUNCT ,
page NOUN page
précédente ADJ précédent
, PUNCT ,
sont VERB être ind_pre
appelées VERB appeler par_pas
les DET le
invariants NOUN invariant
de ADP de
similitude NOUN similitude
de ADP de
u. NOUN u.
La DET le
matrice NOUN matrice
de ADP de
u PROPN u
dans ADP dans
la DET le
base NOUN base
E NOUN e
de ADP de
E PROPN E
adaptée VERB adapter par_pas
à ADP à
la DET le
décomposition NOUN décomposition
de ADP de
E NOUN e
du ADP de
théorème NOUN théorème
5.7 NUM 5.7
, PUNCT ,
page NOUN page
précédente ADJ précédent
: PUNCT :
est VERB être ind_pre
appelée VERB appeler par_pas
forme NOUN forme
de ADP de
Frobenius NOUN frobeniu
. PUNCT .
Théorème NOUN théorème
5.8 NUM 5.8
Caractérisation NOUN caractérisation
des ADP de
classes NOUN classe
de ADP de
similitudes NOUN similitude
Deux NUM Deux
matrices NOUN matrice
A NOUN a
et CCONJ et
B NOUN b
de ADP de
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
sont VERB être ind_pre
semblables ADJ semblable
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
elles PRON lui
sont VERB être ind_pre
les DET le
mêmes ADJ même
invariants NOUN invariant
de ADP de
similitude ADJ similitud
. PUNCT .
Démonstration NOUN démonstration
C' PRON ce
est VERB être ind_pre
une DET un
application NOUN application
directe ADJ direct
du ADP de
théorème NOUN théorème
de ADP de
Frobenius NOUN frobeniu
( PUNCT (
théorème NOUN théorème
5.7 NUM 5.7
, PUNCT ,
page NOUN page
précédente ADJ précédent
) PUNCT )
. PUNCT .
Les DET le
théorèmes NOUN théorème
5.7 NUM 5.7
, PUNCT ,
page NOUN page
précédente ADJ précédent
et CCONJ et
5.8 NUM 5.8
, PUNCT ,
de ADP de
la DET le
présente ADJ présent
page NOUN page
permettent VERB permettre ind_pre
de ADP de
montrer VERB montrer inf
de DET de
nombreux ADJ nombreux
résultats NOUN résultat
théoriques ADJ théorique
, PUNCT ,
par ADP par
exemple NOUN exemple
: PUNCT :
la DET le
réduction NOUN réduction
de ADP de
Jordan PROPN Jordan
des ADP de
endomorphismes NOUN endomorphisme
nilpotents NOUN nilpotent
( PUNCT (
voir VERB voir inf
la DET le
proposition NOUN proposition
5.3 NUM 5.3
, PUNCT ,
page NOUN page
249 NUM 249
) PUNCT )
le DET le
fait NOUN fait
que SCONJ que
toute DET tout
matrice NOUN matrice
est VERB être ind_pre
semblable ADJ semblable
à ADP à
sa DET son
transposée VERB transposer par_pas
si SCONJ si
deux NUM deux
matrices NOUN matrice
A NOUN a
et CCONJ et
B NOUN b
de ADP de
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
sont VERB être ind_pre
semblables ADJ semblable
en ADP en
tant ADV tant
que SCONJ que
matrices NOUN matrice
de ADP de
Mn NOUN minute
( PUNCT (
L NOUN l
) PUNCT )
, PUNCT ,
où PRON où
L NOUN l
est VERB être ind_pre
un DET un
surcorps NOUN surcorp
de ADP de
K NOUN k
, PUNCT ,
alors ADV alors
elles PRON lui
sont VERB être ind_pre
semblables ADJ semblable
sur ADP sur
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
( PUNCT (
en ADP en
effet NOUN effet
, PUNCT ,
par ADP par
unicité NOUN unicité
, PUNCT ,
les DET le
invariants NOUN invariant
de ADP de
similitude NOUN similitude
dans ADP dans
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
sont VERB être ind_pre
les DET le
invariants NOUN invariant
de ADP de
similitudes NOUN similitude
dans ADP dans
Mn NOUN minute
( PUNCT (
L NOUN l
) PUNCT )
) PUNCT )
. PUNCT .
Si SCONJ si
C(P PROPN C(P
) PUNCT )
est VERB être ind_pre
une DET un
matrice NOUN matrice
compagnon NOUN compagnon
, PUNCT ,
sa DET son
forme NOUN forme
de ADP de
Jordan PROPN Jordan
ne ADV ne
fait VERB faire par_pas ind_pre
apparaître VERB apparaître inf
qu' SCONJ que
un PRON un
et CCONJ et
un DET un
seul ADJ seul
bloc NOUN bloc
pour ADP pour
chaque DET chaque
valeur NOUN valeur
propre ADJ propre
( PUNCT (
est VERB être ind_pre
une DET un
racine NOUN racine
de ADP de
P NOUN p
et CCONJ et
la DET le
taille NOUN taille
du ADP de
bloc NOUN bloc
est VERB être ind_pre
son DET son
ordre NOUN ordre
de ADP de
multiplicité NOUN multiplicité
) PUNCT )
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
ainsi ADV ainsi
obtenir VERB obtenir inf
la DET le
forme NOUN forme
de ADP de
Jordan PROPN Jordan
d' ADP de
une DET un
matrice NOUN matrice
à ADP à
partir VERB partir inf
de ADP de
sa DET son
forme NOUN forme
de ADP de
Frobenius NOUN frobeniu
. PUNCT .
On PRON on
peut VERB pouvoir ind_pre
montrer VERB montrer inf
que SCONJ que
si SCONJ si
une DET un
matrice NOUN matrice
A ADP à
Mn NOUN minute
( PUNCT (
K NOUN k
a VERB avoir ind_pre
pour ADP pour
invariants NOUN invariant
de ADP de
similitude NOUN similitude
P1 PROPN P1
, PUNCT ,
. PUNCT .
. PUNCT .
. PUNCT .
, PUNCT ,
Pr PROPN Pr
, PUNCT ,
alors ADV alors
: PUNCT :
On PRON on
parle VERB parler ind_pre
alors ADV alors
de ADP de
forme NOUN forme
de ADP de
Smith PROPN Smith
. PUNCT .
On PRON on
a VERB avoir ind_pre
un DET un
algorithme NOUN algorithme
simple ADJ simple
( PUNCT (
à ADP à
base NOUN base
de ADP de
pivots NOUN pivot
, PUNCT ,
voir VERB voir inf
plus ADV plus
bas ADJ bas
) PUNCT )
qui PRON qui
permet VERB permettre ind_pre
de ADP de
calculer VERB calculer inf
cette DET ce
forme NOUN forme
et CCONJ et
ainsi ADV ainsi
trouver VERB trouver inf
les DET le
invariants NOUN invariant
de ADP de
similitude NOUN similitude
de ADP de
A NOUN a
et CCONJ et
sa DET son
forme NOUN forme
de ADP de
Frobenius NOUN frobeniu
. PUNCT .
Cela PRON cela
permet VERB permettre ind_pre
notamment ADV notamment
de ADP de
répondre VERB répondre inf
à ADP à
la DET le
question NOUN question
: PUNCT :
Les DET le
matrices NOUN matrice
A NOUN a
et CCONJ et
B NOUN b
sont VERB être ind_pre
- PUNCT -
elles PRON lui
semblables ADJ semblable
? PUNCT ?
De ADP de
plus ADV plus
, PUNCT ,
dans ADP dans
cet DET ce
algorithme NOUN algorithme
, PUNCT ,
il PRON il
ne ADV ne
y PRON y
a VERB avoir ind_pre
pas ADV pas
besoin NOUN besoin
de ADP de
factoriser VERB factoriser inf
les DET le
polynômes NOUN polynôme
, PUNCT ,
cela PRON cela
fonctionne VERB fonctionner ind_pre
dans ADP dans
ne ADV ne
importe VERB importer ind_pre
quel DET quel
corps NOUN corps
. PUNCT .
Les DET le
matrices NOUN matrice
P NOUN p
et CCONJ et
Q NOUN q
du ADP de
théorème NOUN théorème
sont VERB être ind_pre
dans ADP dans
GLn PROPN GLn
( PUNCT (
KX PROPN KX
) PUNCT )
, PUNCT ,
leurs DET leur
déterminants NOUN déterminant
sont VERB être ind_pre
donc ADV donc
inversibles ADJ inversible
dans ADP dans
KX PROPN KX
, PUNCT ,
ces DET ce
déterminants NOUN déterminant
sont VERB être ind_pre
donc ADV donc
des ADP de
polynômes NOUN polynôme
constants ADJ constant
non ADV non
nuls ADJ nul
! PUNCT !
On PRON on
note NOUN note
M NOUN m
A NOUN a
X.In NOUN x.in
mi PROPN mi
, PUNCT ,
j PROPN j
( PUNCT (
i NOUN i
, PUNCT ,
j)1,n2 NOUN j)1,n2
et CCONJ et
Étape NOUN étape
1 NUM 1
Par ADP par
permutations NOUN permutation
de ADP de
lignes NOUN ligne
et CCONJ et
de ADP de
colonnes NOUN colonne
, PUNCT ,
on PRON on
se PRON se
ramène VERB ramener ind_pre
au ADP à
cas NOUN cas
où PRON où
deg PROPN deg
m1,1 PROPN m1,1
( PUNCT (
M NOUN m
) PUNCT )
. PUNCT .
Étape NOUN étape
2 NUM 2
Si SCONJ si
il PRON il
existe VERB exister ind_pre
sur ADP sur
la DET le
première ADJ premier
ligne NOUN ligne
( PUNCT (
ou CCONJ ou
la DET le
première ADJ premier
colonne NOUN colonne
) PUNCT )
un DET un
élément NOUN élément
m1,k PROPN m1,k
( PUNCT (
ou CCONJ ou
mk,1 NOUN mk,1
) PUNCT )
non ADV non
multiple ADJ multiple
de ADP de
m1,1 PROPN m1,1
, PUNCT ,
on PRON on
le PRON le
remplace NOUN remplace
( PUNCT (
en ADP en
utilisant VERB utiliser par_pre
une DET un
transvection NOUN transvection
) PUNCT )
par ADP par
le DET le
reste NOUN reste
de ADP de
la DET le
division NOUN division
euclidienne ADJ euclidien
de ADP de
m1,k PROPN m1,k
( PUNCT (
ou CCONJ ou
mk,1 NOUN mk,1
) PUNCT )
par ADP par
m1,1 PROPN m1,1
et CCONJ et
on PRON on
revient VERB revenir ind_pre
à ADP à
l' DET le
étape NOUN étape
1 NUM 1
en ADP en
permutant ADV permutant
les DET le
colonnes NOUN colonne
( PUNCT (
ou CCONJ ou
les DET le
lignes NOUN ligne
) PUNCT )
1 NUM 1
et CCONJ et
k. NOUN k.
Etape NOUN etape
3 NUM 3
L' DET le
étape NOUN étape
2 NUM 2
a VERB avoir ind_pre
pour ADP pour
effet NOUN effet
de ADP de
diminuer VERB diminuer inf
strictement ADV strictement
( PUNCT (
M NOUN m
) PUNCT )
, PUNCT ,
elle PRON lui
ne ADV ne
peut VERB pouvoir ind_pre
donc ADV donc
se PRON se
réaliser VERB réaliser inf
qu' SCONJ que
un DET un
nombre NOUN nombre
fini VERB finir par_pas
de ADP de
fois NOUN fois
. PUNCT .
Ainsi ADV ainsi
, PUNCT ,
on PRON on
se PRON se
ramène VERB ramener ind_pre
au ADP à
cas NOUN cas
où PRON où
tous ADJ tout
les DET le
éléments NOUN élément
de ADP de
la DET le
première ADJ premier
ligne NOUN ligne
et CCONJ et
de ADP de
la DET le
première ADJ premier
colonne NOUN colonne
sont VERB être ind_pre
multiples ADJ multiple
de ADP de
m1,1 NOUN m1,1
. PUNCT .
On PRON on
utilise VERB utiliser ind_pre
alors ADV alors
m1,1 VERB m1,1
comme ADP comme
pivot NOUN pivot
pour ADP pour
les PRON le
annuler VERB annuler inf
. PUNCT .
Étape NOUN étape
4 NUM 4
On PRON on
obtient VERB obtenir ind_pre
une DET un
matrice NOUN matrice
de ADP de
la DET le
forme NOUN forme
et CCONJ et
, PUNCT ,
si SCONJ si
m1,1 PRON m1,1
ne ADV ne
divise VERB diviser ind_pre
pas ADV pas
un PRON un
des ADP de
éléments NOUN élément
de ADP de
M1 NOUN m1
, PUNCT ,
par ADP par
exemple NOUN exemple
mi X mi
, PUNCT ,
j PROPN j
, PUNCT ,
on PRON on
fait VERB faire ind_pre
apparaître VERB apparaître inf
( PUNCT (
par ADP par
des DET un
transvections ADJ transvection
) PUNCT )
le DET le
reste NOUN reste
de ADP de
la DET le
division NOUN division
euclidienne ADJ euclidien
de ADP de
mi PROPN mi
, PUNCT ,
j PROPN j
par ADP par
m1,1 PROPN m1,1
puis CCONJ puis
par ADP par
des DET un
permutations NOUN permutation
on PRON on
l' DET le
échange NOUN échange
avec ADP avec
m1,1 NOUN m1,1
et CCONJ et
on PRON on
recommence VERB recommencer ind_pre
l' DET le
étape NOUN étape
1 NUM 1
. PUNCT .
Étape NOUN étape
5 NUM 5
Au ADP au
bout NOUN bout
d' ADP de
un DET un
nombre NOUN nombre
fini VERB finir par_pas
d' ADP de
étapes NOUN étape
, PUNCT ,
on PRON on
obtient VERB obtenir ind_pre
une DET un
matrice NOUN matrice
de ADP de
la DET le
forme NOUN forme
où PRON où
m1,1 NOUN m1,1
divise VERB diviser ind_pre
tous ADJ tout
les DET le
éléments NOUN élément
de ADP de
M1 NOUN m1
et CCONJ et
on PRON on
recommence VERB recommencer ind_pre
l' DET le
étape NOUN étape
1 NUM 1
à ADP à
partir VERB partir inf
de ADP de
la DET le
matrice NOUN matrice
M1 NOUN m1
qui PRON qui
est VERB être ind_pre
de ADP de
taille NOUN taille
strictement ADV strictement
plus ADV plus
petite ADJ petit
. PUNCT .
La DET le
forme NOUN forme
de ADP de
Smith PROPN Smith
correspondante ADJ correspondant
est VERB être ind_pre
: PUNCT :
donc ADV donc
les DET le
invariants NOUN invariant
de ADP de
similitude NOUN similitude
de ADP de
A NOUN a
sont VERB être ind_pre
( PUNCT (
A ADP à
( PUNCT (
X NOUN x
2)3 NUM 2)3
) PUNCT )
( PUNCT (
un DET un
seul ADJ seul
élément NOUN élément
) PUNCT )
. PUNCT .
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
sa DET son
forme NOUN forme
de ADP de
Frobenius NOUN frobeniu
est VERB être ind_pre
: PUNCT :
La DET le
forme NOUN forme
de ADP de
Smith PROPN Smith
correspondante ADJ correspondant
est VERB être ind_pre
donc ADV donc
les DET le
invariants NOUN invariant
de ADP de
similitude NOUN similitude
de ADP de
A NOUN a
sont VERB être ind_pre
( PUNCT (
X NOUN x
1 NUM 1
, PUNCT ,
A ADP à
( PUNCT (
X NOUN x
1)2 NOUN 1)2
) PUNCT )
. PUNCT .
On PRON on
en PRON en
déduit VERB déduire par_pas ind_pre
que SCONJ que
sa DET son
forme NOUN forme
de ADP de
Frobenius NOUN frobeniu
5.5.1 NUM 5.5.1
Déterminer VERB déterminer inf
la DET le
forme NOUN forme
de ADP de
Frobenius NOUN frobeniu
de ADP de
la DET le
matrice NOUN matrice
: PUNCT :
5.5.2 PROPN 5.5.2
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
sont VERB être ind_pre
semblables ADJ semblable
. PUNCT .
5.5.3 PROPN 5.5.3
Démontrer VERB démontrer inf
que SCONJ que
si SCONJ si
n AUX n
2 NUM 2
, PUNCT ,
3 NUM 3
, PUNCT ,
deux NUM deux
matrices NOUN matrice
de ADP de
Mn NOUN minute
( PUNCT (
K NOUN k
) PUNCT )
sont VERB être ind_pre
semblables ADJ semblable
si SCONJ si
, PUNCT ,
et CCONJ et
seulement ADV seulement
si SCONJ si
, PUNCT ,
elles PRON lui
ont VERB avoir ind_pre
le DET le
même ADJ même
polynôme NOUN polynôme
caractéristique ADJ caractéristique
et CCONJ et
le DET le
même ADJ même
polynôme NOUN polynôme
minimal ADJ minimal
. PUNCT .
Démontrer VERB démontrer inf
que SCONJ que
ce DET ce
résultat NOUN résultat
est VERB être ind_pre
faux ADJ faux
5.5.5 PROPN 5.5.5
Démontrer VERB démontrer inf
que SCONJ que
: PUNCT :
est VERB être ind_pre
un DET un
ouvert NOUN ouvert
dense ADJ dense
de ADP de
Mn NOUN minute
( PUNCT (
C NOUN c
) PUNCT )
. PUNCT .
5.5.6 PROPN 5.5.6
Démontrer VERB démontrer inf
que SCONJ que
l' DET le
adhérence NOUN adhérence
de ADP de
: PUNCT :
est VERB être ind_pre
l' DET le
ensemble NOUN ensemble
des ADP de
matrices NOUN matrice
A ADP à
telles ADJ tel
que SCONJ que
Sp(A PROPN Sp(A
) PUNCT )
U NOUN u
z X z
C NOUN c
, PUNCT ,
z VERB z
1 PRON 1
. PUNCT .
( PUNCT (
a VERB avoir ind_pre
) PUNCT )
On PRON on
suppose VERB supposer ind_pre
que SCONJ que
P NOUN p
est VERB être ind_pre
scindé VERB scinder par_pas
dans ADP dans
K NOUN k
, PUNCT ,
à ADP à
quelle DET quel
condition NOUN condition
C(P ADJ c(p
) PUNCT )
est-elle CCONJ est-elle
diagonalisable ADJ diagonalisable
? PUNCT ?
( PUNCT (
b NOUN b
) PUNCT )
On PRON on
suppose VERB supposer ind_pre
que SCONJ que
P NOUN p
est VERB être ind_pre
irréductible ADJ irréductible
, PUNCT ,
montrer VERB montrer inf
qu' SCONJ que
en ADP en
ce DET ce
cas NOUN cas
KC(P PROPN KC(P
) PUNCT )
est VERB être ind_pre
un DET un
corps NOUN corps
P NOUN p
admet VERB admettre ind_pre
au ADP à
moins ADV moins
une DET un
racine NOUN racine
( PUNCT (
laquelle PRON lequel
? PUNCT ?
) PUNCT )
. PUNCT .
En ADP en
déduire VERB déduire inf
la DET le
construction NOUN construction
d' ADP de
un DET un
corps NOUN corps
à ADP à
4 NUM 4
éléments NOUN élément
et CCONJ et
d' ADP de
un DET un
corps NOUN corps
à ADP à
8 NUM 8
Un DET un
exemple NOUN exemple
d' ADP de
utilisation NOUN utilisation
de ADP de
la DET le
réduction NOUN réduction
sur ADP sur
un DET un
corps NOUN corps
fini VERB finir par_pas
Dans ADP dans
tout ADJ tout
ce DET ce
chapitre NOUN chapitre
, PUNCT ,
nous PRON nous
avons VERB avoir
travaillé VERB travailler pas_cop
dans ADP dans
un DET un
corps NOUN corps
commutatif ADJ commutatif
quelconque ADJ quelconque
, PUNCT ,
et CCONJ et
plus ADV plus
nécessairement ADV nécessairement
dans ADP dans
R NOUN r
ou CCONJ ou
C. PROPN C.
Voici VERB voici
un DET un
petit ADJ petit
exemple NOUN exemple
de ADP de
synthèse NOUN synthèse
montrant VERB montrer par_pre
comment ADV comment
on PRON on
peu ADV peu
utiliser VERB utiliser inf
les DET le
notions NOUN notion
vues VERB voir par_pas
ici ADV ici
dans ADP dans
un DET un
corps NOUN corps
fini VERB finir par_pas
. PUNCT .
Cet DET ce
exercice NOUN exercice
a VERB avoir
été VERB être pas_cop
posé VERB poser par_pas
à ADP à
un DET un
oral NOUN oral
de ADP de
concours NOUN concours
dans ADP dans
les DET le
années NOUN année
70 NUM 70
... PUNCT ...
Soit VERB être sub_pre
( PUNCT (
a VERB avoir ind_pre
, PUNCT ,
b NOUN b
, PUNCT ,
u0 PROPN u0
, PUNCT ,
u1 NOUN u1
) PUNCT )
Z2 PROPN Z2
, PUNCT ,
on PRON on
construit VERB construire ind_pre
successivement ADV successivement
les DET le
suites NOUN suite
récurrentes ADJ récurrent
: PUNCT :
Nous PRON nous
allons VERB aller
démontrer VERB démontrer fut_pro
que SCONJ que
1 NUM 1
. PUNCT .
La DET le
suite NOUN suite
( PUNCT (
vn PROPN vn
) PUNCT )
nN NOUN nn
est VERB être ind_pre
périodique ADJ périodique
à ADP à
partir VERB partir inf
d' ADP de
un DET un
certain ADJ certain
rang NOUN rang
. PUNCT .
2 NUM 2
. PUNCT .
Et CCONJ et
sa DET son
période NOUN période
est VERB être ind_pre
dans ADP dans
l' DET le
ensemble NOUN ensemble
des ADP de
diviseurs NOUN diviseur
stricts ADJ strict
de ADP de
120 PRON 120
. PUNCT .
Démonstration NOUN démonstration
de ADP de
la DET le
périodicité NOUN périodicité
La DET le
suite NOUN suite
( PUNCT (
vn PROPN vn
, PUNCT ,
vn1 PROPN vn1
) PUNCT )
nN NOUN nn
est VERB être ind_pre
à ADP à
valeurs NOUN valeur
dans ADP dans
0 NUM 0
, PUNCT ,
92 PRON 92
qui PRON qui
est VERB être ind_pre
fini VERB finir par_pas
. PUNCT .
Il PRON il
existe VERB exister ind_pre
donc ADV donc
deux NUM deux
entiers NOUN entier
distincts ADJ distinct
( PUNCT (
p NOUN p
, PUNCT ,
q CCONJ q
) PUNCT )
N2 NOUN n2
, PUNCT ,
p NOUN p
q PUNCT q
tels ADJ tel
que SCONJ que
Il PRON il
est VERB être ind_pre
alors ADV alors
facile ADJ facile
de ADP de
démontrer VERB démontrer inf
par ADP par
récurrence NOUN récurrence
sur ADP sur
n NOUN n
que SCONJ que
: PUNCT :
la DET le
suite NOUN suite
est VERB être ind_pre
donc ADV donc
périodique ADJ périodique
à ADP à
partir VERB partir inf
du ADP de
rang NOUN rang
p NOUN p
, PUNCT ,
et CCONJ et
sa DET son
période NOUN période
est VERB être ind_pre
un DET un
diviseur NOUN diviseur
de ADP de
q PRON q
p. NOUN p.
Démonstration NOUN démonstration
des ADP de
valeurs NOUN valeur
possibles ADJ possible
de ADP de
la DET le
période NOUN période
On PRON on
peut VERB pouvoir ind_pre
considérer VERB considérer inf
qu' SCONJ que
on PRON on
travaille VERB travailler ind_pre
en ADP en
fait NOUN fait
dans ADP dans
l' DET le
anneau NOUN anneau
Z10 NOUN z10
Z VERB z
qui PRON qui
, PUNCT ,
par ADP par
théorème NOUN théorème
chinois ADJ chinois
, PUNCT ,
est VERB être ind_pre
isomorphe NOUN isomorphe
à ADP à
Z2 PROPN Z2
Z PRON z
Z5 VERB z5
Z. PROPN Z.
Nous PRON nous
pouvons VERB pouvoir ind_pre
donc ADV donc
travailler VERB travailler inf
dans ADP dans
des DET un
corps NOUN corps
. PUNCT .
1 NUM 1
. PUNCT .
Dans ADP dans
Z2 AUX z2
Z NOUN z
La DET le
vectorialisation NOUN vectorialisation
de ADP de
la DET le
suite NOUN suite
( PUNCT (
en ADP en
notant VERB noter par_pre
a VERB avoir ind_pre
la DET le
classe NOUN classe
de ADP de
a VERB avoir ind_pre
dans ADP dans
Z2 PROPN Z2
Z PROPN Z
) PUNCT )
donne VERB donner ind_pre
On PRON on
obtient VERB obtenir ind_pre
alors ADV alors
que SCONJ que
A NOUN a
est VERB être ind_pre
semblable ADJ semblable
à ADP à
une DET un
matrice NOUN matrice
parmi ADP parmi
( PUNCT (
Z2 PROPN Z2
Z PROPN Z
) PUNCT )
impossible ADJ impossible
de ADP de
période NOUN période
1 NUM 1
ou CCONJ ou
2 NUM 2
de ADP de
période NOUN période
1 NUM 1
si SCONJ si
son DET son
polynôme NOUN polynôme
caractéristique ADJ caractéristique
est VERB être ind_pre
scindé VERB scinder par_pas
. PUNCT .
Lorsque SCONJ lorsque
son DET son
polynôme NOUN polynôme
caractéristique ADJ caractéristique
ne ADV ne
est VERB être ind_pre
pas ADV pas
scindé VERB scinder par_pas
, PUNCT ,
de ADP de
degré NOUN degré
2 NUM 2
, PUNCT ,
il PRON il
est VERB être ind_pre
alors ADV alors
irréductible ADJ irréductible
( PUNCT (
c' PRON ce
est VERB être ind_pre
X NOUN x
2 NUM 2
X NOUN x
1 PRON 1
) PUNCT )
donc ADV donc
, PUNCT ,
en ADP en
posant VERB poser par_pre
C(A PROPN C(A
) PUNCT )
, PUNCT ,
et CCONJ et
en ADP en
se PRON se
plaçant VERB placer par_pre
dans ADP dans
M2 NOUN m2
( PUNCT (
Z2 PROPN Z2
Z NOUN z
) PUNCT )
, PUNCT ,
les DET le
racines NOUN racine
de ADP de
A NOUN a
sont VERB être ind_pre
alors ADV alors
et CCONJ et
I2 VERB i2
, PUNCT ,
distinctes ADJ distinct
. PUNCT .
Donc ADV donc
A VERB avoir ind_pre
est VERB être ind_pre
semblable ADJ semblable
à ADP à
Diag PROPN Diag
( PUNCT (
, PUNCT ,
I2 VERB i2
) PUNCT )
. PUNCT .
Or CCONJ or
la DET le
période NOUN période
est VERB être ind_pre
de ADP de
3 PRON 3
. PUNCT .
Dans ADP dans
Z2 AUX z2
Z VERB z
les DET le
périodes NOUN période
de ADP de
la DET le
suite NOUN suite
( PUNCT (
un DET un
) PUNCT )
nN NOUN nn
sont VERB être ind_pre
, PUNCT ,
à ADP à
partir VERB partir inf
d' ADP de
un DET un
certain ADJ certain
rang NOUN rang
1 NUM 1
, PUNCT ,
2 NUM 2
ou CCONJ ou
3 NUM 3
. PUNCT .
2 NUM 2
. PUNCT .
Dans ADP dans
Z5 NOUN z5
Z NOUN z
( PUNCT (
Nous PRON nous
noterons VERB noter fut_sim
toujours ADV toujours
les DET le
classes NOUN classe
sous ADP sous
la DET le
forme NOUN forme
a VERB avoir ind_pre
) PUNCT )
Le DET le
même ADJ même
raisonnement NOUN raisonnement
nous PRON nous
conduit VERB conduire par_pas ind_pre
, PUNCT ,
lorsque SCONJ lorsque
le DET le
polynôme NOUN polynôme
caractéristique ADJ caractéristique
est VERB être ind_pre
scindé VERB scinder par_pas
aux ADP à
matrices NOUN matrice
( PUNCT (
( PUNCT (
, PUNCT ,
) PUNCT )
Z5 VERB z5
Z2 PROPN Z2
) PUNCT )
impossible ADJ impossible
de ADP de
période NOUN période
1 NUM 1
, PUNCT ,
5 NUM 5
ou CCONJ ou
20 NUM 20
de ADP de
période NOUN période
1 NUM 1
, PUNCT ,
2 NUM 2
ou CCONJ ou
4 NUM 4
En ADP en
effet NOUN effet
, PUNCT ,
on PRON on
sait VERB savoir ind_pre
d' ADP de
après ADP après
le DET le
petit ADJ petit
théorème NOUN théorème
de ADP de
Fermat NOUN fermat
que SCONJ que
ce PRON ce
qui PRON qui
justifie VERB justifier ind_pre sub_pre
la DET le
période NOUN période
1 NUM 1
, PUNCT ,
2 NUM 2
ou CCONJ ou
4 PRON 4
pour ADP pour
la DET le
troisième ADJ troisième
forme NOUN forme
de ADP de
matrice NOUN matrice
. PUNCT .
De ADP de
plus ADV plus
, PUNCT ,
si SCONJ si
n AUX n
N ADJ n
, PUNCT ,
à ADP à
l' DET le
aide NOUN aide
de ADP de
la DET le
formule NOUN formule
du ADP de
binôme NOUN binôme
de ADP de
Newton PROPN Newton
, PUNCT ,
on PRON on
a VERB avoir ind_pre
si SCONJ si
6 PRON 6
0 NUM 0
( PUNCT (
cas NOUN cas
évident ADJ évident
où PRON où
la DET le
période NOUN période
est VERB être ind_pre
1 NUM 1
, PUNCT ,
à ADP à
partir VERB partir inf
du ADP de
second ADJ second
rang NOUN rang
) PUNCT )
et CCONJ et
6 DET 6
1 PRON 1
( PUNCT (
cas NOUN cas
simple ADJ simple
ou CCONJ ou
la DET le
périodicité NOUN périodicité
est VERB être ind_pre
5 NUM 5
, PUNCT ,
la DET le
première ADJ premier
condition NOUN condition
ci-dessous ADV ci-dessous
étant VERB être par_pre
inutile ADJ inutile
) PUNCT )
, PUNCT ,
la DET le
matrice NOUN matrice
est VERB être ind_pre
égale ADJ égal
à ADP à
I2 VERB i2
si SCONJ si
ce PRON ce
qui PRON qui
nous PRON nous
donne VERB donner ind_pre
une DET un
période NOUN période
de ADP de
10 NUM 10
ou CCONJ ou
20 NUM 20
. PUNCT .
mod NOUN mod
5 NUM 5
et CCONJ et
n NOUN n
Lorsque SCONJ lorsque
le DET le
polynôme NOUN polynôme
caractéristique ADJ caractéristique
de ADP de
A VERB avoir ind_pre
ne ADV ne
est VERB être ind_pre
plus ADV plus
scindé VERB scinder par_pas
, PUNCT ,
il PRON il
est VERB être ind_pre
irréductible ADJ irréductible
( PUNCT (
car CCONJ car
de ADP de
degré NOUN degré
2 NUM 2
) PUNCT )
, PUNCT ,
en ADP en
posant VERB poser par_pre
C(A PROPN C(A
) PUNCT )
, PUNCT ,
et CCONJ et
en ADP en
travaillant VERB travailler par_pre
dans ADP dans
le DET le
corps NOUN corps
K NOUN k
Z5 NOUN z5
Z NOUN z
qui PRON qui
est VERB être ind_pre
de ADP de
cardinal NOUN cardinal
25 NUM 25
, PUNCT ,
on PRON on
a VERB avoir ind_pre
( PUNCT (
même ADV même
démonstration NOUN démonstration
que SCONJ que
Fermat NOUN fermat
) PUNCT )
on PRON on
a VERB avoir ind_pre
donc ADV donc
de ADP de
période NOUN période
3 NUM 3
, PUNCT ,
6 NUM 6
, PUNCT ,
8 NUM 8
, PUNCT ,
12 NUM 12
ou CCONJ ou
24 NUM 24
. PUNCT .
En ADP en
enlevant VERB enlever par_pre
celle PRON celui
qu' PRON qu'
on PRON on
connaît VERB connaître ind_pre
( PUNCT (
1 NUM 1
, PUNCT ,
2 NUM 2
et CCONJ et
4 NUM 4
correspondant VERB correspondre par_pre
aux ADP à
matrices NOUN matrice
précédemment ADV précédemment
vues VERB voir par_pas
) PUNCT )
Dans ADP dans
Z5 NOUN z5
Z NOUN z
les DET le
périodes NOUN période
de ADP de
la DET le
suite NOUN suite
( PUNCT (
un DET un
) PUNCT )
nN NOUN nn
sont VERB être ind_pre
, PUNCT ,
à ADP à
partir VERB partir inf
d' ADP de
un DET un
certain ADJ certain
rang NOUN rang
dans ADP dans
Finalement ADV finalement
les DET le
périodes NOUN période
possibles ADJ possible
sont VERB être ind_pre
, PUNCT ,
d' ADP de
après ADP après
le DET le
théorème NOUN théorème
chinois ADJ chinois
( PUNCT (
on PRON on
fait VERB faire ind_pre
le DET le
PPCM NOUN ppcm
des ADP de
périodes NOUN période
dans ADP dans
Z2 PROPN Z2
Z NOUN z
et CCONJ et
dans ADP dans
Z5 VERB z5
Z NOUN z
) PUNCT )
Juste ADV juste
pour ADP pour
le DET le
plaisir NOUN plaisir
, PUNCT ,
construisons VERB construire ind_pre
une DET un
situation NOUN situation
où PRON où
la DET le
période NOUN période
est VERB être ind_pre
60 NUM 60
. PUNCT .
Le DET le
polynôme NOUN polynôme
caractéristique ADJ caractéristique
dans ADP dans
Z NOUN z
Z NOUN z
doit VERB devoir ind_pre
être VERB être inf
X NOUN x
2 NUM 2
X NOUN x
1 PRON 1
( PUNCT (
pour ADP pour
obtenir VERB obtenir inf
le DET le
3 NUM 3
) PUNCT )
, PUNCT ,
et CCONJ et
être VERB être inf
de ADP de
la DET le
forme NOUN forme
( PUNCT (
X NOUN x
) PUNCT )
2 NUM 2
dans ADP dans
Z5 VERB z5
Z NOUN z
, PUNCT ,
( PUNCT (
matrice NOUN matrice
étant VERB être par_pre
non-diagonalisable ADJ non-diagonalisabl
( PUNCT (
pour ADP pour
obtenir VERB obtenir inf
le DET le
20 NUM 20
) PUNCT )
. PUNCT .
Prenons VERB prendre ind_pre
, PUNCT ,
par ADP par
exemple NOUN exemple
2 NUM 2
. PUNCT .
On PRON on
trouve VERB trouver ind_pre
donc ADV donc
donc ADV donc
, PUNCT ,
par ADP par
exemple NOUN exemple
, PUNCT ,
a VERB avoir ind_pre
9 NUM 9
et CCONJ et
b NOUN b
1 NUM 1
. PUNCT .
La DET le
vérification NOUN vérification
par ADP par
le DET le
calcul NOUN calcul
donne VERB donner ind_pre
, PUNCT ,
pour ADP pour
les DET le
63 NUM 63
premiers ADJ premier
termes NOUN terme
( PUNCT (
avec ADP avec
u0 PROPN u0
u1 NUM u1
1 NUM 1
) PUNCT )
Application NOUN application
linéaire ADJ linéaire
, PUNCT ,
46 NUM 46
Automorphisme PROPN Automorphisme
, PUNCT ,
46 NUM 46
adaptée VERB adapter par_pas
à ADP à
une DET un
somme NOUN somme
directe ADJ direct
, PUNCT ,
43 NUM 43
ante DET ante
- PROPN -
duale ADJ dual
, PUNCT ,
70 NUM 70
d' ADP de
un DET un
espace NOUN espace
vectoriel ADJ vectoriel
, PUNCT ,
35 NUM 35
Codimension PROPN Codimension
, PUNCT ,
72 NUM 72
Coefficients NOUN coefficient
d' ADP de
une DET un
matrice NOUN matrice
, PUNCT ,
90 NUM 90
Cofacteur PROPN Cofacteur
d' ADP de
une DET un
matrice NOUN matrice
carrée ADJ carré
, PUNCT ,
170 NUM 170
Comatrice PROPN Comatrice
, PUNCT ,
170 NUM 170
Combinaison NOUN combinaison
linéaire ADJ linéaire
, PUNCT ,
21 NUM 21
Commutant VERB commuter par_pre
d' ADP de
un DET un
endomorphisme NOUN endomorphisme
, PUNCT ,
248 NUM 248
Condition NOUN condition
initiale ADJ initial
( PUNCT (
d' ADP de
un DET un
système NOUN système
linéaire ADJ linéaire
) PUNCT )
, PUNCT ,
207 NUM 207
Décomposition NOUN décomposition
LU PROPN LU
, PUNCT ,
180 NUM 180
Dimension NOUN dimension
d' ADP de
un DET un
espace NOUN espace
vectoriel ADJ vectoriel
, PUNCT ,
39 NUM 39
Drapeau NOUN drapeau
stable ADJ stable
, PUNCT ,
199 NUM 199
Droite NOUN droite
vectorielle ADJ vectoriel
, PUNCT ,
39 NUM 39
Dual PROPN Dual
d' ADP de
un DET un
espace NOUN espace
vectoriel ADJ vectoriel
, PUNCT ,
68 NUM 68
Décomposition NOUN décomposition
de ADP de
Dunford PROPN Dunford
, PUNCT ,
247 NUM 247
Décomposition NOUN décomposition
en ADP en
somme NOUN somme
directe ADJ direct
, PUNCT ,
32 NUM 32
Déterminant ADJ déterminant
d' ADP de
un DET un
endomorphisme NOUN endomorphisme
, PUNCT ,
162 NUM 162
d' ADP de
une DET un
famille NOUN famille
de ADP de
vecteurs NOUN vecteur
, PUNCT ,
158 NUM 158
d' ADP de
une DET un
matrice NOUN matrice
carrée ADJ carré
, PUNCT ,
160 NUM 160
de ADP de
Vandermonde PROPN Vandermonde
, PUNCT ,
173 NUM 173
Éléments NOUN élément
propres ADJ propre
, PUNCT ,
184 NUM 184
Endomorphisme PROPN Endomorphisme
, PUNCT ,
46 NUM 46
diagonalisable ADJ diagonalisable
, PUNCT ,
196 NUM 196
trigonalisable ADJ trigonalisable
, PUNCT ,
199 NUM 199
Équation NOUN équation
d' ADP de
un DET un
hyperplan NOUN hyperplan
, PUNCT ,
71 NUM 71
Espace PROPN Espace else
caractéristique ADJ caractéristique
, PUNCT ,
245 NUM 245
Espace PROPN Espace else
propre ADJ propre
d' ADP de
un DET un
endomorphisme NOUN endomorphisme
, PUNCT ,
183 NUM 183
d' ADP de
une DET un
matrice NOUN matrice
, PUNCT ,
183 NUM 183
Espace PROPN Espace else
vectoriel ADJ vectoriel
, PUNCT ,
19 NUM 19
de ADP de
dimension NOUN dimension
finie VERB finir par_pas
, PUNCT ,
38 NUM 38
Exponentielle PROPN Exponentielle
d' ADP de
endomorphisme NOUN endomorphisme
, PUNCT ,
240 NUM 240
Famille PROPN Famille
duale ADJ dual
, PUNCT ,
69 NUM 69
Fonctions NOUN fonction
spline NOUN spline
, PUNCT ,
85 NUM 85
Forme NOUN forme else
p NOUN p
- NOUN -
linéaire ADJ linéaire
, PUNCT ,
154 NUM 154
anti-symétrique ADJ anti-symétriqu
, PUNCT ,
155 NUM 155
symétrique ADJ symétrique
, PUNCT ,
155 NUM 155
Forme NOUN forme else
de ADP de
Smith PROPN Smith
, PUNCT ,
273 NUM 273
Forme NOUN forme else
linéaire ADJ linéaire
, PUNCT ,
46 NUM 46
, PUNCT ,
68 NUM 68
Groupe NOUN groupe else
symétrique ADJ symétrique
, PUNCT ,
151 NUM 151
Hyperplan PROPN Hyperplan
d' ADP de
un DET un
espace NOUN espace
vectoriel ADJ vectoriel
, PUNCT ,
71 NUM 71
Idéal ADJ idéal
annulateur NOUN annulateur
, PUNCT ,
230 NUM 230
d' ADP de
une DET un
application NOUN application
linéaire ADJ linéaire
, PUNCT ,
49 NUM 49
d' ADP de
une DET un
matrice NOUN matrice
, PUNCT ,
114 NUM 114
Interpolation NOUN interpolation
de ADP de
Lagrange PROPN Lagrange
, PUNCT ,
80 NUM 80
Isomorphisme PROPN Isomorphisme
, PUNCT ,
46 NUM 46
Matrice NOUN matrice
, PUNCT ,
89 NUM 89
anti-symétrique ADJ anti-symétriqu
, PUNCT ,
106 NUM 106
augmentée VERB augmenter par_pas
, PUNCT ,
140 NUM 140
circulante NOUN circulante
, PUNCT ,
198 NUM 198
compagnon NOUN compagnon
, PUNCT ,
232 NUM 232
d' ADP de
un DET un
vecteur NOUN vecteur
, PUNCT ,
90 NUM 90
d' ADP de
une DET un
application NOUN application
linéaire ADJ linéaire
, PUNCT ,
90 NUM 90
d' ADP de
une DET un
famille NOUN famille
de ADP de
vecteurs NOUN vecteur
, PUNCT ,
109 NUM 109
de ADP de
dilatation NOUN dilatation
, PUNCT ,
121 NUM 121
de ADP de
passage NOUN passage
, PUNCT ,
110 NUM 110
de ADP de
permutation NOUN permutation
, PUNCT ,
121 NUM 121
de ADP de
transvection NOUN transvection
, PUNCT ,
121 NUM 121
diagonale ADJ diagonal
, PUNCT ,
106 NUM 106
diagonalisable ADJ diagonalisable
, PUNCT ,
196 NUM 196
identité NOUN identité
, PUNCT ,
100 NUM 100
inversible ADJ inversible
, PUNCT ,
108 NUM 108
symétrique ADJ symétrique
, PUNCT ,
106 NUM 106
triangulaire ADJ triangulaire
, PUNCT ,
106 NUM 106
trigonalisable ADJ trigonalisable
, PUNCT ,
200 NUM 200
semblables ADJ semblable
, PUNCT ,
119 NUM 119
équivalentes ADJ équivalent
, PUNCT ,
119 NUM 119
Mineur NOUN mineur
d' ADP de
une DET un
matrice NOUN matrice
carrée ADJ carré
, PUNCT ,
170 NUM 170
Multiplicité NOUN multiplicité
d' ADP de
une DET un
valeur NOUN valeur
propre ADJ propre
, PUNCT ,
195 NUM 195
d' ADP de
une DET un
application NOUN application
linéaire ADJ linéaire
, PUNCT ,
49 NUM 49
d' ADP de
une DET un
matrice NOUN matrice
, PUNCT ,
114 NUM 114
Orthogonal PROPN Orthogonal
( PUNCT (
direct NOUN direct
) PUNCT )
d' ADP de
une DET un
partie NOUN partie
, PUNCT ,
77 NUM 77
( PUNCT (
indirect NOUN indirect
) PUNCT )
d' ADP de
une DET un
partie NOUN partie
, PUNCT ,
77 NUM 77
Partie NOUN partie
ou CCONJ ou
famille NOUN famille
génératrice NOUN génératrice
, PUNCT ,
25 NUM 25
Partition NOUN partition
d' ADP de
un DET un
ensemble NOUN ensemble
, PUNCT ,
116 NUM 116
Permutation NOUN permutation
, PUNCT ,
151 NUM 151
Plan NOUN plan
vectoriel ADJ vectoriel
, PUNCT ,
39 NUM 39
caractéristique ADJ caractéristique
, PUNCT ,
193 NUM 193
d' ADP de
endomorphisme NOUN endomorphisme
, PUNCT ,
227 NUM 227
de ADP de
matrice NOUN matrice
, PUNCT ,
227 NUM 227
minimal ADJ minimal
, PUNCT ,
231 NUM 231
d' ADP de
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
22 NUM 22
de ADP de
deux NUM deux
matrices NOUN matrice
, PUNCT ,
98 NUM 98
de ADP de
Kronecker PROPN Kronecker
, PUNCT ,
146 NUM 146
Projecteur NOUN projecteur
, PUNCT ,
53 NUM 53
Projection NOUN projection
, PUNCT ,
52 NUM 52
Trace NOUN trace else
d' ADP de
une DET un
matrice NOUN matrice
, PUNCT ,
107 NUM 107
Transposition NOUN transposition
, PUNCT ,
152 NUM 152
Transposée VERB transposer par_pas
d' ADP de
une DET un
matrice NOUN matrice
, PUNCT ,
103 NUM 103
Valeur NOUN valeur
propre ADJ propre
d' ADP de
un DET un
endomorphisme NOUN endomorphisme
, PUNCT ,
183 NUM 183
d' ADP de
une DET un
matrice NOUN matrice
, PUNCT ,
183 NUM 183
Vecteur NOUN vecteur
propre ADJ propre
d' ADP de
un DET un
endomorphisme NOUN endomorphisme
, PUNCT ,
183 NUM 183
d' ADP de
une DET un
matrice NOUN matrice
, PUNCT ,
183 NUM 183
Vecteurs NOUN vecteur
, PUNCT ,
20 NUM 20
indépendants ADJ indépendant
, PUNCT ,
34 NUM 34
linéairement ADV linéairement
dépendants ADJ dépendant
, PUNCT ,
34 NUM 34
d' ADP de
une DET un
application NOUN application
linéaire ADJ linéaire
, PUNCT ,
55 NUM 55
d' ADP de
une DET un
matrice NOUN matrice
, PUNCT ,
114 NUM 114
Rayon NOUN rayon
spectral ADJ spectral
, PUNCT ,
239 NUM 239
d' ADP de
équivalence NOUN équivalence
, PUNCT ,
116 NUM 116
réflexive NOUN réflexive
, PUNCT ,
116 NUM 116
symétrique ADJ symétrique
, PUNCT ,
116 NUM 116
transitive ADJ transitif
, PUNCT ,
116 NUM 116
Scalaires NOUN scalaire
, PUNCT ,
20 NUM 20
Second ADJ second
membre NOUN membre
( PUNCT (
d' ADP de
un DET un
système NOUN système
linéaire ADJ linéaire
) PUNCT )
, PUNCT ,
207 NUM 207
Signature VERB signature
d' ADP de
une DET un
permutation NOUN permutation
, PUNCT ,
152 NUM 152
de ADP de
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
, PUNCT ,
28 NUM 28
d' ADP de
une DET un
famille NOUN famille
d' ADP de
espaces NOUN espace
vectoriels NOUN vectoriel
, PUNCT ,
31 NUM 31
de ADP de
deux NUM deux
sous-espaces NOUN sous-espace
vectoriels NOUN vectoriel
, PUNCT ,
30 NUM 30
Sous-espace PROPN Sous-espace
vectoriel NOUN vectoriel
, PUNCT ,
23 NUM 23
engendré VERB engendrer par_pas
par ADP par
une DET un
partie NOUN partie
, PUNCT ,
25 NUM 25
stable ADJ stable
, PUNCT ,
52 NUM 52
d' ADP de
un DET un
endomorphisme NOUN endomorphisme
, PUNCT ,
183 NUM 183
d' ADP de
une DET un
matrice NOUN matrice
, PUNCT ,
183 NUM 183
Supplémentaire ADJ supplémentaire
d' ADP de
un DET un
sous-espace NOUN sous-espace
vectoriel NOUN vectoriel
, PUNCT ,
32 NUM 32
Support NOUN support
d' ADP de
une DET un
famille NOUN famille
, PUNCT ,
26 NUM 26
Symbole NOUN symbole
de ADP de
Kronecker PROPN Kronecker
, PUNCT ,
58 NUM 58
Symétrie NOUN symétrie
, PUNCT ,
54 NUM 54
associé VERB associer par_pas
, PUNCT ,
207 NUM 207
Système NOUN système
linéaire ADJ linéaire
, PUNCT ,
78 NUM 78
de ADP de
Cramer PROPN Cramer
, PUNCT ,
140 NUM 140
différentiel ADJ différentiel
, PUNCT ,
215 NUM 215
homogène ADJ homogène
, PUNCT ,
78 NUM 78
associé VERB associer par_pas
, PUNCT ,
78 NUM 78
récurrent NOUN récurrent
, PUNCT ,
207 NUM 207
Caractérisation NOUN caractérisation
des ADP de
applications NOUN application
linéaires ADJ linéaire
injectives ADJ injectif
, PUNCT ,
67 NUM 67
surjectives ADV surjectives
, PUNCT ,
67 NUM 67
des ADP de
automorphismes NOUN automorphisme
en ADP en
dimension NOUN dimension
finie ADJ fini
, PUNCT ,
57 NUM 57
des ADP de
classes NOUN classe
de ADP de
similitude NOUN similitude
, PUNCT ,
270 NUM 270
des ADP de
endomorphismes NOUN endomorphisme
diagonalisables NOUN diagonalisable
, PUNCT ,
197 NUM 197
, PUNCT ,
229 NUM 229
trigonalisables ADJ trigonalisable
, PUNCT ,
200 PRON 200
, PUNCT ,
234 NUM 234
des ADP de
hyperplans NOUN hyperplan
, PUNCT ,
72 NUM 72
des ADP de
matrices NOUN matrice
équivalentes ADJ équivalent
, PUNCT ,
120 NUM 120
Changement NOUN changement
de ADP de
base NOUN base
pour ADP pour
les DET le
applications NOUN application
linéaires ADJ linéaire
, PUNCT ,
111 NUM 111
pour ADP pour
les DET le
vecteurs NOUN vecteur
, PUNCT ,
111 NUM 111
Correspondance PROPN Correspondance
matrices NOUN matrice
- ADJ -
blocs NOUN bloc
et CCONJ et
décomposition NOUN décomposition
en ADP en
somme NOUN somme
directe ADJ direct
, PUNCT ,
144 NUM 144
de ADP de
co-diagonalisation NOUN co-diagonalisation
, PUNCT ,
205 NUM 205
de ADP de
co-trigonalisation PROPN co-trigonalisation
, PUNCT ,
205 NUM 205
Développement NOUN développement
d' ADP de
un DET un
déterminant NOUN déterminant
, PUNCT ,
171 NUM 171
Forme NOUN forme else
de ADP de
Jordan PROPN Jordan
d' ADP de
un DET un
endomorphisme NOUN endomorphisme
nilpotent VERB nilpoter
, PUNCT ,
249 NUM 249
trigonalisable ADJ trigonalisable
, PUNCT ,
249 NUM 249
Formule NOUN formule else
de ADP de
Grassman PROPN Grassman
, PUNCT ,
44 NUM 44
Invariants NOUN invariant
de ADP de
similitude NOUN similitude
, PUNCT ,
270 NUM 270
Lemme NOUN lemme
des ADP de
noyaux NOUN noyau
, PUNCT ,
228 NUM 228
Mise NOUN mise else
en ADP en
équation NOUN équation
des ADP de
sous-espaces NOUN sous-espace
de ADP de
codimensions NOUN codimension
finies ADJ fini
, PUNCT ,
75 NUM 75
Pivot PROPN Pivot
de ADP de
Gauss PROPN Gauss
, PUNCT ,
127 NUM 127
Rang NOUN rang
d' ADP de
une DET un
composée NOUN composée
, PUNCT ,
56 NUM 56
d' ADP de
extension NOUN extension
linéaire ADJ linéaire
, PUNCT ,
66 NUM 66
de ADP de
Cayley PROPN Cayley
- PROPN -
Hamilton PROPN Hamilton
, PUNCT ,
233 NUM 233
de ADP de
factorisation NOUN factorisation
des ADP de
applications NOUN application
linéaires ADJ linéaire
, PUNCT ,
62 NUM 62
de ADP de
Frobenius NOUN frobeniu
, PUNCT ,
269 NUM 269
de ADP de
l' DET le
échange NOUN échange
, PUNCT ,
38 NUM 38
de ADP de
la DET le
base NOUN base
incomplète ADJ incomplet
, PUNCT ,
40 NUM 40
des ADP de
faisceaux NOUN faisceau
d' ADP de
hyperplans NOUN hyperplan
, PUNCT ,
73 NUM 73
du ADP de
rang NOUN rang
, PUNCT ,
57 NUM 57
du ADP de
relèvement NOUN relèvement
linéaire ADJ linéaire
, PUNCT ,
65 NUM 65
Commandes NOUN commande
Wxmaxima PROPN Wxmaxima
binomial PROPN binomial
, PUNCT ,
208 NUM 208
charpoly PROPN charpoly
, PUNCT ,
234 NUM 234
columnswap ADJ columnswap
, PUNCT ,
279 NUM 279
eigenvalues ADJ eigenvalue
, PUNCT ,
184 NUM 184
, PUNCT ,
190 NUM 190
identfor PROPN identfor
, PUNCT ,
175 NUM 175
cspline ADJ csplin
, PUNCT ,
86 NUM 86
length X length
, PUNCT ,
136 NUM 136
load(solverec PROPN load(solverec
) PUNCT )
, PUNCT ,
211 NUM 211
polytocompanion NOUN polytocompanion
, PUNCT ,
270 NUM 270
, PUNCT ,
271 NUM 271
randompermutation PROPN randompermutation
, PUNCT ,
137 NUM 137
setify PROPN setify
, PUNCT ,
26 NUM 26
solverec NUM solverec
, PUNCT ,
211 NUM 211
kroneckerproduct NOUN kroneckerproduct
, PUNCT ,
147 NUM 147
Commandes NOUN commande
Python NOUN python
matplotlib ADJ matplotlib
, PUNCT ,
26 NUM 26
binomial PROPN binomial
, PUNCT ,
208 NUM 208
Dictionnaire NOUN dictionnaire
, PUNCT ,
113 NUM 113
.factorlist NOUN .factorlist
, PUNCT ,
235 NUM 235
BlockDiagMatrix VERB blockdiagmatrix
, PUNCT ,
272 NUM 272
BlockMatrix PROPN BlockMatrix
, PUNCT ,
148 NUM 148
expand ADJ expand
, PUNCT ,
186 NUM 186
Function NOUN function
, PUNCT ,
192 NUM 192
initsession NOUN initsession
, PUNCT ,
26 NUM 26
interpolate ADJ interpolat
, PUNCT ,
82 NUM 82
, PUNCT ,
85 NUM 85
interpolatingspline ADJ interpolatingsplin
, PUNCT ,
86 NUM 86
.charpoly PROPN .charpoly
, PUNCT ,
235 NUM 235
.cofactormatrix NOUN .cofactormatri
, PUNCT ,
176 NUM 176
.extract NOUN .extract
, PUNCT ,
170 NUM 170
.allcoeffs PROPN .allcoeffs
, PUNCT ,
271 NUM 271
rsolve VERB rsolve
, PUNCT ,
213 NUM 213
integer VERB integer
, PUNCT ,
192 NUM 192
Figure NOUN figure else
5.1 NUM 5.1
Similitude NOUN similitude
Trajectoires NOUN trajectoire
du ADP de
système NOUN système
: PUNCT :
. PUNCT .